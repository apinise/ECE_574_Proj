
Cadence Innovus(TM) Implementation System.
Copyright 2021 Cadence Design Systems, Inc. All rights reserved worldwide.

Version:	v21.18-s099_1, built Tue Jul 18 13:03:50 PDT 2023
Options:	-stylus -files run_innovus.tcl 
Date:		Thu Dec  7 19:08:30 2023
Host:		arc-schaumont-class-vm (x86_64 w/Linux 3.10.0-1160.99.1.el7.x86_64) (1core*4cpus*Intel Xeon Processor (Cascadelake) 16384KB)
OS:		Red Hat Enterprise Linux Server 7.9 (Maipo)

License:
		[19:08:30.456105] Configured Lic search path (21.01-s002): 5280@arclic02.wpi.edu

		invs	Innovus Implementation System	21.1	checkout succeeded
		8 CPU jobs allowed with the current license(s). Use set_multi_cpu_usage to set your required CPU count.


Create and set the environment variable TMPDIR to /tmp/innovus_temp_31472_arc-schaumont-class-vm_ebapinis_EhuNvd.

Change the soft stacksize limit to 0.2%RAM (31 mbytes). Set global soft_stack_size_limit to change the value.

**INFO:  MMMC transition support version v31-84 

#@ Processing -files option
@innovus 1> source run_innovus.tcl
#@ Begin verbose source (pre): source run_innovus.tcl
@@file 1: set_db init_power_nets  VDD
@@file 2: set_db init_ground_nets VSS
@file 3:
@file 4: source ./syndb/final.invs_setup.tcl
#@ Begin verbose source ./syndb/final.invs_setup.tcl (pre)
@file 1: ################################################################################
@file 2: #
@file 3: # Innovus setup file
@file 4: # Created by Genus(TM) Synthesis Solution 21.18-s082_1
@file 5: #   on 12/07/2023 19:07:13
@file 6: #
@file 7: ################################################################################
@file 8: #
@file 9: # Genus(TM) Synthesis Solution setup file
@file 10: # This file can only be run in Innovus Common UI mode.
@file 11: #
@file 12: ################################################################################
@file 13:
@file 14:
@file 15: # Version Check
@file 16: ###########################################################
@file 17:
@file 18: namespace eval ::genus_innovus_version_check { 
        set minimum_version 21
        set maximum_version 22
        regexp {\d\d} [get_db program_version] this_version
        puts "Checking Innovus major version against Genus expectations ..."
        if { $this_version < $minimum_version || $this_version > $maximum_version } {
          error "**ERROR: this operation requires Innovus major version to be between '$minimum_version' and '$maximum_version'."
        }
      }
Checking Innovus major version against Genus expectations ...
@file 27:
@file 28: set _t0 [clock seconds]
@file 29: puts [format  {%%%s Begin Genus to Innovus Setup (%s)} \# [clock format $_t0 -format {%m/%d %H:%M:%S}]]
%# Begin Genus to Innovus Setup (12/07 19:08:52)
@@file 30: set_db read_physical_allow_multiple_port_pin_without_must_join true
@@file 31: set_db must_join_all_ports true
@@file 32: set_db init_ground_nets VSS
@@file 33: set_db init_power_nets VDD
@@file 34: set_db timing_cap_unit 1pf
@@file 35: set_db timing_time_unit 1ns
@file 36:
@file 37:
@file 38: # Design Import
@file 39: ################################################################################
@file 40: source -quiet /opt/cadence/GENUS211/tools.lnx86/lib/cdn/rc/edi/innovus_procs_common_ui.tcl
@file 41: ## Reading FlowKit settings file
@file 42: source ./syndb/final.flowkit_settings.tcl
#@ Begin verbose source ./syndb/final.flowkit_settings.tcl (pre)
@file 1: #############################################################
@file 2: #####   FLOW WRITE   ########################################
@file 3: ##
@file 4: ## Written by Genus(TM) Synthesis Solution version 21.18-s082_1
@file 5: ## flowkit v21.12-s019_1
@file 6: ## Written on 19:07:10 07-Dec 2023
@file 7: #############################################################
@file 8: #####   Flow Definitions   ##################################
@file 9:
@file 10: #############################################################
@file 11: #####   Step Definitions   ##################################
@file 12:
@file 13:
@file 14: #############################################################
@file 15: #####   Attribute Definitions   #############################
@file 16:
@file 17: if {[is_attribute flow_edit_end_steps -obj_type root]} {
@@file 17: set_db flow_edit_end_steps {}
@file 17: }
@file 18: if {[is_attribute flow_edit_start_steps -obj_type root]} {
@@file 18: set_db flow_edit_start_steps {}
@file 18: }
@file 19: if {[is_attribute flow_footer_tcl -obj_type root]} {
@@file 19: set_db flow_footer_tcl {}
@file 19: }
@file 20: if {[is_attribute flow_header_tcl -obj_type root]} {
@@file 20: set_db flow_header_tcl {}
@file 20: }
@file 21: if {[is_attribute flow_metadata -obj_type root]} {
@@file 21: set_db flow_metadata {}
@file 21: }
@file 22: if {[is_attribute flow_setup_config -obj_type root]} {
@@file 22: set_db flow_setup_config {HUDDLE {!!map {}}}
@file 22: }
@file 23: if {[is_attribute flow_step_begin_tcl -obj_type root]} {
@@file 23: set_db flow_step_begin_tcl {}
@file 23: }
@file 24: if {[is_attribute flow_step_check_tcl -obj_type root]} {
@@file 24: set_db flow_step_check_tcl {}
@file 24: }
@file 25: if {[is_attribute flow_step_end_tcl -obj_type root]} {
@@file 25: set_db flow_step_end_tcl {}
@file 25: }
@file 26: if {[is_attribute flow_step_order -obj_type root]} {
@@file 26: set_db flow_step_order {}
@file 26: }
@file 27: if {[is_attribute flow_summary_tcl -obj_type root]} {
@@file 27: set_db flow_summary_tcl {}
@file 27: }
@file 28: if {[is_attribute flow_template_feature_definition -obj_type root]} {
@@file 28: set_db flow_template_feature_definition {}
@file 28: }
@file 29: if {[is_attribute flow_template_type -obj_type root]} {
@@file 29: set_db flow_template_type {}
@file 29: }
@file 30: if {[is_attribute flow_template_tools -obj_type root]} {
@@file 30: set_db flow_template_tools {}
@file 30: }
@file 31: if {[is_attribute flow_template_version -obj_type root]} {
@@file 31: set_db flow_template_version {}
@file 31: }
@file 32: if {[is_attribute flow_user_templates -obj_type root]} {
@@file 32: set_db flow_user_templates {}
@file 32: }
@file 34:
@file 35: #############################################################
@file 36: #####   Flow History   ######################################
@file 37:
@file 38: if {[is_attribute flow_user_templates -obj_type root]} {
@@file 38: set_db flow_user_templates {}
@file 38: }
@file 39: if {[is_attribute flow_plugin_steps -obj_type root]} {
@@file 39: set_db flow_plugin_steps {}
@file 39: }
@file 40: if {[is_attribute flow_template_type -obj_type root]} {
@@file 40: set_db flow_template_type {}
@file 40: }
@file 41: if {[is_attribute flow_template_tools -obj_type root]} {
@@file 41: set_db flow_template_tools {}
@file 41: }
@file 42: if {[is_attribute flow_template_version -obj_type root]} {
@@file 42: set_db flow_template_version {}
@file 42: }
@file 43: if {[is_attribute flow_template_feature_definition -obj_type root]} {
@@file 43: set_db flow_template_feature_definition {}
@file 43: }
@file 44: if {[is_attribute flow_remark -obj_type root]} {
@@file 44: set_db flow_remark {}
@file 44: }
@file 45: if {[is_attribute flow_features -obj_type root]} {
@@file 45: set_db flow_features {}
@file 45: }
@file 46: if {[is_attribute flow_feature_values -obj_type root]} {
@@file 46: set_db flow_feature_values {}
@file 46: }
@file 47: if {[is_attribute flow_write_db_args -obj_type root]} {
@@file 47: set_db flow_write_db_args {}
@file 47: }
@file 48: if {[is_attribute flow_write_db_sdc -obj_type root]} {
@@file 48: set_db flow_write_db_sdc true
@file 48: }
@file 49: if {[is_attribute flow_write_db_common -obj_type root]} {
@@file 49: set_db flow_write_db_common false
@file 49: }
@file 50: if {[is_attribute flow_post_db_overwrite -obj_type root]} {
@@file 50: set_db flow_post_db_overwrite {}
@file 50: }
@file 51: if {[is_attribute flow_step_order -obj_type root]} {
@@file 51: set_db flow_step_order {}
@file 51: }
@file 52: if {[is_attribute flow_step_begin_tcl -obj_type root]} {
@@file 52: set_db flow_step_begin_tcl {}
@file 52: }
@file 53: if {[is_attribute flow_step_end_tcl -obj_type root]} {
@@file 53: set_db flow_step_end_tcl {}
@file 53: }
@file 54: if {[is_attribute flow_step_last -obj_type root]} {
@@file 54: set_db flow_step_last {}
@file 54: }
@file 55: if {[is_attribute flow_step_current -obj_type root]} {
@@file 55: set_db flow_step_current {}
@file 55: }
@file 56: if {[is_attribute flow_step_canonical_current -obj_type root]} {
@@file 56: set_db flow_step_canonical_current {}
@file 56: }
@file 57: if {[is_attribute flow_step_next -obj_type root]} {
@@file 57: set_db flow_step_next {}
@file 57: }
@file 58: if {[is_attribute flow_working_directory -obj_type root]} {
@@file 58: set_db flow_working_directory .
@file 58: }
@file 59: if {[is_attribute flow_branch -obj_type root]} {
@@file 59: set_db flow_branch {}
@file 59: }
@file 60: if {[is_attribute flow_caller_data -obj_type root]} {
@@file 60: set_db flow_caller_data {}
@file 60: }
@file 61: if {[is_attribute flow_metrics_snapshot_uuid -obj_type root]} {
@@file 61: set_db flow_metrics_snapshot_uuid a4d080da-8dee-4fd8-8669-c2945afd480f
@file 61: }
@file 62: if {[is_attribute flow_starting_db -obj_type root]} {
@@file 62: set_db flow_starting_db {}
@file 62: }
@file 63: if {[is_attribute flow_db_directory -obj_type root]} {
@@file 63: set_db flow_db_directory dbs
@file 63: }
@file 64: if {[is_attribute flow_report_directory -obj_type root]} {
@@file 64: set_db flow_report_directory reports
@file 64: }
@file 65: if {[is_attribute flow_log_directory -obj_type root]} {
@@file 65: set_db flow_log_directory logs
@file 65: }
@file 66: if {[is_attribute flow_mail_to -obj_type root]} {
@@file 66: set_db flow_mail_to {}
@file 66: }
@file 67: if {[is_attribute flow_exit_when_done -obj_type root]} {
@@file 67: set_db flow_exit_when_done false
@file 67: }
@file 68: if {[is_attribute flow_mail_on_error -obj_type root]} {
@@file 68: set_db flow_mail_on_error false
@file 68: }
@file 69: if {[is_attribute flow_summary_tcl -obj_type root]} {
@@file 69: set_db flow_summary_tcl {}
@file 69: }
@file 70: if {[is_attribute flow_history -obj_type root]} {
@@file 70: set_db flow_history {}
@file 70: }
@file 71: if {[is_attribute flow_step_last_status -obj_type root]} {
@@file 71: set_db flow_step_last_status not_run
@file 71: }
@file 72: if {[is_attribute flow_step_last_msg -obj_type root]} {
@@file 72: set_db flow_step_last_msg {}
@file 72: }
@file 73: if {[is_attribute flow_run_tag -obj_type root]} {
@@file 73: set_db flow_run_tag {}
@file 73: }
@file 74: if {[is_attribute flow_current_cache -obj_type root]} {
@@file 74: set_db flow_current_cache {}
@file 74: }
@file 75: if {[is_attribute flow_step_order_cache -obj_type root]} {
@@file 75: set_db flow_step_order_cache {}
@file 75: }
@file 76: if {[is_attribute flow_step_results_cache -obj_type root]} {
@@file 76: set_db flow_step_results_cache {}
@file 76: }
@file 77: if {[is_attribute flow_metadata -obj_type root]} {
@@file 77: set_db flow_metadata {}
@file 77: }
@file 78: if {[is_attribute flow_execute_in_global -obj_type root]} {
@@file 78: set_db flow_execute_in_global true
@file 78: }
@file 79: if {[is_attribute flow_overwrite_db -obj_type root]} {
@@file 79: set_db flow_overwrite_db false
@file 79: }
@file 80: if {[is_attribute flow_print_run_information -obj_type root]} {
@@file 80: set_db flow_print_run_information false
@file 80: }
@file 81: if {[is_attribute flow_verbose -obj_type root]} {
@@file 81: set_db flow_verbose true
@file 81: }
@file 82: if {[is_attribute flow_print_run_information_full -obj_type root]} {
@@file 82: set_db flow_print_run_information_full false
@file 82: }
@file 83: if {[is_attribute flow_header_tcl -obj_type root]} {
@@file 83: set_db flow_header_tcl {}
@file 83: }
@file 84: if {[is_attribute flow_footer_tcl -obj_type root]} {
@@file 84: set_db flow_footer_tcl {}
@file 84: }
@file 85: if {[is_attribute flow_init_header_tcl -obj_type root]} {
@@file 85: set_db flow_init_header_tcl {}
@file 85: }
@file 86: if {[is_attribute flow_init_footer_tcl -obj_type root]} {
@@file 86: set_db flow_init_footer_tcl {}
@file 86: }
@file 87: if {[is_attribute flow_edit_start_steps -obj_type root]} {
@@file 87: set_db flow_edit_start_steps {}
@file 87: }
@file 88: if {[is_attribute flow_edit_end_steps -obj_type root]} {
@@file 88: set_db flow_edit_end_steps {}
@file 88: }
@file 89: if {[is_attribute flow_step_last_number -obj_type root]} {
@@file 89: set_db flow_step_last_number 0
@file 89: }
@file 90: if {[is_attribute flow_autoload_applets -obj_type root]} {
@@file 90: set_db flow_autoload_applets false
@file 90: }
@file 91: if {[is_attribute flow_autoload_dir -obj_type root]} {
@@file 91: set_db flow_autoload_dir error
@file 91: }
@file 92: if {[is_attribute flow_skip_auto_db_save -obj_type root]} {
@@file 92: set_db flow_skip_auto_db_save true
@file 92: }
@file 93: if {[is_attribute flow_skip_auto_generate_metrics -obj_type root]} {
@@file 93: set_db flow_skip_auto_generate_metrics false
@file 93: }
@file 94: if {[is_attribute flow_top -obj_type root]} {
@@file 94: set_db flow_top {}
@file 94: }
@file 95: if {[is_attribute flow_hier_path -obj_type root]} {
@@file 95: set_db flow_hier_path {}
@file 95: }
@file 96: if {[is_attribute flow_schedule -obj_type root]} {
@@file 96: set_db flow_schedule {}
@file 96: }
@file 97: if {[is_attribute flow_step_check_tcl -obj_type root]} {
@@file 97: set_db flow_step_check_tcl {}
@file 97: }
@file 98: if {[is_attribute flow_script -obj_type root]} {
@@file 98: set_db flow_script {}
@file 98: }
@file 99: if {[is_attribute flow_yaml_script -obj_type root]} {
@@file 99: set_db flow_yaml_script {}
@file 99: }
@file 100: if {[is_attribute flow_cla_enabled_features -obj_type root]} {
@@file 100: set_db flow_cla_enabled_features {}
@file 100: }
@file 101: if {[is_attribute flow_cla_inject_tcl -obj_type root]} {
@@file 101: set_db flow_cla_inject_tcl {}
@file 101: }
@file 102: if {[is_attribute flow_error_message -obj_type root]} {
@@file 102: set_db flow_error_message {}
@file 102: }
@file 103: if {[is_attribute flow_error_errorinfo -obj_type root]} {
@@file 103: set_db flow_error_errorinfo {}
@file 103: }
@file 104: if {[is_attribute flow_exclude_time_for_init_flow -obj_type root]} {
@@file 104: set_db flow_exclude_time_for_init_flow false
@file 104: }
@file 105: if {[is_attribute flow_error_write_db -obj_type root]} {
@@file 105: set_db flow_error_write_db true
@file 105: }
@file 106: if {[is_attribute flow_advanced_metric_isolation -obj_type root]} {
@@file 106: set_db flow_advanced_metric_isolation flow
@file 106: }
@file 107: if {[is_attribute flow_yaml_root -obj_type root]} {
@@file 107: set_db flow_yaml_root {}
@file 107: }
@file 108: if {[is_attribute flow_yaml_root_dir -obj_type root]} {
@@file 108: set_db flow_yaml_root_dir {}
@file 108: }
@file 109: if {[is_attribute flow_setup_config -obj_type root]} {
@@file 109: set_db flow_setup_config {HUDDLE {!!map {}}}
@file 109: }
@file 111: #############################################################
@file 112: #####   User Defined Attributes   ###########################
@file 113:
#@ End verbose source ./syndb/final.flowkit_settings.tcl
@file 43:
@file 44: source ./syndb/final.invs_init.tcl
#@ Begin verbose source ./syndb/final.invs_init.tcl (pre)
@file 1: ################################################################################
@file 2: #
@file 3: # Init setup file
@file 4: # Created by Genus(TM) Synthesis Solution on 12/07/2023 19:07:13
@file 5: #
@file 6: ################################################################################
@file 7: if { ![is_common_ui_mode] } {...}
@file 8:
@@file 9: read_mmmc ./syndb/final.mmmc.tcl
#@ Begin verbose source ./syndb/final.mmmc.tcl (pre)
@file 1: #################################################################################
@file 2: #
@file 3: # Created by Genus(TM) Synthesis Solution 21.18-s082_1 on Thu Dec 07 19:07:07 EST 2023
@file 4: #
@file 5: #################################################################################
@file 6:
@file 7: ## library_sets
@@file 8: create_library_set -name default_libs \
    -timing { /opt/cadence/libraries/gsclib045_all_v4.7/gsclib045/timing/fast_vdd1v2_basicCells.lib }
@file 10:
@file 11: ## opcond
@@file 12: create_opcond -name op_cond_default \
    -process 1.0 \
    -voltage 1.0 \
    -temperature 125.0
@file 16:
@file 17: ## timing_condition
@@file 18: create_timing_condition -name default_tc \
    -opcond op_cond_default \
    -library_sets { default_libs }
@file 21:
@file 22: ## rc_corner
@@file 23: create_rc_corner -name default_rc \
    -temperature 125.0 \
    -qrc_tech /opt/cadence/libraries/gsclib045_all_v4.7/gsclib045/qrc/qx/gpdk045.tch \
    -pre_route_res 1.0 \
    -pre_route_cap 1.0 \
    -pre_route_clock_res 0.0 \
    -pre_route_clock_cap 0.0 \
    -post_route_res {1.0 1.0 1.0} \
    -post_route_cap {1.0 1.0 1.0} \
    -post_route_cross_cap {1.0 1.0 1.0} \
    -post_route_clock_res {1.0 1.0 1.0} \
    -post_route_clock_cap {1.0 1.0 1.0} \
    -post_route_clock_cross_cap {1.0 1.0 1.0}
@file 36:
@file 37: ## delay_corner
@@file 38: create_delay_corner -name default_dc \
    -early_timing_condition { default_tc } \
    -late_timing_condition { default_tc } \
    -early_rc_corner default_rc \
    -late_rc_corner default_rc
@file 43:
@file 44: ## constraint_mode
@@file 45: create_constraint_mode -name default_const \
    -sdc_files { ./syndb/final.default_const.sdc }
@file 47:
@file 48: ## analysis_view
@@file 49: create_analysis_view -name func_default \
    -constraint_mode default_const \
    -delay_corner default_dc
@file 52:
@file 53: ## set_analysis_view
@@file 54: set_analysis_view -setup { func_default } \
                  -hold { func_default }
#@ End verbose source ./syndb/final.mmmc.tcl
Reading default_libs timing library '/opt/cadence/libraries/gsclib045_all_v4.7/gsclib045/timing/fast_vdd1v2_basicCells.lib' ...
**WARN: (TECHLIB-302):	No function defined for cell 'DECAP9'. The cell will only be used for analysis. (File /opt/cadence/libraries/gsclib045_all_v4.7/gsclib045/timing/fast_vdd1v2_basicCells.lib)
**WARN: (TECHLIB-302):	No function defined for cell 'DECAP8'. The cell will only be used for analysis. (File /opt/cadence/libraries/gsclib045_all_v4.7/gsclib045/timing/fast_vdd1v2_basicCells.lib)
**WARN: (TECHLIB-302):	No function defined for cell 'DECAP7'. The cell will only be used for analysis. (File /opt/cadence/libraries/gsclib045_all_v4.7/gsclib045/timing/fast_vdd1v2_basicCells.lib)
**WARN: (TECHLIB-302):	No function defined for cell 'DECAP6'. The cell will only be used for analysis. (File /opt/cadence/libraries/gsclib045_all_v4.7/gsclib045/timing/fast_vdd1v2_basicCells.lib)
**WARN: (TECHLIB-302):	No function defined for cell 'DECAP5'. The cell will only be used for analysis. (File /opt/cadence/libraries/gsclib045_all_v4.7/gsclib045/timing/fast_vdd1v2_basicCells.lib)
**WARN: (TECHLIB-302):	No function defined for cell 'DECAP4'. The cell will only be used for analysis. (File /opt/cadence/libraries/gsclib045_all_v4.7/gsclib045/timing/fast_vdd1v2_basicCells.lib)
**WARN: (TECHLIB-302):	No function defined for cell 'DECAP3'. The cell will only be used for analysis. (File /opt/cadence/libraries/gsclib045_all_v4.7/gsclib045/timing/fast_vdd1v2_basicCells.lib)
**WARN: (TECHLIB-302):	No function defined for cell 'DECAP2'. The cell will only be used for analysis. (File /opt/cadence/libraries/gsclib045_all_v4.7/gsclib045/timing/fast_vdd1v2_basicCells.lib)
**WARN: (TECHLIB-302):	No function defined for cell 'DECAP10'. The cell will only be used for analysis. (File /opt/cadence/libraries/gsclib045_all_v4.7/gsclib045/timing/fast_vdd1v2_basicCells.lib)
**WARN: (TECHLIB-302):	No function defined for cell 'ANTENNA'. The cell will only be used for analysis. (File /opt/cadence/libraries/gsclib045_all_v4.7/gsclib045/timing/fast_vdd1v2_basicCells.lib)
Read 489 cells in library 'fast_vdd1v2' 
@file 10:
@@file 11: read_physical -lef {/opt/cadence/libraries/gsclib045_all_v4.7/gsclib045/lef/gsclib045_tech.lef /opt/cadence/libraries/gsclib045_all_v4.7/gsclib045/lef/gsclib045_macro.lef}

Loading LEF file /opt/cadence/libraries/gsclib045_all_v4.7/gsclib045/lef/gsclib045_tech.lef ...

Loading LEF file /opt/cadence/libraries/gsclib045_all_v4.7/gsclib045/lef/gsclib045_macro.lef ...
Set DBUPerIGU to M2 pitch 400.
**WARN: (IMPLF-200):	Pin 'A' in macro 'ANTENNA' has no ANTENNAGATEAREA value defined. The library data is incomplete and some process antenna rules will not be checked correctly.
Type 'man IMPLF-200' for more detail.

##  Check design process and node:  
##  Both design process and tech node are not set.

@file 12:
@@file 13: read_netlist ./syndb/final.v
#% Begin Load netlist data ... (date=12/07 19:08:52, mem=748.0M)
*** Begin netlist parsing (mem=1018.1M) ***
Created 489 new cells from 1 timing libraries.
Reading netlist ...
Backslashed names will retain backslash and a trailing blank character.
Reading verilog netlist './syndb/final.v'

*** Memory Usage v#1 (Current mem = 1030.051M, initial mem = 487.109M) ***
*** End netlist parsing (cpu=0:00:00.2, real=0:00:01.0, mem=1030.1M) ***
#% End Load netlist data ... (date=12/07 19:08:53, total cpu=0:00:00.2, real=0:00:01.0, peak res=764.9M, current mem=764.9M)
Top level cell is filter_top.
Hooked 489 DB cells to tlib cells.
Starting recursive module instantiation check.
No recursion found.
Building hierarchical netlist for Cell filter_top ...
*** Netlist is unique.
** info: there are 588 modules.
** info: there are 23566 stdCell insts.

*** Memory Usage v#1 (Current mem = 1095.477M, initial mem = 487.109M) ***
@file 14:
@@file 15: init_design
**WARN: (IMPFP-3961):	The techSite 'CornerSite' has no related standard cells in the LEF/OA library. The calculations for this site type cannot be made unless standard cell models of this type exist in the LEF/OA library. Ignore this warning if the SITE is not used by the library. Alternatively, remove the SITE definition for the LEF/OA library to avoid this message.
Type 'man IMPFP-3961' for more detail.
**WARN: (IMPFP-3961):	The techSite 'IOSite' has no related standard cells in the LEF/OA library. The calculations for this site type cannot be made unless standard cell models of this type exist in the LEF/OA library. Ignore this warning if the SITE is not used by the library. Alternatively, remove the SITE definition for the LEF/OA library to avoid this message.
Type 'man IMPFP-3961' for more detail.
Start create_tracks
Extraction setup Started 
Initializing multi-corner RC extraction with 1 active RC Corners ...
Captable file(s) not specified in multi-corner setup. PreRoute extraction will use technology file. For post_route extraction, default value for effort level would be 'medium' and effort level 'low' would not be allowed.
Generating auto layer map file.
Importing multi-corner technology file(s) for preRoute extraction...
/opt/cadence/libraries/gsclib045_all_v4.7/gsclib045/qrc/qx/gpdk045.tch
Generating auto layer map file.
Completed (cpu: 0:00:03.7 real: 0:00:04.0)
Set Shrink Factor to 1.00000
Summary of Active RC-Corners : 
 
 Analysis View: func_default
    RC-Corner Name        : default_rc
    RC-Corner Index       : 0
    RC-Corner Temperature : 125 Celsius
    RC-Corner Cap Table   : ''
    RC-Corner PreRoute Res Factor         : 1
    RC-Corner PreRoute Cap Factor         : 1
    RC-Corner PostRoute Res Factor        : 1 {1 1 1}
    RC-Corner PostRoute Cap Factor        : 1 {1 1 1}
    RC-Corner PostRoute XCap Factor       : 1 {1 1 1}
    RC-Corner PreRoute Clock Res Factor   : 1	[Derived from postRoute_res (effortLevel low)]
    RC-Corner PreRoute Clock Cap Factor   : 1	[Derived from postRoute_cap (effortLevel low)]
    RC-Corner PostRoute Clock Cap Factor  : 1 {1 1 1} 
    RC-Corner PostRoute Clock Res Factor  : 1 {1 1 1} 
    RC-Corner PostRoute Clock coupling capacitance Factor : 1 {1 1 1} 
    RC-Corner Technology file: '/opt/cadence/libraries/gsclib045_all_v4.7/gsclib045/qrc/qx/gpdk045.tch'
Updating RC grid for preRoute extraction ...
Initializing multi-corner resistance tables ...
Default value for post_route extraction mode's extract_rc_effort_level (extract_rc_effort_level option of set_db) changed to 'medium'.
*Info: initialize multi-corner CTS.
Reading timing constraints file './syndb/final.default_const.sdc' ...
Current (total cpu=0:00:26.4, real=0:00:28.0, peak res=1119.6M, current mem=1119.6M)
**WARN: (TCLCMD-1461):	Skipped unsupported command: set_units (File ./syndb/final.default_const.sdc, Line 9).

**WARN: (TCLCMD-1461):	Skipped unsupported command: set_units (File ./syndb/final.default_const.sdc, Line 10).

filter_top
INFO (CTE): Reading of timing constraints file ./syndb/final.default_const.sdc completed, with 2 WARNING
Ending "Constraint file reading stats" (total cpu=0:00:00.1, real=0:00:00.0, peak res=1138.4M, current mem=1138.4M)
Current (total cpu=0:00:26.5, real=0:00:28.0, peak res=1138.4M, current mem=1138.4M)
Total number of combinational cells: 318
Total number of sequential cells: 152
Total number of tristate cells: 10
Total number of level shifter cells: 0
Total number of power gating cells: 0
Total number of isolation cells: 0
Total number of power switch cells: 0
Total number of pulse generator cells: 0
Total number of always on buffers: 0
Total number of retention cells: 0
Total number of physical cells: 9
List of usable buffers: BUFX2 BUFX12 BUFX16 BUFX20 CLKBUFX2 BUFX3 BUFX4 BUFX6 BUFX8 CLKBUFX12 CLKBUFX16 CLKBUFX20 CLKBUFX3 CLKBUFX4 CLKBUFX6 CLKBUFX8
Total number of usable buffers: 16
List of unusable buffers:
Total number of unusable buffers: 0
List of usable inverters: CLKINVX1 CLKINVX2 CLKINVX12 CLKINVX16 CLKINVX20 CLKINVX4 CLKINVX3 CLKINVX6 CLKINVX8 INVX1 INVX2 INVX12 INVX16 INVX20 INVXL INVX3 INVX4 INVX6 INVX8
Total number of usable inverters: 19
List of unusable inverters:
Total number of unusable inverters: 0
List of identified usable delay cells: DLY1X1 DLY1X4 DLY2X1 DLY2X4 DLY3X1 DLY3X4 DLY4X1 DLY4X4
Total number of identified usable delay cells: 8
List of identified unusable delay cells:
Total number of identified unusable delay cells: 0
#@ End verbose source ./syndb/final.invs_init.tcl
@file 45:
@file 46: # Reading metrics file
@file 47: ################################################################################
@@file 48: read_metric -id current ./syndb/final.metrics.json
@file 49:
@file 50: ## Reading common preserve file for dont_touch and dont_use preserve settings
@file 51: source -quiet ./syndb/final.preserve.tcl
@file 52:
@file 53: ## Reading Innovus Mode attributes file
@file 54: pqos_eval {rcp::read_taf ./syndb/final.mode_attributes.taf.gz}
%# Begin ::rcp::silent_eval (12/07 19:08:58, mem=1465.50M)
%# End ::rcp::silent_eval (12/07 19:08:58, total cpu=03:00:00, real=03:00:00, peak res=1161.83M, current mem=1465.50M)
(final.mode_attributes.taf.gz): Summary count of attributes that could be applied
could_apply(design_bottom_routing_layer) = 1

[final.mode_attributes.taf.gz]: applied 1 attributes with 0 problems.
@file 55:
@file 56:
@file 57: # Mode Setup
@file 58: ################################################################################
@file 59: source ./syndb/final.mode
#@ Begin verbose source ./syndb/final.mode (pre)
@file 1: ################################################################################
@file 2: #
@file 3: # Innovus mode file
@file 4: # Created by Genus(TM) Synthesis Solution on 12/07/2023 19:07:09
@file 5: #
@file 6: ################################################################################
@file 7:
@file 8:
@file 9: # General Mode Settings
@file 10: ################################################################################
@file 11:
@@file 12: set_db timing_apply_default_primary_input_assertion false
@@file 13: set_db timing_analysis_async_checks no_async
@@file 14: set_db extract_rc_layer_independent 1
@@file 15: set_db place_global_reorder_scan false
#@ End verbose source ./syndb/final.mode
@file 60:
@file 61:
@file 62: # MSV Setup
@file 63: ################################################################################
@file 64:
@file 65: # Source cell padding from Genus
@file 66: ################################################################################
@file 67: source -quiet ./syndb/final.cell_pad.tcl 
@file 68:
@file 69:
@file 70: # Reading write_name_mapping file
@file 71: ################################################################################
@file 72:
@file 73: if { [is_attribute -obj_type port original_name] &&
@file 74:            [is_attribute -obj_type pin original_name] &&
@file 75:            [is_attribute -obj_type pin is_phase_inverted]} {
@file 76: source ./syndb/final.wnm_attrs.tcl
#@ Begin verbose source ./syndb/final.wnm_attrs.tcl (pre)
@file 1: catch {set_db port:filter_top/Clk .original_name Clk}
@file 2: catch {set_db port:filter_top/Reset .original_name Reset}
@file 3: catch {set_db {port:filter_top/Din[11]} .original_name {Din[11]}}
@file 4: catch {set_db {port:filter_top/Din[10]} .original_name {Din[10]}}
@file 5: catch {set_db {port:filter_top/Din[9]} .original_name {Din[9]}}
@file 6: catch {set_db {port:filter_top/Din[8]} .original_name {Din[8]}}
@file 7: catch {set_db {port:filter_top/Din[7]} .original_name {Din[7]}}
@file 8: catch {set_db {port:filter_top/Din[6]} .original_name {Din[6]}}
@file 9: catch {set_db {port:filter_top/Din[5]} .original_name {Din[5]}}
@file 10: catch {set_db {port:filter_top/Din[4]} .original_name {Din[4]}}
@file 11: catch {set_db {port:filter_top/Din[3]} .original_name {Din[3]}}
@file 12: catch {set_db {port:filter_top/Din[2]} .original_name {Din[2]}}
@file 13: catch {set_db {port:filter_top/Din[1]} .original_name {Din[1]}}
@file 14: catch {set_db {port:filter_top/Din[0]} .original_name {Din[0]}}
@file 15: catch {set_db port:filter_top/SCK .original_name SCK}
@file 16: catch {set_db port:filter_top/CS .original_name CS}
@file 17: catch {set_db port:filter_top/MOSI .original_name MOSI}
@file 18: catch {set_db {port:filter_top/Dout[11]} .original_name {Dout[11]}}
@file 19: catch {set_db {port:filter_top/Dout[10]} .original_name {Dout[10]}}
@file 20: catch {set_db {port:filter_top/Dout[9]} .original_name {Dout[9]}}
@file 21: catch {set_db {port:filter_top/Dout[8]} .original_name {Dout[8]}}
@file 22: catch {set_db {port:filter_top/Dout[7]} .original_name {Dout[7]}}
@file 23: catch {set_db {port:filter_top/Dout[6]} .original_name {Dout[6]}}
@file 24: catch {set_db {port:filter_top/Dout[5]} .original_name {Dout[5]}}
@file 25: catch {set_db {port:filter_top/Dout[4]} .original_name {Dout[4]}}
@file 26: catch {set_db {port:filter_top/Dout[3]} .original_name {Dout[3]}}
@file 27: catch {set_db {port:filter_top/Dout[2]} .original_name {Dout[2]}}
@file 28: catch {set_db {port:filter_top/Dout[1]} .original_name {Dout[1]}}
@file 29: catch {set_db {port:filter_top/Dout[0]} .original_name {Dout[0]}}
@file 30: catch {set_db port:filter_top/MISO .original_name MISO}
@file 31: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[0][0]/Q} .original_name {fir_filter/coefficients_r_reg[0][0]/Q}}
@file 32: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[0][1]/Q} .original_name {fir_filter/coefficients_r_reg[0][1]/Q}}
@file 33: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[0][2]/Q} .original_name {fir_filter/coefficients_r_reg[0][2]/Q}}
@file 34: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[0][3]/Q} .original_name {fir_filter/coefficients_r_reg[0][3]/Q}}
@file 35: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[0][4]/Q} .original_name {fir_filter/coefficients_r_reg[0][4]/Q}}
@file 36: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[0][5]/Q} .original_name {fir_filter/coefficients_r_reg[0][5]/Q}}
@file 37: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[0][6]/Q} .original_name {fir_filter/coefficients_r_reg[0][6]/Q}}
@file 38: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[0][7]/Q} .original_name {fir_filter/coefficients_r_reg[0][7]/Q}}
@file 39: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[0][8]/Q} .original_name {fir_filter/coefficients_r_reg[0][8]/Q}}
@file 40: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[0][9]/Q} .original_name {fir_filter/coefficients_r_reg[0][9]/Q}}
@file 41: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[0][10]/Q} .original_name {fir_filter/coefficients_r_reg[0][10]/Q}}
@file 42: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[0][11]/Q} .original_name {fir_filter/coefficients_r_reg[0][11]/Q}}
@file 43: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[1][0]/Q} .original_name {fir_filter/coefficients_r_reg[1][0]/Q}}
@file 44: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[1][1]/Q} .original_name {fir_filter/coefficients_r_reg[1][1]/Q}}
@file 45: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[1][2]/Q} .original_name {fir_filter/coefficients_r_reg[1][2]/Q}}
@file 46: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[1][3]/Q} .original_name {fir_filter/coefficients_r_reg[1][3]/Q}}
@file 47: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[1][4]/Q} .original_name {fir_filter/coefficients_r_reg[1][4]/Q}}
@file 48: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[1][5]/Q} .original_name {fir_filter/coefficients_r_reg[1][5]/Q}}
@file 49: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[1][6]/Q} .original_name {fir_filter/coefficients_r_reg[1][6]/Q}}
@file 50: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[1][7]/Q} .original_name {fir_filter/coefficients_r_reg[1][7]/Q}}
@file 51: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[1][8]/Q} .original_name {fir_filter/coefficients_r_reg[1][8]/Q}}
@file 52: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[1][9]/Q} .original_name {fir_filter/coefficients_r_reg[1][9]/Q}}
@file 53: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[1][10]/Q} .original_name {fir_filter/coefficients_r_reg[1][10]/Q}}
@file 54: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[1][11]/Q} .original_name {fir_filter/coefficients_r_reg[1][11]/Q}}
@file 55: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[2][0]/Q} .original_name {fir_filter/coefficients_r_reg[2][0]/Q}}
@file 56: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[2][1]/Q} .original_name {fir_filter/coefficients_r_reg[2][1]/Q}}
@file 57: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[2][2]/Q} .original_name {fir_filter/coefficients_r_reg[2][2]/Q}}
@file 58: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[2][3]/Q} .original_name {fir_filter/coefficients_r_reg[2][3]/Q}}
@file 59: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[2][4]/Q} .original_name {fir_filter/coefficients_r_reg[2][4]/Q}}
@file 60: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[2][5]/Q} .original_name {fir_filter/coefficients_r_reg[2][5]/Q}}
@file 61: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[2][6]/Q} .original_name {fir_filter/coefficients_r_reg[2][6]/Q}}
@file 62: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[2][7]/Q} .original_name {fir_filter/coefficients_r_reg[2][7]/Q}}
@file 63: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[2][8]/Q} .original_name {fir_filter/coefficients_r_reg[2][8]/Q}}
@file 64: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[2][9]/Q} .original_name {fir_filter/coefficients_r_reg[2][9]/Q}}
@file 65: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[2][10]/Q} .original_name {fir_filter/coefficients_r_reg[2][10]/Q}}
@file 66: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[2][11]/Q} .original_name {fir_filter/coefficients_r_reg[2][11]/Q}}
@file 67: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[3][0]/Q} .original_name {fir_filter/coefficients_r_reg[3][0]/Q}}
@file 68: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[3][1]/Q} .original_name {fir_filter/coefficients_r_reg[3][1]/Q}}
@file 69: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[3][2]/Q} .original_name {fir_filter/coefficients_r_reg[3][2]/Q}}
@file 70: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[3][3]/Q} .original_name {fir_filter/coefficients_r_reg[3][3]/Q}}
@file 71: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[3][4]/Q} .original_name {fir_filter/coefficients_r_reg[3][4]/Q}}
@file 72: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[3][5]/Q} .original_name {fir_filter/coefficients_r_reg[3][5]/Q}}
@file 73: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[3][6]/Q} .original_name {fir_filter/coefficients_r_reg[3][6]/Q}}
@file 74: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[3][7]/Q} .original_name {fir_filter/coefficients_r_reg[3][7]/Q}}
@file 75: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[3][8]/Q} .original_name {fir_filter/coefficients_r_reg[3][8]/Q}}
@file 76: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[3][9]/Q} .original_name {fir_filter/coefficients_r_reg[3][9]/Q}}
@file 77: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[3][10]/Q} .original_name {fir_filter/coefficients_r_reg[3][10]/Q}}
@file 78: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[3][11]/Q} .original_name {fir_filter/coefficients_r_reg[3][11]/Q}}
@file 79: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[4][0]/Q} .original_name {fir_filter/coefficients_r_reg[4][0]/Q}}
@file 80: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[4][1]/Q} .original_name {fir_filter/coefficients_r_reg[4][1]/Q}}
@file 81: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[4][2]/Q} .original_name {fir_filter/coefficients_r_reg[4][2]/Q}}
@file 82: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[4][3]/Q} .original_name {fir_filter/coefficients_r_reg[4][3]/Q}}
@file 83: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[4][4]/Q} .original_name {fir_filter/coefficients_r_reg[4][4]/Q}}
@file 84: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[4][5]/Q} .original_name {fir_filter/coefficients_r_reg[4][5]/Q}}
@file 85: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[4][6]/Q} .original_name {fir_filter/coefficients_r_reg[4][6]/Q}}
@file 86: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[4][7]/Q} .original_name {fir_filter/coefficients_r_reg[4][7]/Q}}
@file 87: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[4][8]/Q} .original_name {fir_filter/coefficients_r_reg[4][8]/Q}}
@file 88: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[4][9]/Q} .original_name {fir_filter/coefficients_r_reg[4][9]/Q}}
@file 89: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[4][10]/Q} .original_name {fir_filter/coefficients_r_reg[4][10]/Q}}
@file 90: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[4][11]/Q} .original_name {fir_filter/coefficients_r_reg[4][11]/Q}}
@file 91: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[5][0]/Q} .original_name {fir_filter/coefficients_r_reg[5][0]/Q}}
@file 92: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[5][1]/Q} .original_name {fir_filter/coefficients_r_reg[5][1]/Q}}
@file 93: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[5][2]/Q} .original_name {fir_filter/coefficients_r_reg[5][2]/Q}}
@file 94: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[5][3]/Q} .original_name {fir_filter/coefficients_r_reg[5][3]/Q}}
@file 95: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[5][4]/Q} .original_name {fir_filter/coefficients_r_reg[5][4]/Q}}
@file 96: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[5][5]/Q} .original_name {fir_filter/coefficients_r_reg[5][5]/Q}}
@file 97: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[5][6]/Q} .original_name {fir_filter/coefficients_r_reg[5][6]/Q}}
@file 98: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[5][7]/Q} .original_name {fir_filter/coefficients_r_reg[5][7]/Q}}
@file 99: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[5][8]/Q} .original_name {fir_filter/coefficients_r_reg[5][8]/Q}}
@file 100: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[5][9]/Q} .original_name {fir_filter/coefficients_r_reg[5][9]/Q}}
@file 101: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[5][10]/Q} .original_name {fir_filter/coefficients_r_reg[5][10]/Q}}
@file 102: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[5][11]/Q} .original_name {fir_filter/coefficients_r_reg[5][11]/Q}}
@file 103: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[6][0]/Q} .original_name {fir_filter/coefficients_r_reg[6][0]/Q}}
@file 104: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[6][1]/Q} .original_name {fir_filter/coefficients_r_reg[6][1]/Q}}
@file 105: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[6][2]/Q} .original_name {fir_filter/coefficients_r_reg[6][2]/Q}}
@file 106: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[6][3]/Q} .original_name {fir_filter/coefficients_r_reg[6][3]/Q}}
@file 107: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[6][4]/Q} .original_name {fir_filter/coefficients_r_reg[6][4]/Q}}
@file 108: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[6][5]/Q} .original_name {fir_filter/coefficients_r_reg[6][5]/Q}}
@file 109: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[6][6]/Q} .original_name {fir_filter/coefficients_r_reg[6][6]/Q}}
@file 110: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[6][7]/Q} .original_name {fir_filter/coefficients_r_reg[6][7]/Q}}
@file 111: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[6][8]/Q} .original_name {fir_filter/coefficients_r_reg[6][8]/Q}}
@file 112: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[6][9]/Q} .original_name {fir_filter/coefficients_r_reg[6][9]/Q}}
@file 113: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[6][10]/Q} .original_name {fir_filter/coefficients_r_reg[6][10]/Q}}
@file 114: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[6][11]/Q} .original_name {fir_filter/coefficients_r_reg[6][11]/Q}}
@file 115: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[7][0]/Q} .original_name {fir_filter/coefficients_r_reg[7][0]/Q}}
@file 116: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[7][1]/Q} .original_name {fir_filter/coefficients_r_reg[7][1]/Q}}
@file 117: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[7][2]/Q} .original_name {fir_filter/coefficients_r_reg[7][2]/Q}}
@file 118: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[7][3]/Q} .original_name {fir_filter/coefficients_r_reg[7][3]/Q}}
@file 119: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[7][4]/Q} .original_name {fir_filter/coefficients_r_reg[7][4]/Q}}
@file 120: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[7][5]/Q} .original_name {fir_filter/coefficients_r_reg[7][5]/Q}}
@file 121: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[7][6]/Q} .original_name {fir_filter/coefficients_r_reg[7][6]/Q}}
@file 122: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[7][7]/Q} .original_name {fir_filter/coefficients_r_reg[7][7]/Q}}
@file 123: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[7][8]/Q} .original_name {fir_filter/coefficients_r_reg[7][8]/Q}}
@file 124: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[7][9]/Q} .original_name {fir_filter/coefficients_r_reg[7][9]/Q}}
@file 125: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[7][10]/Q} .original_name {fir_filter/coefficients_r_reg[7][10]/Q}}
@file 126: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[7][11]/Q} .original_name {fir_filter/coefficients_r_reg[7][11]/Q}}
@file 127: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[8][0]/Q} .original_name {fir_filter/coefficients_r_reg[8][0]/Q}}
@file 128: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[8][1]/Q} .original_name {fir_filter/coefficients_r_reg[8][1]/Q}}
@file 129: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[8][2]/Q} .original_name {fir_filter/coefficients_r_reg[8][2]/Q}}
@file 130: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[8][3]/Q} .original_name {fir_filter/coefficients_r_reg[8][3]/Q}}
@file 131: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[8][4]/Q} .original_name {fir_filter/coefficients_r_reg[8][4]/Q}}
@file 132: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[8][5]/Q} .original_name {fir_filter/coefficients_r_reg[8][5]/Q}}
@file 133: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[8][6]/Q} .original_name {fir_filter/coefficients_r_reg[8][6]/Q}}
@file 134: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[8][7]/Q} .original_name {fir_filter/coefficients_r_reg[8][7]/Q}}
@file 135: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[8][8]/Q} .original_name {fir_filter/coefficients_r_reg[8][8]/Q}}
@file 136: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[8][9]/Q} .original_name {fir_filter/coefficients_r_reg[8][9]/Q}}
@file 137: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[8][10]/Q} .original_name {fir_filter/coefficients_r_reg[8][10]/Q}}
@file 138: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[8][11]/Q} .original_name {fir_filter/coefficients_r_reg[8][11]/Q}}
@file 139: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[9][0]/Q} .original_name {fir_filter/coefficients_r_reg[9][0]/Q}}
@file 140: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[9][1]/Q} .original_name {fir_filter/coefficients_r_reg[9][1]/Q}}
@file 141: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[9][2]/Q} .original_name {fir_filter/coefficients_r_reg[9][2]/Q}}
@file 142: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[9][3]/Q} .original_name {fir_filter/coefficients_r_reg[9][3]/Q}}
@file 143: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[9][4]/Q} .original_name {fir_filter/coefficients_r_reg[9][4]/Q}}
@file 144: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[9][5]/Q} .original_name {fir_filter/coefficients_r_reg[9][5]/Q}}
@file 145: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[9][6]/Q} .original_name {fir_filter/coefficients_r_reg[9][6]/Q}}
@file 146: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[9][7]/Q} .original_name {fir_filter/coefficients_r_reg[9][7]/Q}}
@file 147: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[9][8]/Q} .original_name {fir_filter/coefficients_r_reg[9][8]/Q}}
@file 148: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[9][9]/Q} .original_name {fir_filter/coefficients_r_reg[9][9]/Q}}
@file 149: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[9][10]/Q} .original_name {fir_filter/coefficients_r_reg[9][10]/Q}}
@file 150: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[9][11]/Q} .original_name {fir_filter/coefficients_r_reg[9][11]/Q}}
@file 151: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[10][0]/Q} .original_name {fir_filter/coefficients_r_reg[10][0]/Q}}
@file 152: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[10][1]/Q} .original_name {fir_filter/coefficients_r_reg[10][1]/Q}}
@file 153: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[10][2]/Q} .original_name {fir_filter/coefficients_r_reg[10][2]/Q}}
@file 154: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[10][3]/Q} .original_name {fir_filter/coefficients_r_reg[10][3]/Q}}
@file 155: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[10][4]/Q} .original_name {fir_filter/coefficients_r_reg[10][4]/Q}}
@file 156: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[10][5]/Q} .original_name {fir_filter/coefficients_r_reg[10][5]/Q}}
@file 157: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[10][6]/Q} .original_name {fir_filter/coefficients_r_reg[10][6]/Q}}
@file 158: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[10][7]/Q} .original_name {fir_filter/coefficients_r_reg[10][7]/Q}}
@file 159: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[10][8]/Q} .original_name {fir_filter/coefficients_r_reg[10][8]/Q}}
@file 160: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[10][9]/Q} .original_name {fir_filter/coefficients_r_reg[10][9]/Q}}
@file 161: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[10][10]/Q} .original_name {fir_filter/coefficients_r_reg[10][10]/Q}}
@file 162: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[10][11]/Q} .original_name {fir_filter/coefficients_r_reg[10][11]/Q}}
@file 163: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[11][0]/Q} .original_name {fir_filter/coefficients_r_reg[11][0]/Q}}
@file 164: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[11][1]/Q} .original_name {fir_filter/coefficients_r_reg[11][1]/Q}}
@file 165: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[11][2]/Q} .original_name {fir_filter/coefficients_r_reg[11][2]/Q}}
@file 166: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[11][3]/Q} .original_name {fir_filter/coefficients_r_reg[11][3]/Q}}
@file 167: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[11][4]/Q} .original_name {fir_filter/coefficients_r_reg[11][4]/Q}}
@file 168: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[11][5]/Q} .original_name {fir_filter/coefficients_r_reg[11][5]/Q}}
@file 169: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[11][6]/Q} .original_name {fir_filter/coefficients_r_reg[11][6]/Q}}
@file 170: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[11][7]/Q} .original_name {fir_filter/coefficients_r_reg[11][7]/Q}}
@file 171: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[11][8]/Q} .original_name {fir_filter/coefficients_r_reg[11][8]/Q}}
@file 172: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[11][9]/Q} .original_name {fir_filter/coefficients_r_reg[11][9]/Q}}
@file 173: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[11][10]/Q} .original_name {fir_filter/coefficients_r_reg[11][10]/Q}}
@file 174: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[11][11]/Q} .original_name {fir_filter/coefficients_r_reg[11][11]/Q}}
@file 175: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[12][0]/Q} .original_name {fir_filter/coefficients_r_reg[12][0]/Q}}
@file 176: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[12][1]/Q} .original_name {fir_filter/coefficients_r_reg[12][1]/Q}}
@file 177: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[12][2]/Q} .original_name {fir_filter/coefficients_r_reg[12][2]/Q}}
@file 178: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[12][3]/Q} .original_name {fir_filter/coefficients_r_reg[12][3]/Q}}
@file 179: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[12][4]/Q} .original_name {fir_filter/coefficients_r_reg[12][4]/Q}}
@file 180: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[12][5]/Q} .original_name {fir_filter/coefficients_r_reg[12][5]/Q}}
@file 181: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[12][6]/Q} .original_name {fir_filter/coefficients_r_reg[12][6]/Q}}
@file 182: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[12][7]/Q} .original_name {fir_filter/coefficients_r_reg[12][7]/Q}}
@file 183: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[12][8]/Q} .original_name {fir_filter/coefficients_r_reg[12][8]/Q}}
@file 184: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[12][9]/Q} .original_name {fir_filter/coefficients_r_reg[12][9]/Q}}
@file 185: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[12][10]/Q} .original_name {fir_filter/coefficients_r_reg[12][10]/Q}}
@file 186: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[12][11]/Q} .original_name {fir_filter/coefficients_r_reg[12][11]/Q}}
@file 187: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[13][0]/Q} .original_name {fir_filter/coefficients_r_reg[13][0]/Q}}
@file 188: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[13][1]/Q} .original_name {fir_filter/coefficients_r_reg[13][1]/Q}}
@file 189: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[13][2]/Q} .original_name {fir_filter/coefficients_r_reg[13][2]/Q}}
@file 190: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[13][3]/Q} .original_name {fir_filter/coefficients_r_reg[13][3]/Q}}
@file 191: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[13][4]/Q} .original_name {fir_filter/coefficients_r_reg[13][4]/Q}}
@file 192: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[13][5]/Q} .original_name {fir_filter/coefficients_r_reg[13][5]/Q}}
@file 193: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[13][6]/Q} .original_name {fir_filter/coefficients_r_reg[13][6]/Q}}
@file 194: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[13][7]/Q} .original_name {fir_filter/coefficients_r_reg[13][7]/Q}}
@file 195: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[13][8]/Q} .original_name {fir_filter/coefficients_r_reg[13][8]/Q}}
@file 196: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[13][9]/Q} .original_name {fir_filter/coefficients_r_reg[13][9]/Q}}
@file 197: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[13][10]/Q} .original_name {fir_filter/coefficients_r_reg[13][10]/Q}}
@file 198: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[13][11]/Q} .original_name {fir_filter/coefficients_r_reg[13][11]/Q}}
@file 199: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[14][0]/Q} .original_name {fir_filter/coefficients_r_reg[14][0]/Q}}
@file 200: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[14][1]/Q} .original_name {fir_filter/coefficients_r_reg[14][1]/Q}}
@file 201: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[14][2]/Q} .original_name {fir_filter/coefficients_r_reg[14][2]/Q}}
@file 202: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[14][3]/Q} .original_name {fir_filter/coefficients_r_reg[14][3]/Q}}
@file 203: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[14][4]/Q} .original_name {fir_filter/coefficients_r_reg[14][4]/Q}}
@file 204: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[14][5]/Q} .original_name {fir_filter/coefficients_r_reg[14][5]/Q}}
@file 205: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[14][6]/Q} .original_name {fir_filter/coefficients_r_reg[14][6]/Q}}
@file 206: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[14][7]/Q} .original_name {fir_filter/coefficients_r_reg[14][7]/Q}}
@file 207: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[14][8]/Q} .original_name {fir_filter/coefficients_r_reg[14][8]/Q}}
@file 208: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[14][9]/Q} .original_name {fir_filter/coefficients_r_reg[14][9]/Q}}
@file 209: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[14][10]/Q} .original_name {fir_filter/coefficients_r_reg[14][10]/Q}}
@file 210: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[14][11]/Q} .original_name {fir_filter/coefficients_r_reg[14][11]/Q}}
@file 211: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[15][0]/Q} .original_name {fir_filter/coefficients_r_reg[15][0]/Q}}
@file 212: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[15][1]/Q} .original_name {fir_filter/coefficients_r_reg[15][1]/Q}}
@file 213: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[15][2]/Q} .original_name {fir_filter/coefficients_r_reg[15][2]/Q}}
@file 214: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[15][3]/Q} .original_name {fir_filter/coefficients_r_reg[15][3]/Q}}
@file 215: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[15][4]/Q} .original_name {fir_filter/coefficients_r_reg[15][4]/Q}}
@file 216: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[15][5]/Q} .original_name {fir_filter/coefficients_r_reg[15][5]/Q}}
@file 217: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[15][6]/Q} .original_name {fir_filter/coefficients_r_reg[15][6]/Q}}
@file 218: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[15][7]/Q} .original_name {fir_filter/coefficients_r_reg[15][7]/Q}}
@file 219: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[15][8]/Q} .original_name {fir_filter/coefficients_r_reg[15][8]/Q}}
@file 220: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[15][9]/Q} .original_name {fir_filter/coefficients_r_reg[15][9]/Q}}
@file 221: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[15][10]/Q} .original_name {fir_filter/coefficients_r_reg[15][10]/Q}}
@file 222: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[15][11]/Q} .original_name {fir_filter/coefficients_r_reg[15][11]/Q}}
@file 223: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[16][0]/Q} .original_name {fir_filter/coefficients_r_reg[16][0]/Q}}
@file 224: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[16][1]/Q} .original_name {fir_filter/coefficients_r_reg[16][1]/Q}}
@file 225: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[16][2]/Q} .original_name {fir_filter/coefficients_r_reg[16][2]/Q}}
@file 226: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[16][3]/Q} .original_name {fir_filter/coefficients_r_reg[16][3]/Q}}
@file 227: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[16][4]/Q} .original_name {fir_filter/coefficients_r_reg[16][4]/Q}}
@file 228: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[16][5]/Q} .original_name {fir_filter/coefficients_r_reg[16][5]/Q}}
@file 229: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[16][6]/Q} .original_name {fir_filter/coefficients_r_reg[16][6]/Q}}
@file 230: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[16][7]/Q} .original_name {fir_filter/coefficients_r_reg[16][7]/Q}}
@file 231: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[16][8]/Q} .original_name {fir_filter/coefficients_r_reg[16][8]/Q}}
@file 232: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[16][9]/Q} .original_name {fir_filter/coefficients_r_reg[16][9]/Q}}
@file 233: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[16][10]/Q} .original_name {fir_filter/coefficients_r_reg[16][10]/Q}}
@file 234: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[16][11]/Q} .original_name {fir_filter/coefficients_r_reg[16][11]/Q}}
@file 235: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[17][0]/Q} .original_name {fir_filter/coefficients_r_reg[17][0]/Q}}
@file 236: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[17][1]/Q} .original_name {fir_filter/coefficients_r_reg[17][1]/Q}}
@file 237: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[17][2]/Q} .original_name {fir_filter/coefficients_r_reg[17][2]/Q}}
@file 238: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[17][3]/Q} .original_name {fir_filter/coefficients_r_reg[17][3]/Q}}
@file 239: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[17][4]/Q} .original_name {fir_filter/coefficients_r_reg[17][4]/Q}}
@file 240: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[17][5]/Q} .original_name {fir_filter/coefficients_r_reg[17][5]/Q}}
@file 241: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[17][6]/Q} .original_name {fir_filter/coefficients_r_reg[17][6]/Q}}
@file 242: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[17][7]/Q} .original_name {fir_filter/coefficients_r_reg[17][7]/Q}}
@file 243: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[17][8]/Q} .original_name {fir_filter/coefficients_r_reg[17][8]/Q}}
@file 244: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[17][9]/Q} .original_name {fir_filter/coefficients_r_reg[17][9]/Q}}
@file 245: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[17][10]/Q} .original_name {fir_filter/coefficients_r_reg[17][10]/Q}}
@file 246: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[17][11]/Q} .original_name {fir_filter/coefficients_r_reg[17][11]/Q}}
@file 247: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[18][0]/Q} .original_name {fir_filter/coefficients_r_reg[18][0]/Q}}
@file 248: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[18][1]/Q} .original_name {fir_filter/coefficients_r_reg[18][1]/Q}}
@file 249: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[18][2]/Q} .original_name {fir_filter/coefficients_r_reg[18][2]/Q}}
@file 250: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[18][3]/Q} .original_name {fir_filter/coefficients_r_reg[18][3]/Q}}
@file 251: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[18][4]/Q} .original_name {fir_filter/coefficients_r_reg[18][4]/Q}}
@file 252: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[18][5]/Q} .original_name {fir_filter/coefficients_r_reg[18][5]/Q}}
@file 253: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[18][6]/Q} .original_name {fir_filter/coefficients_r_reg[18][6]/Q}}
@file 254: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[18][7]/Q} .original_name {fir_filter/coefficients_r_reg[18][7]/Q}}
@file 255: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[18][8]/Q} .original_name {fir_filter/coefficients_r_reg[18][8]/Q}}
@file 256: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[18][9]/Q} .original_name {fir_filter/coefficients_r_reg[18][9]/Q}}
@file 257: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[18][10]/Q} .original_name {fir_filter/coefficients_r_reg[18][10]/Q}}
@file 258: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[18][11]/Q} .original_name {fir_filter/coefficients_r_reg[18][11]/Q}}
@file 259: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[19][0]/Q} .original_name {fir_filter/coefficients_r_reg[19][0]/Q}}
@file 260: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[19][1]/Q} .original_name {fir_filter/coefficients_r_reg[19][1]/Q}}
@file 261: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[19][2]/Q} .original_name {fir_filter/coefficients_r_reg[19][2]/Q}}
@file 262: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[19][3]/Q} .original_name {fir_filter/coefficients_r_reg[19][3]/Q}}
@file 263: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[19][4]/Q} .original_name {fir_filter/coefficients_r_reg[19][4]/Q}}
@file 264: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[19][5]/Q} .original_name {fir_filter/coefficients_r_reg[19][5]/Q}}
@file 265: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[19][6]/Q} .original_name {fir_filter/coefficients_r_reg[19][6]/Q}}
@file 266: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[19][7]/Q} .original_name {fir_filter/coefficients_r_reg[19][7]/Q}}
@file 267: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[19][8]/Q} .original_name {fir_filter/coefficients_r_reg[19][8]/Q}}
@file 268: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[19][9]/Q} .original_name {fir_filter/coefficients_r_reg[19][9]/Q}}
@file 269: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[19][10]/Q} .original_name {fir_filter/coefficients_r_reg[19][10]/Q}}
@file 270: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[19][11]/Q} .original_name {fir_filter/coefficients_r_reg[19][11]/Q}}
@file 271: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[20][0]/Q} .original_name {fir_filter/coefficients_r_reg[20][0]/Q}}
@file 272: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[20][1]/Q} .original_name {fir_filter/coefficients_r_reg[20][1]/Q}}
@file 273: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[20][2]/Q} .original_name {fir_filter/coefficients_r_reg[20][2]/Q}}
@file 274: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[20][3]/Q} .original_name {fir_filter/coefficients_r_reg[20][3]/Q}}
@file 275: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[20][4]/Q} .original_name {fir_filter/coefficients_r_reg[20][4]/Q}}
@file 276: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[20][5]/Q} .original_name {fir_filter/coefficients_r_reg[20][5]/Q}}
@file 277: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[20][6]/Q} .original_name {fir_filter/coefficients_r_reg[20][6]/Q}}
@file 278: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[20][7]/Q} .original_name {fir_filter/coefficients_r_reg[20][7]/Q}}
@file 279: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[20][8]/Q} .original_name {fir_filter/coefficients_r_reg[20][8]/Q}}
@file 280: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[20][9]/Q} .original_name {fir_filter/coefficients_r_reg[20][9]/Q}}
@file 281: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[20][10]/Q} .original_name {fir_filter/coefficients_r_reg[20][10]/Q}}
@file 282: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[20][11]/Q} .original_name {fir_filter/coefficients_r_reg[20][11]/Q}}
@file 283: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[21][0]/Q} .original_name {fir_filter/coefficients_r_reg[21][0]/Q}}
@file 284: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[21][1]/Q} .original_name {fir_filter/coefficients_r_reg[21][1]/Q}}
@file 285: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[21][2]/Q} .original_name {fir_filter/coefficients_r_reg[21][2]/Q}}
@file 286: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[21][3]/Q} .original_name {fir_filter/coefficients_r_reg[21][3]/Q}}
@file 287: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[21][4]/Q} .original_name {fir_filter/coefficients_r_reg[21][4]/Q}}
@file 288: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[21][5]/Q} .original_name {fir_filter/coefficients_r_reg[21][5]/Q}}
@file 289: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[21][6]/Q} .original_name {fir_filter/coefficients_r_reg[21][6]/Q}}
@file 290: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[21][7]/Q} .original_name {fir_filter/coefficients_r_reg[21][7]/Q}}
@file 291: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[21][8]/Q} .original_name {fir_filter/coefficients_r_reg[21][8]/Q}}
@file 292: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[21][9]/Q} .original_name {fir_filter/coefficients_r_reg[21][9]/Q}}
@file 293: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[21][10]/Q} .original_name {fir_filter/coefficients_r_reg[21][10]/Q}}
@file 294: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[21][11]/Q} .original_name {fir_filter/coefficients_r_reg[21][11]/Q}}
@file 295: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[22][0]/Q} .original_name {fir_filter/coefficients_r_reg[22][0]/Q}}
@file 296: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[22][1]/Q} .original_name {fir_filter/coefficients_r_reg[22][1]/Q}}
@file 297: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[22][2]/Q} .original_name {fir_filter/coefficients_r_reg[22][2]/Q}}
@file 298: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[22][3]/Q} .original_name {fir_filter/coefficients_r_reg[22][3]/Q}}
@file 299: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[22][4]/Q} .original_name {fir_filter/coefficients_r_reg[22][4]/Q}}
@file 300: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[22][5]/Q} .original_name {fir_filter/coefficients_r_reg[22][5]/Q}}
@file 301: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[22][6]/Q} .original_name {fir_filter/coefficients_r_reg[22][6]/Q}}
@file 302: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[22][7]/Q} .original_name {fir_filter/coefficients_r_reg[22][7]/Q}}
@file 303: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[22][8]/Q} .original_name {fir_filter/coefficients_r_reg[22][8]/Q}}
@file 304: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[22][9]/Q} .original_name {fir_filter/coefficients_r_reg[22][9]/Q}}
@file 305: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[22][10]/Q} .original_name {fir_filter/coefficients_r_reg[22][10]/Q}}
@file 306: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[22][11]/Q} .original_name {fir_filter/coefficients_r_reg[22][11]/Q}}
@file 307: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[23][0]/Q} .original_name {fir_filter/coefficients_r_reg[23][0]/Q}}
@file 308: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[23][1]/Q} .original_name {fir_filter/coefficients_r_reg[23][1]/Q}}
@file 309: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[23][2]/Q} .original_name {fir_filter/coefficients_r_reg[23][2]/Q}}
@file 310: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[23][3]/Q} .original_name {fir_filter/coefficients_r_reg[23][3]/Q}}
@file 311: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[23][4]/Q} .original_name {fir_filter/coefficients_r_reg[23][4]/Q}}
@file 312: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[23][5]/Q} .original_name {fir_filter/coefficients_r_reg[23][5]/Q}}
@file 313: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[23][6]/Q} .original_name {fir_filter/coefficients_r_reg[23][6]/Q}}
@file 314: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[23][7]/Q} .original_name {fir_filter/coefficients_r_reg[23][7]/Q}}
@file 315: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[23][8]/Q} .original_name {fir_filter/coefficients_r_reg[23][8]/Q}}
@file 316: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[23][9]/Q} .original_name {fir_filter/coefficients_r_reg[23][9]/Q}}
@file 317: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[23][10]/Q} .original_name {fir_filter/coefficients_r_reg[23][10]/Q}}
@file 318: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[23][11]/Q} .original_name {fir_filter/coefficients_r_reg[23][11]/Q}}
@file 319: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[24][0]/Q} .original_name {fir_filter/coefficients_r_reg[24][0]/Q}}
@file 320: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[24][1]/Q} .original_name {fir_filter/coefficients_r_reg[24][1]/Q}}
@file 321: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[24][2]/Q} .original_name {fir_filter/coefficients_r_reg[24][2]/Q}}
@file 322: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[24][3]/Q} .original_name {fir_filter/coefficients_r_reg[24][3]/Q}}
@file 323: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[24][4]/Q} .original_name {fir_filter/coefficients_r_reg[24][4]/Q}}
@file 324: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[24][5]/Q} .original_name {fir_filter/coefficients_r_reg[24][5]/Q}}
@file 325: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[24][6]/Q} .original_name {fir_filter/coefficients_r_reg[24][6]/Q}}
@file 326: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[24][7]/Q} .original_name {fir_filter/coefficients_r_reg[24][7]/Q}}
@file 327: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[24][8]/Q} .original_name {fir_filter/coefficients_r_reg[24][8]/Q}}
@file 328: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[24][9]/Q} .original_name {fir_filter/coefficients_r_reg[24][9]/Q}}
@file 329: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[24][10]/Q} .original_name {fir_filter/coefficients_r_reg[24][10]/Q}}
@file 330: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[24][11]/Q} .original_name {fir_filter/coefficients_r_reg[24][11]/Q}}
@file 331: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[25][0]/Q} .original_name {fir_filter/coefficients_r_reg[25][0]/Q}}
@file 332: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[25][1]/Q} .original_name {fir_filter/coefficients_r_reg[25][1]/Q}}
@file 333: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[25][2]/Q} .original_name {fir_filter/coefficients_r_reg[25][2]/Q}}
@file 334: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[25][3]/Q} .original_name {fir_filter/coefficients_r_reg[25][3]/Q}}
@file 335: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[25][4]/Q} .original_name {fir_filter/coefficients_r_reg[25][4]/Q}}
@file 336: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[25][5]/Q} .original_name {fir_filter/coefficients_r_reg[25][5]/Q}}
@file 337: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[25][6]/Q} .original_name {fir_filter/coefficients_r_reg[25][6]/Q}}
@file 338: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[25][7]/Q} .original_name {fir_filter/coefficients_r_reg[25][7]/Q}}
@file 339: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[25][8]/Q} .original_name {fir_filter/coefficients_r_reg[25][8]/Q}}
@file 340: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[25][9]/Q} .original_name {fir_filter/coefficients_r_reg[25][9]/Q}}
@file 341: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[25][10]/Q} .original_name {fir_filter/coefficients_r_reg[25][10]/Q}}
@file 342: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[25][11]/Q} .original_name {fir_filter/coefficients_r_reg[25][11]/Q}}
@file 343: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[26][0]/Q} .original_name {fir_filter/coefficients_r_reg[26][0]/Q}}
@file 344: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[26][1]/Q} .original_name {fir_filter/coefficients_r_reg[26][1]/Q}}
@file 345: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[26][2]/Q} .original_name {fir_filter/coefficients_r_reg[26][2]/Q}}
@file 346: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[26][3]/Q} .original_name {fir_filter/coefficients_r_reg[26][3]/Q}}
@file 347: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[26][4]/Q} .original_name {fir_filter/coefficients_r_reg[26][4]/Q}}
@file 348: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[26][5]/Q} .original_name {fir_filter/coefficients_r_reg[26][5]/Q}}
@file 349: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[26][6]/Q} .original_name {fir_filter/coefficients_r_reg[26][6]/Q}}
@file 350: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[26][7]/Q} .original_name {fir_filter/coefficients_r_reg[26][7]/Q}}
@file 351: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[26][8]/Q} .original_name {fir_filter/coefficients_r_reg[26][8]/Q}}
@file 352: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[26][9]/Q} .original_name {fir_filter/coefficients_r_reg[26][9]/Q}}
@file 353: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[26][10]/Q} .original_name {fir_filter/coefficients_r_reg[26][10]/Q}}
@file 354: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[26][11]/Q} .original_name {fir_filter/coefficients_r_reg[26][11]/Q}}
@file 355: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[27][0]/Q} .original_name {fir_filter/coefficients_r_reg[27][0]/Q}}
@file 356: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[27][1]/Q} .original_name {fir_filter/coefficients_r_reg[27][1]/Q}}
@file 357: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[27][2]/Q} .original_name {fir_filter/coefficients_r_reg[27][2]/Q}}
@file 358: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[27][3]/Q} .original_name {fir_filter/coefficients_r_reg[27][3]/Q}}
@file 359: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[27][4]/Q} .original_name {fir_filter/coefficients_r_reg[27][4]/Q}}
@file 360: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[27][5]/Q} .original_name {fir_filter/coefficients_r_reg[27][5]/Q}}
@file 361: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[27][6]/Q} .original_name {fir_filter/coefficients_r_reg[27][6]/Q}}
@file 362: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[27][7]/Q} .original_name {fir_filter/coefficients_r_reg[27][7]/Q}}
@file 363: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[27][8]/Q} .original_name {fir_filter/coefficients_r_reg[27][8]/Q}}
@file 364: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[27][9]/Q} .original_name {fir_filter/coefficients_r_reg[27][9]/Q}}
@file 365: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[27][10]/Q} .original_name {fir_filter/coefficients_r_reg[27][10]/Q}}
@file 366: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[27][11]/Q} .original_name {fir_filter/coefficients_r_reg[27][11]/Q}}
@file 367: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[28][0]/Q} .original_name {fir_filter/coefficients_r_reg[28][0]/Q}}
@file 368: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[28][1]/Q} .original_name {fir_filter/coefficients_r_reg[28][1]/Q}}
@file 369: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[28][2]/Q} .original_name {fir_filter/coefficients_r_reg[28][2]/Q}}
@file 370: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[28][3]/Q} .original_name {fir_filter/coefficients_r_reg[28][3]/Q}}
@file 371: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[28][4]/Q} .original_name {fir_filter/coefficients_r_reg[28][4]/Q}}
@file 372: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[28][5]/Q} .original_name {fir_filter/coefficients_r_reg[28][5]/Q}}
@file 373: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[28][6]/Q} .original_name {fir_filter/coefficients_r_reg[28][6]/Q}}
@file 374: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[28][7]/Q} .original_name {fir_filter/coefficients_r_reg[28][7]/Q}}
@file 375: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[28][8]/Q} .original_name {fir_filter/coefficients_r_reg[28][8]/Q}}
@file 376: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[28][9]/Q} .original_name {fir_filter/coefficients_r_reg[28][9]/Q}}
@file 377: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[28][10]/Q} .original_name {fir_filter/coefficients_r_reg[28][10]/Q}}
@file 378: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[28][11]/Q} .original_name {fir_filter/coefficients_r_reg[28][11]/Q}}
@file 379: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[29][0]/Q} .original_name {fir_filter/coefficients_r_reg[29][0]/Q}}
@file 380: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[29][1]/Q} .original_name {fir_filter/coefficients_r_reg[29][1]/Q}}
@file 381: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[29][2]/Q} .original_name {fir_filter/coefficients_r_reg[29][2]/Q}}
@file 382: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[29][3]/Q} .original_name {fir_filter/coefficients_r_reg[29][3]/Q}}
@file 383: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[29][4]/Q} .original_name {fir_filter/coefficients_r_reg[29][4]/Q}}
@file 384: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[29][5]/Q} .original_name {fir_filter/coefficients_r_reg[29][5]/Q}}
@file 385: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[29][6]/Q} .original_name {fir_filter/coefficients_r_reg[29][6]/Q}}
@file 386: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[29][7]/Q} .original_name {fir_filter/coefficients_r_reg[29][7]/Q}}
@file 387: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[29][8]/Q} .original_name {fir_filter/coefficients_r_reg[29][8]/Q}}
@file 388: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[29][9]/Q} .original_name {fir_filter/coefficients_r_reg[29][9]/Q}}
@file 389: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[29][10]/Q} .original_name {fir_filter/coefficients_r_reg[29][10]/Q}}
@file 390: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[29][11]/Q} .original_name {fir_filter/coefficients_r_reg[29][11]/Q}}
@file 391: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[30][0]/Q} .original_name {fir_filter/coefficients_r_reg[30][0]/Q}}
@file 392: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[30][1]/Q} .original_name {fir_filter/coefficients_r_reg[30][1]/Q}}
@file 393: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[30][2]/Q} .original_name {fir_filter/coefficients_r_reg[30][2]/Q}}
@file 394: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[30][3]/Q} .original_name {fir_filter/coefficients_r_reg[30][3]/Q}}
@file 395: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[30][4]/Q} .original_name {fir_filter/coefficients_r_reg[30][4]/Q}}
@file 396: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[30][5]/Q} .original_name {fir_filter/coefficients_r_reg[30][5]/Q}}
@file 397: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[30][6]/Q} .original_name {fir_filter/coefficients_r_reg[30][6]/Q}}
@file 398: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[30][7]/Q} .original_name {fir_filter/coefficients_r_reg[30][7]/Q}}
@file 399: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[30][8]/Q} .original_name {fir_filter/coefficients_r_reg[30][8]/Q}}
@file 400: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[30][9]/Q} .original_name {fir_filter/coefficients_r_reg[30][9]/Q}}
@file 401: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[30][10]/Q} .original_name {fir_filter/coefficients_r_reg[30][10]/Q}}
@file 402: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[30][11]/Q} .original_name {fir_filter/coefficients_r_reg[30][11]/Q}}
@file 403: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[31][0]/Q} .original_name {fir_filter/coefficients_r_reg[31][0]/Q}}
@file 404: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[31][1]/Q} .original_name {fir_filter/coefficients_r_reg[31][1]/Q}}
@file 405: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[31][2]/Q} .original_name {fir_filter/coefficients_r_reg[31][2]/Q}}
@file 406: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[31][3]/Q} .original_name {fir_filter/coefficients_r_reg[31][3]/Q}}
@file 407: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[31][4]/Q} .original_name {fir_filter/coefficients_r_reg[31][4]/Q}}
@file 408: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[31][5]/Q} .original_name {fir_filter/coefficients_r_reg[31][5]/Q}}
@file 409: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[31][6]/Q} .original_name {fir_filter/coefficients_r_reg[31][6]/Q}}
@file 410: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[31][7]/Q} .original_name {fir_filter/coefficients_r_reg[31][7]/Q}}
@file 411: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[31][8]/Q} .original_name {fir_filter/coefficients_r_reg[31][8]/Q}}
@file 412: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[31][9]/Q} .original_name {fir_filter/coefficients_r_reg[31][9]/Q}}
@file 413: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[31][10]/Q} .original_name {fir_filter/coefficients_r_reg[31][10]/Q}}
@file 414: catch {set_db {pin:filter_top/fir_filter/coefficients_r_reg[31][11]/Q} .original_name {fir_filter/coefficients_r_reg[31][11]/Q}}
@file 415: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[0][1]/Q} .original_name {fir_filter/sum_r_reg[0][1]/Q}}
@file 416: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[0][2]/Q} .original_name {fir_filter/sum_r_reg[0][2]/Q}}
@file 417: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[0][3]/Q} .original_name {fir_filter/sum_r_reg[0][3]/Q}}
@file 418: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[0][4]/Q} .original_name {fir_filter/sum_r_reg[0][4]/Q}}
@file 419: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[0][5]/Q} .original_name {fir_filter/sum_r_reg[0][5]/Q}}
@file 420: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[0][6]/Q} .original_name {fir_filter/sum_r_reg[0][6]/Q}}
@file 421: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[0][7]/Q} .original_name {fir_filter/sum_r_reg[0][7]/Q}}
@file 422: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[0][8]/Q} .original_name {fir_filter/sum_r_reg[0][8]/Q}}
@file 423: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[0][9]/Q} .original_name {fir_filter/sum_r_reg[0][9]/Q}}
@file 424: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[0][10]/Q} .original_name {fir_filter/sum_r_reg[0][10]/Q}}
@file 425: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[0][11]/Q} .original_name {fir_filter/sum_r_reg[0][11]/Q}}
@file 426: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[0][12]/Q} .original_name {fir_filter/sum_r_reg[0][12]/Q}}
@file 427: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[0][13]/Q} .original_name {fir_filter/sum_r_reg[0][13]/Q}}
@file 428: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[0][14]/Q} .original_name {fir_filter/sum_r_reg[0][14]/Q}}
@file 429: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[0][15]/Q} .original_name {fir_filter/sum_r_reg[0][15]/Q}}
@file 430: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[0][16]/Q} .original_name {fir_filter/sum_r_reg[0][16]/Q}}
@file 431: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[0][17]/Q} .original_name {fir_filter/sum_r_reg[0][17]/Q}}
@file 432: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[0][18]/Q} .original_name {fir_filter/sum_r_reg[0][18]/Q}}
@file 433: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[0][19]/Q} .original_name {fir_filter/sum_r_reg[0][19]/Q}}
@file 434: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[0][20]/Q} .original_name {fir_filter/sum_r_reg[0][20]/Q}}
@file 435: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[0][21]/Q} .original_name {fir_filter/sum_r_reg[0][21]/Q}}
@file 436: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[0][22]/Q} .original_name {fir_filter/sum_r_reg[0][22]/Q}}
@file 437: catch {set_db {pin:filter_top/fir_filter/din_r_reg[0]/Q} .original_name {fir_filter/din_r_reg[0]/Q}}
@file 438: catch {set_db {pin:filter_top/fir_filter/din_r_reg[1]/Q} .original_name {fir_filter/din_r_reg[1]/Q}}
@file 439: catch {set_db {pin:filter_top/fir_filter/din_r_reg[1]/QN} .original_name {fir_filter/din_r_reg[1]/Q}}
@file 440: catch {set_db {pin:filter_top/fir_filter/din_r_reg[2]/Q} .original_name {fir_filter/din_r_reg[2]/Q}}
@file 441: catch {set_db {pin:filter_top/fir_filter/din_r_reg[2]/QN} .original_name {fir_filter/din_r_reg[2]/Q}}
@file 442: catch {set_db {pin:filter_top/fir_filter/din_r_reg[3]/Q} .original_name {fir_filter/din_r_reg[3]/Q}}
@file 443: catch {set_db {pin:filter_top/fir_filter/din_r_reg[3]/QN} .original_name {fir_filter/din_r_reg[3]/Q}}
@file 444: catch {set_db {pin:filter_top/fir_filter/din_r_reg[4]/Q} .original_name {fir_filter/din_r_reg[4]/Q}}
@file 445: catch {set_db {pin:filter_top/fir_filter/din_r_reg[4]/QN} .original_name {fir_filter/din_r_reg[4]/Q}}
@file 446: catch {set_db {pin:filter_top/fir_filter/din_r_reg[5]/Q} .original_name {fir_filter/din_r_reg[5]/Q}}
@file 447: catch {set_db {pin:filter_top/fir_filter/din_r_reg[5]/QN} .original_name {fir_filter/din_r_reg[5]/Q}}
@file 448: catch {set_db {pin:filter_top/fir_filter/din_r_reg[6]/Q} .original_name {fir_filter/din_r_reg[6]/Q}}
@file 449: catch {set_db {pin:filter_top/fir_filter/din_r_reg[6]/QN} .original_name {fir_filter/din_r_reg[6]/Q}}
@file 450: catch {set_db {pin:filter_top/fir_filter/din_r_reg[7]/Q} .original_name {fir_filter/din_r_reg[7]/Q}}
@file 451: catch {set_db {pin:filter_top/fir_filter/din_r_reg[7]/QN} .original_name {fir_filter/din_r_reg[7]/Q}}
@file 452: catch {set_db {pin:filter_top/fir_filter/din_r_reg[8]/Q} .original_name {fir_filter/din_r_reg[8]/Q}}
@file 453: catch {set_db {pin:filter_top/fir_filter/din_r_reg[8]/QN} .original_name {fir_filter/din_r_reg[8]/Q}}
@file 454: catch {set_db {pin:filter_top/fir_filter/din_r_reg[9]/Q} .original_name {fir_filter/din_r_reg[9]/Q}}
@file 455: catch {set_db {pin:filter_top/fir_filter/din_r_reg[9]/QN} .original_name {fir_filter/din_r_reg[9]/Q}}
@file 456: catch {set_db {pin:filter_top/fir_filter/din_r_reg[10]/Q} .original_name {fir_filter/din_r_reg[10]/Q}}
@file 457: catch {set_db {pin:filter_top/fir_filter/din_r_reg[10]/QN} .original_name {fir_filter/din_r_reg[10]/Q}}
@file 458: catch {set_db {pin:filter_top/fir_filter/din_r_reg[11]/Q} .original_name {fir_filter/din_r_reg[11]/Q}}
@file 459: catch {set_db {pin:filter_top/fir_filter/din_r_reg[11]/QN} .original_name {fir_filter/din_r_reg[11]/Q}}
@file 460: catch {set_db {pin:filter_top/fir_filter/read_value_reg[0]/Q} .original_name {fir_filter/read_value_reg[0]/Q}}
@file 461: catch {set_db {pin:filter_top/fir_filter/read_value_reg[1]/Q} .original_name {fir_filter/read_value_reg[1]/Q}}
@file 462: catch {set_db {pin:filter_top/fir_filter/read_value_reg[2]/Q} .original_name {fir_filter/read_value_reg[2]/Q}}
@file 463: catch {set_db {pin:filter_top/fir_filter/read_value_reg[3]/Q} .original_name {fir_filter/read_value_reg[3]/Q}}
@file 464: catch {set_db {pin:filter_top/fir_filter/read_value_reg[4]/Q} .original_name {fir_filter/read_value_reg[4]/Q}}
@file 465: catch {set_db {pin:filter_top/fir_filter/read_value_reg[5]/Q} .original_name {fir_filter/read_value_reg[5]/Q}}
@file 466: catch {set_db {pin:filter_top/fir_filter/read_value_reg[6]/Q} .original_name {fir_filter/read_value_reg[6]/Q}}
@file 467: catch {set_db {pin:filter_top/fir_filter/read_value_reg[7]/Q} .original_name {fir_filter/read_value_reg[7]/Q}}
@file 468: catch {set_db {pin:filter_top/fir_filter/read_value_reg[8]/Q} .original_name {fir_filter/read_value_reg[8]/Q}}
@file 469: catch {set_db {pin:filter_top/fir_filter/read_value_reg[9]/Q} .original_name {fir_filter/read_value_reg[9]/Q}}
@file 470: catch {set_db {pin:filter_top/fir_filter/read_value_reg[10]/Q} .original_name {fir_filter/read_value_reg[10]/Q}}
@file 471: catch {set_db {pin:filter_top/fir_filter/read_value_reg[11]/Q} .original_name {fir_filter/read_value_reg[11]/Q}}
@file 472: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[0][0]/Q} .original_name {fir_filter/sum_r_reg[0][0]/Q}}
@file 473: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[0][0]/QN} .original_name {fir_filter/sum_r_reg[0][0]/Q}}
@file 474: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[1][0]/Q} .original_name {fir_filter/sum_r_reg[1][0]/Q}}
@file 475: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[1][0]/QN} .original_name {fir_filter/sum_r_reg[1][0]/Q}}
@file 476: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[1][1]/Q} .original_name {fir_filter/sum_r_reg[1][1]/Q}}
@file 477: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[1][2]/Q} .original_name {fir_filter/sum_r_reg[1][2]/Q}}
@file 478: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[1][3]/Q} .original_name {fir_filter/sum_r_reg[1][3]/Q}}
@file 479: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[1][4]/Q} .original_name {fir_filter/sum_r_reg[1][4]/Q}}
@file 480: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[1][5]/Q} .original_name {fir_filter/sum_r_reg[1][5]/Q}}
@file 481: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[1][6]/Q} .original_name {fir_filter/sum_r_reg[1][6]/Q}}
@file 482: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[1][7]/Q} .original_name {fir_filter/sum_r_reg[1][7]/Q}}
@file 483: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[1][8]/Q} .original_name {fir_filter/sum_r_reg[1][8]/Q}}
@file 484: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[1][9]/Q} .original_name {fir_filter/sum_r_reg[1][9]/Q}}
@file 485: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[1][10]/Q} .original_name {fir_filter/sum_r_reg[1][10]/Q}}
@file 486: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[1][11]/Q} .original_name {fir_filter/sum_r_reg[1][11]/Q}}
@file 487: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[1][12]/Q} .original_name {fir_filter/sum_r_reg[1][12]/Q}}
@file 488: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[1][13]/Q} .original_name {fir_filter/sum_r_reg[1][13]/Q}}
@file 489: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[1][14]/Q} .original_name {fir_filter/sum_r_reg[1][14]/Q}}
@file 490: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[1][15]/Q} .original_name {fir_filter/sum_r_reg[1][15]/Q}}
@file 491: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[1][16]/Q} .original_name {fir_filter/sum_r_reg[1][16]/Q}}
@file 492: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[1][17]/Q} .original_name {fir_filter/sum_r_reg[1][17]/Q}}
@file 493: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[1][18]/Q} .original_name {fir_filter/sum_r_reg[1][18]/Q}}
@file 494: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[1][19]/Q} .original_name {fir_filter/sum_r_reg[1][19]/Q}}
@file 495: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[1][20]/Q} .original_name {fir_filter/sum_r_reg[1][20]/Q}}
@file 496: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[1][21]/Q} .original_name {fir_filter/sum_r_reg[1][21]/Q}}
@file 497: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[1][22]/Q} .original_name {fir_filter/sum_r_reg[1][22]/QN}}
@file 498: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[2][0]/Q} .original_name {fir_filter/sum_r_reg[2][0]/Q}}
@file 499: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[2][0]/QN} .original_name {fir_filter/sum_r_reg[2][0]/Q}}
@file 500: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[2][1]/Q} .original_name {fir_filter/sum_r_reg[2][1]/Q}}
@file 501: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[2][2]/Q} .original_name {fir_filter/sum_r_reg[2][2]/Q}}
@file 502: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[2][3]/Q} .original_name {fir_filter/sum_r_reg[2][3]/Q}}
@file 503: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[2][4]/Q} .original_name {fir_filter/sum_r_reg[2][4]/Q}}
@file 504: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[2][5]/Q} .original_name {fir_filter/sum_r_reg[2][5]/Q}}
@file 505: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[2][6]/Q} .original_name {fir_filter/sum_r_reg[2][6]/Q}}
@file 506: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[2][7]/Q} .original_name {fir_filter/sum_r_reg[2][7]/Q}}
@file 507: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[2][8]/Q} .original_name {fir_filter/sum_r_reg[2][8]/Q}}
@file 508: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[2][9]/Q} .original_name {fir_filter/sum_r_reg[2][9]/Q}}
@file 509: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[2][10]/Q} .original_name {fir_filter/sum_r_reg[2][10]/Q}}
@file 510: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[2][11]/Q} .original_name {fir_filter/sum_r_reg[2][11]/Q}}
@file 511: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[2][12]/Q} .original_name {fir_filter/sum_r_reg[2][12]/Q}}
@file 512: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[2][13]/Q} .original_name {fir_filter/sum_r_reg[2][13]/Q}}
@file 513: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[2][14]/Q} .original_name {fir_filter/sum_r_reg[2][14]/Q}}
@file 514: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[2][15]/Q} .original_name {fir_filter/sum_r_reg[2][15]/Q}}
@file 515: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[2][16]/Q} .original_name {fir_filter/sum_r_reg[2][16]/Q}}
@file 516: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[2][17]/Q} .original_name {fir_filter/sum_r_reg[2][17]/Q}}
@file 517: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[2][18]/Q} .original_name {fir_filter/sum_r_reg[2][18]/Q}}
@file 518: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[2][19]/Q} .original_name {fir_filter/sum_r_reg[2][19]/Q}}
@file 519: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[2][20]/Q} .original_name {fir_filter/sum_r_reg[2][20]/Q}}
@file 520: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[2][21]/Q} .original_name {fir_filter/sum_r_reg[2][21]/Q}}
@file 521: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[2][22]/Q} .original_name {fir_filter/sum_r_reg[2][22]/QN}}
@file 522: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[3][0]/Q} .original_name {fir_filter/sum_r_reg[3][0]/Q}}
@file 523: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[3][0]/QN} .original_name {fir_filter/sum_r_reg[3][0]/Q}}
@file 524: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[3][1]/Q} .original_name {fir_filter/sum_r_reg[3][1]/Q}}
@file 525: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[3][2]/Q} .original_name {fir_filter/sum_r_reg[3][2]/Q}}
@file 526: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[3][3]/Q} .original_name {fir_filter/sum_r_reg[3][3]/Q}}
@file 527: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[3][4]/Q} .original_name {fir_filter/sum_r_reg[3][4]/Q}}
@file 528: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[3][5]/Q} .original_name {fir_filter/sum_r_reg[3][5]/Q}}
@file 529: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[3][6]/Q} .original_name {fir_filter/sum_r_reg[3][6]/Q}}
@file 530: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[3][7]/Q} .original_name {fir_filter/sum_r_reg[3][7]/Q}}
@file 531: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[3][8]/Q} .original_name {fir_filter/sum_r_reg[3][8]/Q}}
@file 532: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[3][9]/Q} .original_name {fir_filter/sum_r_reg[3][9]/Q}}
@file 533: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[3][10]/Q} .original_name {fir_filter/sum_r_reg[3][10]/Q}}
@file 534: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[3][11]/Q} .original_name {fir_filter/sum_r_reg[3][11]/Q}}
@file 535: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[3][12]/Q} .original_name {fir_filter/sum_r_reg[3][12]/Q}}
@file 536: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[3][13]/Q} .original_name {fir_filter/sum_r_reg[3][13]/Q}}
@file 537: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[3][14]/Q} .original_name {fir_filter/sum_r_reg[3][14]/Q}}
@file 538: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[3][15]/Q} .original_name {fir_filter/sum_r_reg[3][15]/Q}}
@file 539: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[3][16]/Q} .original_name {fir_filter/sum_r_reg[3][16]/Q}}
@file 540: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[3][17]/Q} .original_name {fir_filter/sum_r_reg[3][17]/Q}}
@file 541: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[3][18]/Q} .original_name {fir_filter/sum_r_reg[3][18]/Q}}
@file 542: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[3][19]/Q} .original_name {fir_filter/sum_r_reg[3][19]/Q}}
@file 543: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[3][20]/Q} .original_name {fir_filter/sum_r_reg[3][20]/Q}}
@file 544: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[3][21]/Q} .original_name {fir_filter/sum_r_reg[3][21]/Q}}
@file 545: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[3][22]/Q} .original_name {fir_filter/sum_r_reg[3][22]/QN}}
@file 546: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[4][0]/Q} .original_name {fir_filter/sum_r_reg[4][0]/Q}}
@file 547: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[4][0]/QN} .original_name {fir_filter/sum_r_reg[4][0]/Q}}
@file 548: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[4][1]/Q} .original_name {fir_filter/sum_r_reg[4][1]/Q}}
@file 549: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[4][2]/Q} .original_name {fir_filter/sum_r_reg[4][2]/Q}}
@file 550: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[4][3]/Q} .original_name {fir_filter/sum_r_reg[4][3]/Q}}
@file 551: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[4][4]/Q} .original_name {fir_filter/sum_r_reg[4][4]/Q}}
@file 552: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[4][5]/Q} .original_name {fir_filter/sum_r_reg[4][5]/Q}}
@file 553: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[4][6]/Q} .original_name {fir_filter/sum_r_reg[4][6]/Q}}
@file 554: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[4][7]/Q} .original_name {fir_filter/sum_r_reg[4][7]/Q}}
@file 555: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[4][8]/Q} .original_name {fir_filter/sum_r_reg[4][8]/Q}}
@file 556: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[4][9]/Q} .original_name {fir_filter/sum_r_reg[4][9]/Q}}
@file 557: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[4][10]/Q} .original_name {fir_filter/sum_r_reg[4][10]/Q}}
@file 558: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[4][11]/Q} .original_name {fir_filter/sum_r_reg[4][11]/Q}}
@file 559: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[4][12]/Q} .original_name {fir_filter/sum_r_reg[4][12]/Q}}
@file 560: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[4][13]/Q} .original_name {fir_filter/sum_r_reg[4][13]/Q}}
@file 561: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[4][14]/Q} .original_name {fir_filter/sum_r_reg[4][14]/Q}}
@file 562: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[4][15]/Q} .original_name {fir_filter/sum_r_reg[4][15]/Q}}
@file 563: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[4][16]/Q} .original_name {fir_filter/sum_r_reg[4][16]/Q}}
@file 564: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[4][17]/Q} .original_name {fir_filter/sum_r_reg[4][17]/Q}}
@file 565: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[4][18]/Q} .original_name {fir_filter/sum_r_reg[4][18]/Q}}
@file 566: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[4][19]/Q} .original_name {fir_filter/sum_r_reg[4][19]/Q}}
@file 567: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[4][20]/Q} .original_name {fir_filter/sum_r_reg[4][20]/Q}}
@file 568: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[4][21]/Q} .original_name {fir_filter/sum_r_reg[4][21]/Q}}
@file 569: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[4][22]/Q} .original_name {fir_filter/sum_r_reg[4][22]/QN}}
@file 570: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[5][0]/Q} .original_name {fir_filter/sum_r_reg[5][0]/Q}}
@file 571: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[5][0]/QN} .original_name {fir_filter/sum_r_reg[5][0]/Q}}
@file 572: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[5][1]/Q} .original_name {fir_filter/sum_r_reg[5][1]/Q}}
@file 573: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[5][2]/Q} .original_name {fir_filter/sum_r_reg[5][2]/Q}}
@file 574: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[5][3]/Q} .original_name {fir_filter/sum_r_reg[5][3]/Q}}
@file 575: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[5][4]/Q} .original_name {fir_filter/sum_r_reg[5][4]/Q}}
@file 576: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[5][5]/Q} .original_name {fir_filter/sum_r_reg[5][5]/Q}}
@file 577: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[5][6]/Q} .original_name {fir_filter/sum_r_reg[5][6]/Q}}
@file 578: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[5][7]/Q} .original_name {fir_filter/sum_r_reg[5][7]/Q}}
@file 579: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[5][8]/Q} .original_name {fir_filter/sum_r_reg[5][8]/Q}}
@file 580: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[5][9]/Q} .original_name {fir_filter/sum_r_reg[5][9]/Q}}
@file 581: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[5][10]/Q} .original_name {fir_filter/sum_r_reg[5][10]/Q}}
@file 582: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[5][11]/Q} .original_name {fir_filter/sum_r_reg[5][11]/Q}}
@file 583: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[5][12]/Q} .original_name {fir_filter/sum_r_reg[5][12]/Q}}
@file 584: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[5][13]/Q} .original_name {fir_filter/sum_r_reg[5][13]/Q}}
@file 585: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[5][14]/Q} .original_name {fir_filter/sum_r_reg[5][14]/Q}}
@file 586: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[5][15]/Q} .original_name {fir_filter/sum_r_reg[5][15]/Q}}
@file 587: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[5][16]/Q} .original_name {fir_filter/sum_r_reg[5][16]/Q}}
@file 588: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[5][17]/Q} .original_name {fir_filter/sum_r_reg[5][17]/Q}}
@file 589: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[5][18]/Q} .original_name {fir_filter/sum_r_reg[5][18]/Q}}
@file 590: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[5][19]/Q} .original_name {fir_filter/sum_r_reg[5][19]/Q}}
@file 591: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[5][20]/Q} .original_name {fir_filter/sum_r_reg[5][20]/Q}}
@file 592: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[5][21]/Q} .original_name {fir_filter/sum_r_reg[5][21]/Q}}
@file 593: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[5][22]/Q} .original_name {fir_filter/sum_r_reg[5][22]/QN}}
@file 594: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[6][0]/Q} .original_name {fir_filter/sum_r_reg[6][0]/Q}}
@file 595: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[6][0]/QN} .original_name {fir_filter/sum_r_reg[6][0]/Q}}
@file 596: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[6][1]/Q} .original_name {fir_filter/sum_r_reg[6][1]/Q}}
@file 597: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[6][2]/Q} .original_name {fir_filter/sum_r_reg[6][2]/Q}}
@file 598: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[6][3]/Q} .original_name {fir_filter/sum_r_reg[6][3]/Q}}
@file 599: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[6][4]/Q} .original_name {fir_filter/sum_r_reg[6][4]/Q}}
@file 600: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[6][5]/Q} .original_name {fir_filter/sum_r_reg[6][5]/Q}}
@file 601: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[6][6]/Q} .original_name {fir_filter/sum_r_reg[6][6]/Q}}
@file 602: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[6][7]/Q} .original_name {fir_filter/sum_r_reg[6][7]/Q}}
@file 603: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[6][8]/Q} .original_name {fir_filter/sum_r_reg[6][8]/Q}}
@file 604: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[6][9]/Q} .original_name {fir_filter/sum_r_reg[6][9]/Q}}
@file 605: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[6][10]/Q} .original_name {fir_filter/sum_r_reg[6][10]/Q}}
@file 606: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[6][11]/Q} .original_name {fir_filter/sum_r_reg[6][11]/Q}}
@file 607: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[6][12]/Q} .original_name {fir_filter/sum_r_reg[6][12]/Q}}
@file 608: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[6][13]/Q} .original_name {fir_filter/sum_r_reg[6][13]/Q}}
@file 609: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[6][14]/Q} .original_name {fir_filter/sum_r_reg[6][14]/Q}}
@file 610: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[6][15]/Q} .original_name {fir_filter/sum_r_reg[6][15]/Q}}
@file 611: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[6][16]/Q} .original_name {fir_filter/sum_r_reg[6][16]/Q}}
@file 612: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[6][17]/Q} .original_name {fir_filter/sum_r_reg[6][17]/Q}}
@file 613: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[6][18]/Q} .original_name {fir_filter/sum_r_reg[6][18]/Q}}
@file 614: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[6][19]/Q} .original_name {fir_filter/sum_r_reg[6][19]/Q}}
@file 615: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[6][20]/Q} .original_name {fir_filter/sum_r_reg[6][20]/Q}}
@file 616: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[6][21]/Q} .original_name {fir_filter/sum_r_reg[6][21]/Q}}
@file 617: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[6][22]/Q} .original_name {fir_filter/sum_r_reg[6][22]/QN}}
@file 618: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[7][0]/Q} .original_name {fir_filter/sum_r_reg[7][0]/Q}}
@file 619: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[7][0]/QN} .original_name {fir_filter/sum_r_reg[7][0]/Q}}
@file 620: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[7][1]/Q} .original_name {fir_filter/sum_r_reg[7][1]/Q}}
@file 621: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[7][2]/Q} .original_name {fir_filter/sum_r_reg[7][2]/Q}}
@file 622: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[7][3]/Q} .original_name {fir_filter/sum_r_reg[7][3]/Q}}
@file 623: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[7][4]/Q} .original_name {fir_filter/sum_r_reg[7][4]/Q}}
@file 624: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[7][5]/Q} .original_name {fir_filter/sum_r_reg[7][5]/Q}}
@file 625: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[7][6]/Q} .original_name {fir_filter/sum_r_reg[7][6]/Q}}
@file 626: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[7][7]/Q} .original_name {fir_filter/sum_r_reg[7][7]/Q}}
@file 627: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[7][8]/Q} .original_name {fir_filter/sum_r_reg[7][8]/Q}}
@file 628: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[7][9]/Q} .original_name {fir_filter/sum_r_reg[7][9]/Q}}
@file 629: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[7][10]/Q} .original_name {fir_filter/sum_r_reg[7][10]/Q}}
@file 630: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[7][11]/Q} .original_name {fir_filter/sum_r_reg[7][11]/Q}}
@file 631: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[7][12]/Q} .original_name {fir_filter/sum_r_reg[7][12]/Q}}
@file 632: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[7][13]/Q} .original_name {fir_filter/sum_r_reg[7][13]/Q}}
@file 633: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[7][14]/Q} .original_name {fir_filter/sum_r_reg[7][14]/Q}}
@file 634: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[7][15]/Q} .original_name {fir_filter/sum_r_reg[7][15]/Q}}
@file 635: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[7][16]/Q} .original_name {fir_filter/sum_r_reg[7][16]/Q}}
@file 636: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[7][17]/Q} .original_name {fir_filter/sum_r_reg[7][17]/Q}}
@file 637: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[7][18]/Q} .original_name {fir_filter/sum_r_reg[7][18]/Q}}
@file 638: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[7][19]/Q} .original_name {fir_filter/sum_r_reg[7][19]/Q}}
@file 639: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[7][20]/Q} .original_name {fir_filter/sum_r_reg[7][20]/Q}}
@file 640: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[7][21]/Q} .original_name {fir_filter/sum_r_reg[7][21]/Q}}
@file 641: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[7][22]/Q} .original_name {fir_filter/sum_r_reg[7][22]/QN}}
@file 642: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[8][0]/Q} .original_name {fir_filter/sum_r_reg[8][0]/Q}}
@file 643: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[8][0]/QN} .original_name {fir_filter/sum_r_reg[8][0]/Q}}
@file 644: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[8][1]/Q} .original_name {fir_filter/sum_r_reg[8][1]/Q}}
@file 645: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[8][2]/Q} .original_name {fir_filter/sum_r_reg[8][2]/Q}}
@file 646: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[8][3]/Q} .original_name {fir_filter/sum_r_reg[8][3]/Q}}
@file 647: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[8][4]/Q} .original_name {fir_filter/sum_r_reg[8][4]/Q}}
@file 648: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[8][5]/Q} .original_name {fir_filter/sum_r_reg[8][5]/Q}}
@file 649: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[8][6]/Q} .original_name {fir_filter/sum_r_reg[8][6]/Q}}
@file 650: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[8][7]/Q} .original_name {fir_filter/sum_r_reg[8][7]/Q}}
@file 651: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[8][8]/Q} .original_name {fir_filter/sum_r_reg[8][8]/Q}}
@file 652: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[8][9]/Q} .original_name {fir_filter/sum_r_reg[8][9]/Q}}
@file 653: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[8][10]/Q} .original_name {fir_filter/sum_r_reg[8][10]/Q}}
@file 654: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[8][11]/Q} .original_name {fir_filter/sum_r_reg[8][11]/Q}}
@file 655: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[8][12]/Q} .original_name {fir_filter/sum_r_reg[8][12]/Q}}
@file 656: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[8][13]/Q} .original_name {fir_filter/sum_r_reg[8][13]/Q}}
@file 657: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[8][14]/Q} .original_name {fir_filter/sum_r_reg[8][14]/Q}}
@file 658: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[8][15]/Q} .original_name {fir_filter/sum_r_reg[8][15]/Q}}
@file 659: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[8][16]/Q} .original_name {fir_filter/sum_r_reg[8][16]/Q}}
@file 660: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[8][17]/Q} .original_name {fir_filter/sum_r_reg[8][17]/Q}}
@file 661: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[8][18]/Q} .original_name {fir_filter/sum_r_reg[8][18]/Q}}
@file 662: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[8][19]/Q} .original_name {fir_filter/sum_r_reg[8][19]/Q}}
@file 663: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[8][20]/Q} .original_name {fir_filter/sum_r_reg[8][20]/Q}}
@file 664: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[8][21]/Q} .original_name {fir_filter/sum_r_reg[8][21]/Q}}
@file 665: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[8][22]/Q} .original_name {fir_filter/sum_r_reg[8][22]/QN}}
@file 666: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[9][0]/Q} .original_name {fir_filter/sum_r_reg[9][0]/Q}}
@file 667: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[9][0]/QN} .original_name {fir_filter/sum_r_reg[9][0]/Q}}
@file 668: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[9][1]/Q} .original_name {fir_filter/sum_r_reg[9][1]/Q}}
@file 669: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[9][2]/Q} .original_name {fir_filter/sum_r_reg[9][2]/Q}}
@file 670: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[9][3]/Q} .original_name {fir_filter/sum_r_reg[9][3]/Q}}
@file 671: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[9][4]/Q} .original_name {fir_filter/sum_r_reg[9][4]/Q}}
@file 672: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[9][5]/Q} .original_name {fir_filter/sum_r_reg[9][5]/Q}}
@file 673: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[9][6]/Q} .original_name {fir_filter/sum_r_reg[9][6]/Q}}
@file 674: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[9][7]/Q} .original_name {fir_filter/sum_r_reg[9][7]/Q}}
@file 675: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[9][8]/Q} .original_name {fir_filter/sum_r_reg[9][8]/Q}}
@file 676: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[9][9]/Q} .original_name {fir_filter/sum_r_reg[9][9]/Q}}
@file 677: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[9][10]/Q} .original_name {fir_filter/sum_r_reg[9][10]/Q}}
@file 678: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[9][11]/Q} .original_name {fir_filter/sum_r_reg[9][11]/Q}}
@file 679: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[9][12]/Q} .original_name {fir_filter/sum_r_reg[9][12]/Q}}
@file 680: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[9][13]/Q} .original_name {fir_filter/sum_r_reg[9][13]/Q}}
@file 681: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[9][14]/Q} .original_name {fir_filter/sum_r_reg[9][14]/Q}}
@file 682: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[9][15]/Q} .original_name {fir_filter/sum_r_reg[9][15]/Q}}
@file 683: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[9][16]/Q} .original_name {fir_filter/sum_r_reg[9][16]/Q}}
@file 684: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[9][17]/Q} .original_name {fir_filter/sum_r_reg[9][17]/Q}}
@file 685: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[9][18]/Q} .original_name {fir_filter/sum_r_reg[9][18]/Q}}
@file 686: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[9][19]/Q} .original_name {fir_filter/sum_r_reg[9][19]/Q}}
@file 687: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[9][20]/Q} .original_name {fir_filter/sum_r_reg[9][20]/Q}}
@file 688: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[9][21]/Q} .original_name {fir_filter/sum_r_reg[9][21]/Q}}
@file 689: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[9][22]/Q} .original_name {fir_filter/sum_r_reg[9][22]/QN}}
@file 690: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[10][0]/Q} .original_name {fir_filter/sum_r_reg[10][0]/Q}}
@file 691: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[10][0]/QN} .original_name {fir_filter/sum_r_reg[10][0]/Q}}
@file 692: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[10][1]/Q} .original_name {fir_filter/sum_r_reg[10][1]/Q}}
@file 693: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[10][2]/Q} .original_name {fir_filter/sum_r_reg[10][2]/Q}}
@file 694: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[10][3]/Q} .original_name {fir_filter/sum_r_reg[10][3]/Q}}
@file 695: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[10][4]/Q} .original_name {fir_filter/sum_r_reg[10][4]/Q}}
@file 696: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[10][5]/Q} .original_name {fir_filter/sum_r_reg[10][5]/Q}}
@file 697: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[10][6]/Q} .original_name {fir_filter/sum_r_reg[10][6]/Q}}
@file 698: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[10][7]/Q} .original_name {fir_filter/sum_r_reg[10][7]/Q}}
@file 699: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[10][8]/Q} .original_name {fir_filter/sum_r_reg[10][8]/Q}}
@file 700: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[10][9]/Q} .original_name {fir_filter/sum_r_reg[10][9]/Q}}
@file 701: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[10][10]/Q} .original_name {fir_filter/sum_r_reg[10][10]/Q}}
@file 702: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[10][11]/Q} .original_name {fir_filter/sum_r_reg[10][11]/Q}}
@file 703: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[10][12]/Q} .original_name {fir_filter/sum_r_reg[10][12]/Q}}
@file 704: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[10][13]/Q} .original_name {fir_filter/sum_r_reg[10][13]/Q}}
@file 705: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[10][14]/Q} .original_name {fir_filter/sum_r_reg[10][14]/Q}}
@file 706: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[10][15]/Q} .original_name {fir_filter/sum_r_reg[10][15]/Q}}
@file 707: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[10][16]/Q} .original_name {fir_filter/sum_r_reg[10][16]/Q}}
@file 708: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[10][17]/Q} .original_name {fir_filter/sum_r_reg[10][17]/Q}}
@file 709: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[10][18]/Q} .original_name {fir_filter/sum_r_reg[10][18]/Q}}
@file 710: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[10][19]/Q} .original_name {fir_filter/sum_r_reg[10][19]/Q}}
@file 711: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[10][20]/Q} .original_name {fir_filter/sum_r_reg[10][20]/Q}}
@file 712: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[10][21]/Q} .original_name {fir_filter/sum_r_reg[10][21]/Q}}
@file 713: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[10][22]/Q} .original_name {fir_filter/sum_r_reg[10][22]/QN}}
@file 714: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[11][0]/Q} .original_name {fir_filter/sum_r_reg[11][0]/Q}}
@file 715: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[11][0]/QN} .original_name {fir_filter/sum_r_reg[11][0]/Q}}
@file 716: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[11][1]/Q} .original_name {fir_filter/sum_r_reg[11][1]/Q}}
@file 717: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[11][2]/Q} .original_name {fir_filter/sum_r_reg[11][2]/Q}}
@file 718: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[11][3]/Q} .original_name {fir_filter/sum_r_reg[11][3]/Q}}
@file 719: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[11][4]/Q} .original_name {fir_filter/sum_r_reg[11][4]/Q}}
@file 720: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[11][5]/Q} .original_name {fir_filter/sum_r_reg[11][5]/Q}}
@file 721: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[11][6]/Q} .original_name {fir_filter/sum_r_reg[11][6]/Q}}
@file 722: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[11][7]/Q} .original_name {fir_filter/sum_r_reg[11][7]/Q}}
@file 723: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[11][8]/Q} .original_name {fir_filter/sum_r_reg[11][8]/Q}}
@file 724: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[11][9]/Q} .original_name {fir_filter/sum_r_reg[11][9]/Q}}
@file 725: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[11][10]/Q} .original_name {fir_filter/sum_r_reg[11][10]/Q}}
@file 726: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[11][11]/Q} .original_name {fir_filter/sum_r_reg[11][11]/Q}}
@file 727: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[11][12]/Q} .original_name {fir_filter/sum_r_reg[11][12]/Q}}
@file 728: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[11][13]/Q} .original_name {fir_filter/sum_r_reg[11][13]/Q}}
@file 729: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[11][14]/Q} .original_name {fir_filter/sum_r_reg[11][14]/Q}}
@file 730: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[11][15]/Q} .original_name {fir_filter/sum_r_reg[11][15]/Q}}
@file 731: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[11][16]/Q} .original_name {fir_filter/sum_r_reg[11][16]/Q}}
@file 732: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[11][17]/Q} .original_name {fir_filter/sum_r_reg[11][17]/Q}}
@file 733: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[11][18]/Q} .original_name {fir_filter/sum_r_reg[11][18]/Q}}
@file 734: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[11][19]/Q} .original_name {fir_filter/sum_r_reg[11][19]/Q}}
@file 735: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[11][20]/Q} .original_name {fir_filter/sum_r_reg[11][20]/Q}}
@file 736: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[11][21]/Q} .original_name {fir_filter/sum_r_reg[11][21]/Q}}
@file 737: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[11][22]/Q} .original_name {fir_filter/sum_r_reg[11][22]/QN}}
@file 738: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[12][0]/Q} .original_name {fir_filter/sum_r_reg[12][0]/Q}}
@file 739: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[12][0]/QN} .original_name {fir_filter/sum_r_reg[12][0]/Q}}
@file 740: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[12][1]/Q} .original_name {fir_filter/sum_r_reg[12][1]/Q}}
@file 741: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[12][2]/Q} .original_name {fir_filter/sum_r_reg[12][2]/Q}}
@file 742: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[12][3]/Q} .original_name {fir_filter/sum_r_reg[12][3]/Q}}
@file 743: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[12][4]/Q} .original_name {fir_filter/sum_r_reg[12][4]/Q}}
@file 744: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[12][5]/Q} .original_name {fir_filter/sum_r_reg[12][5]/Q}}
@file 745: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[12][6]/Q} .original_name {fir_filter/sum_r_reg[12][6]/Q}}
@file 746: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[12][7]/Q} .original_name {fir_filter/sum_r_reg[12][7]/Q}}
@file 747: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[12][8]/Q} .original_name {fir_filter/sum_r_reg[12][8]/Q}}
@file 748: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[12][9]/Q} .original_name {fir_filter/sum_r_reg[12][9]/Q}}
@file 749: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[12][10]/Q} .original_name {fir_filter/sum_r_reg[12][10]/Q}}
@file 750: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[12][11]/Q} .original_name {fir_filter/sum_r_reg[12][11]/Q}}
@file 751: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[12][12]/Q} .original_name {fir_filter/sum_r_reg[12][12]/Q}}
@file 752: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[12][13]/Q} .original_name {fir_filter/sum_r_reg[12][13]/Q}}
@file 753: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[12][14]/Q} .original_name {fir_filter/sum_r_reg[12][14]/Q}}
@file 754: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[12][15]/Q} .original_name {fir_filter/sum_r_reg[12][15]/Q}}
@file 755: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[12][16]/Q} .original_name {fir_filter/sum_r_reg[12][16]/Q}}
@file 756: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[12][17]/Q} .original_name {fir_filter/sum_r_reg[12][17]/Q}}
@file 757: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[12][18]/Q} .original_name {fir_filter/sum_r_reg[12][18]/Q}}
@file 758: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[12][19]/Q} .original_name {fir_filter/sum_r_reg[12][19]/Q}}
@file 759: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[12][20]/Q} .original_name {fir_filter/sum_r_reg[12][20]/Q}}
@file 760: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[12][21]/Q} .original_name {fir_filter/sum_r_reg[12][21]/Q}}
@file 761: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[12][22]/Q} .original_name {fir_filter/sum_r_reg[12][22]/QN}}
@file 762: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[13][0]/Q} .original_name {fir_filter/sum_r_reg[13][0]/Q}}
@file 763: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[13][0]/QN} .original_name {fir_filter/sum_r_reg[13][0]/Q}}
@file 764: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[13][1]/Q} .original_name {fir_filter/sum_r_reg[13][1]/Q}}
@file 765: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[13][2]/Q} .original_name {fir_filter/sum_r_reg[13][2]/Q}}
@file 766: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[13][3]/Q} .original_name {fir_filter/sum_r_reg[13][3]/Q}}
@file 767: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[13][4]/Q} .original_name {fir_filter/sum_r_reg[13][4]/Q}}
@file 768: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[13][5]/Q} .original_name {fir_filter/sum_r_reg[13][5]/Q}}
@file 769: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[13][6]/Q} .original_name {fir_filter/sum_r_reg[13][6]/Q}}
@file 770: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[13][7]/Q} .original_name {fir_filter/sum_r_reg[13][7]/Q}}
@file 771: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[13][8]/Q} .original_name {fir_filter/sum_r_reg[13][8]/Q}}
@file 772: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[13][9]/Q} .original_name {fir_filter/sum_r_reg[13][9]/Q}}
@file 773: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[13][10]/Q} .original_name {fir_filter/sum_r_reg[13][10]/Q}}
@file 774: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[13][11]/Q} .original_name {fir_filter/sum_r_reg[13][11]/Q}}
@file 775: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[13][12]/Q} .original_name {fir_filter/sum_r_reg[13][12]/Q}}
@file 776: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[13][13]/Q} .original_name {fir_filter/sum_r_reg[13][13]/Q}}
@file 777: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[13][14]/Q} .original_name {fir_filter/sum_r_reg[13][14]/Q}}
@file 778: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[13][15]/Q} .original_name {fir_filter/sum_r_reg[13][15]/Q}}
@file 779: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[13][16]/Q} .original_name {fir_filter/sum_r_reg[13][16]/Q}}
@file 780: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[13][17]/Q} .original_name {fir_filter/sum_r_reg[13][17]/Q}}
@file 781: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[13][18]/Q} .original_name {fir_filter/sum_r_reg[13][18]/Q}}
@file 782: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[13][19]/Q} .original_name {fir_filter/sum_r_reg[13][19]/Q}}
@file 783: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[13][20]/Q} .original_name {fir_filter/sum_r_reg[13][20]/Q}}
@file 784: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[13][21]/Q} .original_name {fir_filter/sum_r_reg[13][21]/Q}}
@file 785: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[13][22]/Q} .original_name {fir_filter/sum_r_reg[13][22]/QN}}
@file 786: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[14][0]/Q} .original_name {fir_filter/sum_r_reg[14][0]/Q}}
@file 787: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[14][0]/QN} .original_name {fir_filter/sum_r_reg[14][0]/Q}}
@file 788: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[14][1]/Q} .original_name {fir_filter/sum_r_reg[14][1]/Q}}
@file 789: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[14][2]/Q} .original_name {fir_filter/sum_r_reg[14][2]/Q}}
@file 790: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[14][3]/Q} .original_name {fir_filter/sum_r_reg[14][3]/Q}}
@file 791: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[14][4]/Q} .original_name {fir_filter/sum_r_reg[14][4]/Q}}
@file 792: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[14][5]/Q} .original_name {fir_filter/sum_r_reg[14][5]/Q}}
@file 793: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[14][6]/Q} .original_name {fir_filter/sum_r_reg[14][6]/Q}}
@file 794: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[14][7]/Q} .original_name {fir_filter/sum_r_reg[14][7]/Q}}
@file 795: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[14][8]/Q} .original_name {fir_filter/sum_r_reg[14][8]/Q}}
@file 796: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[14][9]/Q} .original_name {fir_filter/sum_r_reg[14][9]/Q}}
@file 797: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[14][10]/Q} .original_name {fir_filter/sum_r_reg[14][10]/Q}}
@file 798: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[14][11]/Q} .original_name {fir_filter/sum_r_reg[14][11]/Q}}
@file 799: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[14][12]/Q} .original_name {fir_filter/sum_r_reg[14][12]/Q}}
@file 800: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[14][13]/Q} .original_name {fir_filter/sum_r_reg[14][13]/Q}}
@file 801: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[14][14]/Q} .original_name {fir_filter/sum_r_reg[14][14]/Q}}
@file 802: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[14][15]/Q} .original_name {fir_filter/sum_r_reg[14][15]/Q}}
@file 803: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[14][16]/Q} .original_name {fir_filter/sum_r_reg[14][16]/Q}}
@file 804: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[14][17]/Q} .original_name {fir_filter/sum_r_reg[14][17]/Q}}
@file 805: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[14][18]/Q} .original_name {fir_filter/sum_r_reg[14][18]/Q}}
@file 806: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[14][19]/Q} .original_name {fir_filter/sum_r_reg[14][19]/Q}}
@file 807: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[14][20]/Q} .original_name {fir_filter/sum_r_reg[14][20]/Q}}
@file 808: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[14][21]/Q} .original_name {fir_filter/sum_r_reg[14][21]/Q}}
@file 809: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[14][22]/Q} .original_name {fir_filter/sum_r_reg[14][22]/QN}}
@file 810: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[15][0]/Q} .original_name {fir_filter/sum_r_reg[15][0]/Q}}
@file 811: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[15][0]/QN} .original_name {fir_filter/sum_r_reg[15][0]/Q}}
@file 812: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[15][1]/Q} .original_name {fir_filter/sum_r_reg[15][1]/Q}}
@file 813: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[15][2]/Q} .original_name {fir_filter/sum_r_reg[15][2]/Q}}
@file 814: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[15][3]/Q} .original_name {fir_filter/sum_r_reg[15][3]/Q}}
@file 815: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[15][4]/Q} .original_name {fir_filter/sum_r_reg[15][4]/Q}}
@file 816: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[15][5]/Q} .original_name {fir_filter/sum_r_reg[15][5]/Q}}
@file 817: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[15][6]/Q} .original_name {fir_filter/sum_r_reg[15][6]/Q}}
@file 818: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[15][7]/Q} .original_name {fir_filter/sum_r_reg[15][7]/Q}}
@file 819: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[15][8]/Q} .original_name {fir_filter/sum_r_reg[15][8]/Q}}
@file 820: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[15][9]/Q} .original_name {fir_filter/sum_r_reg[15][9]/Q}}
@file 821: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[15][10]/Q} .original_name {fir_filter/sum_r_reg[15][10]/Q}}
@file 822: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[15][11]/Q} .original_name {fir_filter/sum_r_reg[15][11]/Q}}
@file 823: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[15][12]/Q} .original_name {fir_filter/sum_r_reg[15][12]/Q}}
@file 824: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[15][13]/Q} .original_name {fir_filter/sum_r_reg[15][13]/Q}}
@file 825: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[15][14]/Q} .original_name {fir_filter/sum_r_reg[15][14]/Q}}
@file 826: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[15][15]/Q} .original_name {fir_filter/sum_r_reg[15][15]/Q}}
@file 827: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[15][16]/Q} .original_name {fir_filter/sum_r_reg[15][16]/Q}}
@file 828: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[15][17]/Q} .original_name {fir_filter/sum_r_reg[15][17]/Q}}
@file 829: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[15][18]/Q} .original_name {fir_filter/sum_r_reg[15][18]/Q}}
@file 830: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[15][19]/Q} .original_name {fir_filter/sum_r_reg[15][19]/Q}}
@file 831: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[15][20]/Q} .original_name {fir_filter/sum_r_reg[15][20]/Q}}
@file 832: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[15][21]/Q} .original_name {fir_filter/sum_r_reg[15][21]/Q}}
@file 833: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[15][22]/Q} .original_name {fir_filter/sum_r_reg[15][22]/QN}}
@file 834: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[16][0]/Q} .original_name {fir_filter/sum_r_reg[16][0]/Q}}
@file 835: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[16][0]/QN} .original_name {fir_filter/sum_r_reg[16][0]/Q}}
@file 836: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[16][1]/Q} .original_name {fir_filter/sum_r_reg[16][1]/Q}}
@file 837: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[16][2]/Q} .original_name {fir_filter/sum_r_reg[16][2]/Q}}
@file 838: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[16][3]/Q} .original_name {fir_filter/sum_r_reg[16][3]/Q}}
@file 839: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[16][4]/Q} .original_name {fir_filter/sum_r_reg[16][4]/Q}}
@file 840: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[16][5]/Q} .original_name {fir_filter/sum_r_reg[16][5]/Q}}
@file 841: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[16][6]/Q} .original_name {fir_filter/sum_r_reg[16][6]/Q}}
@file 842: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[16][7]/Q} .original_name {fir_filter/sum_r_reg[16][7]/Q}}
@file 843: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[16][8]/Q} .original_name {fir_filter/sum_r_reg[16][8]/Q}}
@file 844: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[16][9]/Q} .original_name {fir_filter/sum_r_reg[16][9]/Q}}
@file 845: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[16][10]/Q} .original_name {fir_filter/sum_r_reg[16][10]/Q}}
@file 846: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[16][11]/Q} .original_name {fir_filter/sum_r_reg[16][11]/Q}}
@file 847: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[16][12]/Q} .original_name {fir_filter/sum_r_reg[16][12]/Q}}
@file 848: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[16][13]/Q} .original_name {fir_filter/sum_r_reg[16][13]/Q}}
@file 849: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[16][14]/Q} .original_name {fir_filter/sum_r_reg[16][14]/Q}}
@file 850: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[16][15]/Q} .original_name {fir_filter/sum_r_reg[16][15]/Q}}
@file 851: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[16][16]/Q} .original_name {fir_filter/sum_r_reg[16][16]/Q}}
@file 852: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[16][17]/Q} .original_name {fir_filter/sum_r_reg[16][17]/Q}}
@file 853: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[16][18]/Q} .original_name {fir_filter/sum_r_reg[16][18]/Q}}
@file 854: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[16][19]/Q} .original_name {fir_filter/sum_r_reg[16][19]/Q}}
@file 855: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[16][20]/Q} .original_name {fir_filter/sum_r_reg[16][20]/Q}}
@file 856: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[16][21]/Q} .original_name {fir_filter/sum_r_reg[16][21]/Q}}
@file 857: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[16][22]/Q} .original_name {fir_filter/sum_r_reg[16][22]/QN}}
@file 858: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[17][0]/Q} .original_name {fir_filter/sum_r_reg[17][0]/Q}}
@file 859: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[17][0]/QN} .original_name {fir_filter/sum_r_reg[17][0]/Q}}
@file 860: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[17][1]/Q} .original_name {fir_filter/sum_r_reg[17][1]/Q}}
@file 861: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[17][2]/Q} .original_name {fir_filter/sum_r_reg[17][2]/Q}}
@file 862: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[17][3]/Q} .original_name {fir_filter/sum_r_reg[17][3]/Q}}
@file 863: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[17][4]/Q} .original_name {fir_filter/sum_r_reg[17][4]/Q}}
@file 864: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[17][5]/Q} .original_name {fir_filter/sum_r_reg[17][5]/Q}}
@file 865: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[17][6]/Q} .original_name {fir_filter/sum_r_reg[17][6]/Q}}
@file 866: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[17][7]/Q} .original_name {fir_filter/sum_r_reg[17][7]/Q}}
@file 867: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[17][8]/Q} .original_name {fir_filter/sum_r_reg[17][8]/Q}}
@file 868: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[17][9]/Q} .original_name {fir_filter/sum_r_reg[17][9]/Q}}
@file 869: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[17][10]/Q} .original_name {fir_filter/sum_r_reg[17][10]/Q}}
@file 870: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[17][11]/Q} .original_name {fir_filter/sum_r_reg[17][11]/Q}}
@file 871: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[17][12]/Q} .original_name {fir_filter/sum_r_reg[17][12]/Q}}
@file 872: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[17][13]/Q} .original_name {fir_filter/sum_r_reg[17][13]/Q}}
@file 873: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[17][14]/Q} .original_name {fir_filter/sum_r_reg[17][14]/Q}}
@file 874: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[17][15]/Q} .original_name {fir_filter/sum_r_reg[17][15]/Q}}
@file 875: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[17][16]/Q} .original_name {fir_filter/sum_r_reg[17][16]/Q}}
@file 876: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[17][17]/Q} .original_name {fir_filter/sum_r_reg[17][17]/Q}}
@file 877: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[17][18]/Q} .original_name {fir_filter/sum_r_reg[17][18]/Q}}
@file 878: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[17][19]/Q} .original_name {fir_filter/sum_r_reg[17][19]/Q}}
@file 879: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[17][20]/Q} .original_name {fir_filter/sum_r_reg[17][20]/Q}}
@file 880: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[17][21]/Q} .original_name {fir_filter/sum_r_reg[17][21]/Q}}
@file 881: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[17][22]/Q} .original_name {fir_filter/sum_r_reg[17][22]/QN}}
@file 882: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[18][0]/Q} .original_name {fir_filter/sum_r_reg[18][0]/Q}}
@file 883: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[18][0]/QN} .original_name {fir_filter/sum_r_reg[18][0]/Q}}
@file 884: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[18][1]/Q} .original_name {fir_filter/sum_r_reg[18][1]/Q}}
@file 885: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[18][2]/Q} .original_name {fir_filter/sum_r_reg[18][2]/Q}}
@file 886: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[18][3]/Q} .original_name {fir_filter/sum_r_reg[18][3]/Q}}
@file 887: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[18][4]/Q} .original_name {fir_filter/sum_r_reg[18][4]/Q}}
@file 888: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[18][5]/Q} .original_name {fir_filter/sum_r_reg[18][5]/Q}}
@file 889: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[18][6]/Q} .original_name {fir_filter/sum_r_reg[18][6]/Q}}
@file 890: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[18][7]/Q} .original_name {fir_filter/sum_r_reg[18][7]/Q}}
@file 891: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[18][8]/Q} .original_name {fir_filter/sum_r_reg[18][8]/Q}}
@file 892: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[18][9]/Q} .original_name {fir_filter/sum_r_reg[18][9]/Q}}
@file 893: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[18][10]/Q} .original_name {fir_filter/sum_r_reg[18][10]/Q}}
@file 894: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[18][11]/Q} .original_name {fir_filter/sum_r_reg[18][11]/Q}}
@file 895: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[18][12]/Q} .original_name {fir_filter/sum_r_reg[18][12]/Q}}
@file 896: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[18][13]/Q} .original_name {fir_filter/sum_r_reg[18][13]/Q}}
@file 897: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[18][14]/Q} .original_name {fir_filter/sum_r_reg[18][14]/Q}}
@file 898: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[18][15]/Q} .original_name {fir_filter/sum_r_reg[18][15]/Q}}
@file 899: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[18][16]/Q} .original_name {fir_filter/sum_r_reg[18][16]/Q}}
@file 900: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[18][17]/Q} .original_name {fir_filter/sum_r_reg[18][17]/Q}}
@file 901: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[18][18]/Q} .original_name {fir_filter/sum_r_reg[18][18]/Q}}
@file 902: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[18][19]/Q} .original_name {fir_filter/sum_r_reg[18][19]/Q}}
@file 903: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[18][20]/Q} .original_name {fir_filter/sum_r_reg[18][20]/Q}}
@file 904: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[18][21]/Q} .original_name {fir_filter/sum_r_reg[18][21]/Q}}
@file 905: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[18][22]/Q} .original_name {fir_filter/sum_r_reg[18][22]/QN}}
@file 906: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[19][0]/Q} .original_name {fir_filter/sum_r_reg[19][0]/Q}}
@file 907: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[19][0]/QN} .original_name {fir_filter/sum_r_reg[19][0]/Q}}
@file 908: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[19][1]/Q} .original_name {fir_filter/sum_r_reg[19][1]/Q}}
@file 909: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[19][2]/Q} .original_name {fir_filter/sum_r_reg[19][2]/Q}}
@file 910: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[19][3]/Q} .original_name {fir_filter/sum_r_reg[19][3]/Q}}
@file 911: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[19][4]/Q} .original_name {fir_filter/sum_r_reg[19][4]/Q}}
@file 912: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[19][5]/Q} .original_name {fir_filter/sum_r_reg[19][5]/Q}}
@file 913: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[19][6]/Q} .original_name {fir_filter/sum_r_reg[19][6]/Q}}
@file 914: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[19][7]/Q} .original_name {fir_filter/sum_r_reg[19][7]/Q}}
@file 915: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[19][8]/Q} .original_name {fir_filter/sum_r_reg[19][8]/Q}}
@file 916: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[19][9]/Q} .original_name {fir_filter/sum_r_reg[19][9]/Q}}
@file 917: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[19][10]/Q} .original_name {fir_filter/sum_r_reg[19][10]/Q}}
@file 918: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[19][11]/Q} .original_name {fir_filter/sum_r_reg[19][11]/Q}}
@file 919: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[19][12]/Q} .original_name {fir_filter/sum_r_reg[19][12]/Q}}
@file 920: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[19][13]/Q} .original_name {fir_filter/sum_r_reg[19][13]/Q}}
@file 921: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[19][14]/Q} .original_name {fir_filter/sum_r_reg[19][14]/Q}}
@file 922: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[19][15]/Q} .original_name {fir_filter/sum_r_reg[19][15]/Q}}
@file 923: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[19][16]/Q} .original_name {fir_filter/sum_r_reg[19][16]/Q}}
@file 924: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[19][17]/Q} .original_name {fir_filter/sum_r_reg[19][17]/Q}}
@file 925: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[19][18]/Q} .original_name {fir_filter/sum_r_reg[19][18]/Q}}
@file 926: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[19][19]/Q} .original_name {fir_filter/sum_r_reg[19][19]/Q}}
@file 927: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[19][20]/Q} .original_name {fir_filter/sum_r_reg[19][20]/Q}}
@file 928: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[19][21]/Q} .original_name {fir_filter/sum_r_reg[19][21]/Q}}
@file 929: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[19][22]/Q} .original_name {fir_filter/sum_r_reg[19][22]/QN}}
@file 930: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[20][0]/Q} .original_name {fir_filter/sum_r_reg[20][0]/Q}}
@file 931: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[20][0]/QN} .original_name {fir_filter/sum_r_reg[20][0]/Q}}
@file 932: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[20][1]/Q} .original_name {fir_filter/sum_r_reg[20][1]/Q}}
@file 933: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[20][2]/Q} .original_name {fir_filter/sum_r_reg[20][2]/Q}}
@file 934: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[20][3]/Q} .original_name {fir_filter/sum_r_reg[20][3]/Q}}
@file 935: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[20][4]/Q} .original_name {fir_filter/sum_r_reg[20][4]/Q}}
@file 936: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[20][5]/Q} .original_name {fir_filter/sum_r_reg[20][5]/Q}}
@file 937: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[20][6]/Q} .original_name {fir_filter/sum_r_reg[20][6]/Q}}
@file 938: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[20][7]/Q} .original_name {fir_filter/sum_r_reg[20][7]/Q}}
@file 939: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[20][8]/Q} .original_name {fir_filter/sum_r_reg[20][8]/Q}}
@file 940: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[20][9]/Q} .original_name {fir_filter/sum_r_reg[20][9]/Q}}
@file 941: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[20][10]/Q} .original_name {fir_filter/sum_r_reg[20][10]/Q}}
@file 942: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[20][11]/Q} .original_name {fir_filter/sum_r_reg[20][11]/Q}}
@file 943: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[20][12]/Q} .original_name {fir_filter/sum_r_reg[20][12]/Q}}
@file 944: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[20][13]/Q} .original_name {fir_filter/sum_r_reg[20][13]/Q}}
@file 945: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[20][14]/Q} .original_name {fir_filter/sum_r_reg[20][14]/Q}}
@file 946: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[20][15]/Q} .original_name {fir_filter/sum_r_reg[20][15]/Q}}
@file 947: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[20][16]/Q} .original_name {fir_filter/sum_r_reg[20][16]/Q}}
@file 948: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[20][17]/Q} .original_name {fir_filter/sum_r_reg[20][17]/Q}}
@file 949: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[20][18]/Q} .original_name {fir_filter/sum_r_reg[20][18]/Q}}
@file 950: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[20][19]/Q} .original_name {fir_filter/sum_r_reg[20][19]/Q}}
@file 951: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[20][20]/Q} .original_name {fir_filter/sum_r_reg[20][20]/Q}}
@file 952: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[20][21]/Q} .original_name {fir_filter/sum_r_reg[20][21]/Q}}
@file 953: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[20][22]/Q} .original_name {fir_filter/sum_r_reg[20][22]/QN}}
@file 954: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[21][0]/Q} .original_name {fir_filter/sum_r_reg[21][0]/Q}}
@file 955: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[21][0]/QN} .original_name {fir_filter/sum_r_reg[21][0]/Q}}
@file 956: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[21][1]/Q} .original_name {fir_filter/sum_r_reg[21][1]/Q}}
@file 957: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[21][2]/Q} .original_name {fir_filter/sum_r_reg[21][2]/Q}}
@file 958: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[21][3]/Q} .original_name {fir_filter/sum_r_reg[21][3]/Q}}
@file 959: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[21][4]/Q} .original_name {fir_filter/sum_r_reg[21][4]/Q}}
@file 960: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[21][5]/Q} .original_name {fir_filter/sum_r_reg[21][5]/Q}}
@file 961: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[21][6]/Q} .original_name {fir_filter/sum_r_reg[21][6]/Q}}
@file 962: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[21][7]/Q} .original_name {fir_filter/sum_r_reg[21][7]/Q}}
@file 963: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[21][8]/Q} .original_name {fir_filter/sum_r_reg[21][8]/Q}}
@file 964: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[21][9]/Q} .original_name {fir_filter/sum_r_reg[21][9]/Q}}
@file 965: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[21][10]/Q} .original_name {fir_filter/sum_r_reg[21][10]/Q}}
@file 966: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[21][11]/Q} .original_name {fir_filter/sum_r_reg[21][11]/Q}}
@file 967: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[21][12]/Q} .original_name {fir_filter/sum_r_reg[21][12]/Q}}
@file 968: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[21][13]/Q} .original_name {fir_filter/sum_r_reg[21][13]/Q}}
@file 969: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[21][14]/Q} .original_name {fir_filter/sum_r_reg[21][14]/Q}}
@file 970: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[21][15]/Q} .original_name {fir_filter/sum_r_reg[21][15]/Q}}
@file 971: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[21][16]/Q} .original_name {fir_filter/sum_r_reg[21][16]/Q}}
@file 972: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[21][17]/Q} .original_name {fir_filter/sum_r_reg[21][17]/Q}}
@file 973: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[21][18]/Q} .original_name {fir_filter/sum_r_reg[21][18]/Q}}
@file 974: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[21][19]/Q} .original_name {fir_filter/sum_r_reg[21][19]/Q}}
@file 975: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[21][20]/Q} .original_name {fir_filter/sum_r_reg[21][20]/Q}}
@file 976: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[21][21]/Q} .original_name {fir_filter/sum_r_reg[21][21]/Q}}
@file 977: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[21][22]/Q} .original_name {fir_filter/sum_r_reg[21][22]/QN}}
@file 978: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[22][0]/Q} .original_name {fir_filter/sum_r_reg[22][0]/Q}}
@file 979: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[22][0]/QN} .original_name {fir_filter/sum_r_reg[22][0]/Q}}
@file 980: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[22][1]/Q} .original_name {fir_filter/sum_r_reg[22][1]/Q}}
@file 981: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[22][2]/Q} .original_name {fir_filter/sum_r_reg[22][2]/Q}}
@file 982: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[22][3]/Q} .original_name {fir_filter/sum_r_reg[22][3]/Q}}
@file 983: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[22][4]/Q} .original_name {fir_filter/sum_r_reg[22][4]/Q}}
@file 984: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[22][5]/Q} .original_name {fir_filter/sum_r_reg[22][5]/Q}}
@file 985: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[22][6]/Q} .original_name {fir_filter/sum_r_reg[22][6]/Q}}
@file 986: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[22][7]/Q} .original_name {fir_filter/sum_r_reg[22][7]/Q}}
@file 987: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[22][8]/Q} .original_name {fir_filter/sum_r_reg[22][8]/Q}}
@file 988: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[22][9]/Q} .original_name {fir_filter/sum_r_reg[22][9]/Q}}
@file 989: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[22][10]/Q} .original_name {fir_filter/sum_r_reg[22][10]/Q}}
@file 990: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[22][11]/Q} .original_name {fir_filter/sum_r_reg[22][11]/Q}}
@file 991: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[22][12]/Q} .original_name {fir_filter/sum_r_reg[22][12]/Q}}
@file 992: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[22][13]/Q} .original_name {fir_filter/sum_r_reg[22][13]/Q}}
@file 993: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[22][14]/Q} .original_name {fir_filter/sum_r_reg[22][14]/Q}}
@file 994: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[22][15]/Q} .original_name {fir_filter/sum_r_reg[22][15]/Q}}
@file 995: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[22][16]/Q} .original_name {fir_filter/sum_r_reg[22][16]/Q}}
@file 996: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[22][17]/Q} .original_name {fir_filter/sum_r_reg[22][17]/Q}}
@file 997: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[22][18]/Q} .original_name {fir_filter/sum_r_reg[22][18]/Q}}
@file 998: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[22][19]/Q} .original_name {fir_filter/sum_r_reg[22][19]/Q}}
@file 999: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[22][20]/Q} .original_name {fir_filter/sum_r_reg[22][20]/Q}}
@file 1000: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[22][21]/Q} .original_name {fir_filter/sum_r_reg[22][21]/Q}}
@file 1001: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[22][22]/Q} .original_name {fir_filter/sum_r_reg[22][22]/QN}}
@file 1002: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[23][0]/Q} .original_name {fir_filter/sum_r_reg[23][0]/Q}}
@file 1003: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[23][0]/QN} .original_name {fir_filter/sum_r_reg[23][0]/Q}}
@file 1004: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[23][1]/Q} .original_name {fir_filter/sum_r_reg[23][1]/Q}}
@file 1005: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[23][2]/Q} .original_name {fir_filter/sum_r_reg[23][2]/Q}}
@file 1006: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[23][3]/Q} .original_name {fir_filter/sum_r_reg[23][3]/Q}}
@file 1007: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[23][4]/Q} .original_name {fir_filter/sum_r_reg[23][4]/Q}}
@file 1008: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[23][5]/Q} .original_name {fir_filter/sum_r_reg[23][5]/Q}}
@file 1009: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[23][6]/Q} .original_name {fir_filter/sum_r_reg[23][6]/Q}}
@file 1010: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[23][7]/Q} .original_name {fir_filter/sum_r_reg[23][7]/Q}}
@file 1011: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[23][8]/Q} .original_name {fir_filter/sum_r_reg[23][8]/Q}}
@file 1012: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[23][9]/Q} .original_name {fir_filter/sum_r_reg[23][9]/Q}}
@file 1013: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[23][10]/Q} .original_name {fir_filter/sum_r_reg[23][10]/Q}}
@file 1014: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[23][11]/Q} .original_name {fir_filter/sum_r_reg[23][11]/Q}}
@file 1015: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[23][12]/Q} .original_name {fir_filter/sum_r_reg[23][12]/Q}}
@file 1016: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[23][13]/Q} .original_name {fir_filter/sum_r_reg[23][13]/Q}}
@file 1017: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[23][14]/Q} .original_name {fir_filter/sum_r_reg[23][14]/Q}}
@file 1018: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[23][15]/Q} .original_name {fir_filter/sum_r_reg[23][15]/Q}}
@file 1019: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[23][16]/Q} .original_name {fir_filter/sum_r_reg[23][16]/Q}}
@file 1020: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[23][17]/Q} .original_name {fir_filter/sum_r_reg[23][17]/Q}}
@file 1021: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[23][18]/Q} .original_name {fir_filter/sum_r_reg[23][18]/Q}}
@file 1022: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[23][19]/Q} .original_name {fir_filter/sum_r_reg[23][19]/Q}}
@file 1023: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[23][20]/Q} .original_name {fir_filter/sum_r_reg[23][20]/Q}}
@file 1024: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[23][21]/Q} .original_name {fir_filter/sum_r_reg[23][21]/Q}}
@file 1025: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[23][22]/Q} .original_name {fir_filter/sum_r_reg[23][22]/QN}}
@file 1026: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[24][0]/Q} .original_name {fir_filter/sum_r_reg[24][0]/Q}}
@file 1027: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[24][0]/QN} .original_name {fir_filter/sum_r_reg[24][0]/Q}}
@file 1028: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[24][1]/Q} .original_name {fir_filter/sum_r_reg[24][1]/Q}}
@file 1029: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[24][2]/Q} .original_name {fir_filter/sum_r_reg[24][2]/Q}}
@file 1030: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[24][3]/Q} .original_name {fir_filter/sum_r_reg[24][3]/Q}}
@file 1031: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[24][4]/Q} .original_name {fir_filter/sum_r_reg[24][4]/Q}}
@file 1032: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[24][5]/Q} .original_name {fir_filter/sum_r_reg[24][5]/Q}}
@file 1033: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[24][6]/Q} .original_name {fir_filter/sum_r_reg[24][6]/Q}}
@file 1034: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[24][7]/Q} .original_name {fir_filter/sum_r_reg[24][7]/Q}}
@file 1035: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[24][8]/Q} .original_name {fir_filter/sum_r_reg[24][8]/Q}}
@file 1036: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[24][9]/Q} .original_name {fir_filter/sum_r_reg[24][9]/Q}}
@file 1037: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[24][10]/Q} .original_name {fir_filter/sum_r_reg[24][10]/Q}}
@file 1038: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[24][11]/Q} .original_name {fir_filter/sum_r_reg[24][11]/Q}}
@file 1039: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[24][12]/Q} .original_name {fir_filter/sum_r_reg[24][12]/Q}}
@file 1040: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[24][13]/Q} .original_name {fir_filter/sum_r_reg[24][13]/Q}}
@file 1041: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[24][14]/Q} .original_name {fir_filter/sum_r_reg[24][14]/Q}}
@file 1042: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[24][15]/Q} .original_name {fir_filter/sum_r_reg[24][15]/Q}}
@file 1043: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[24][16]/Q} .original_name {fir_filter/sum_r_reg[24][16]/Q}}
@file 1044: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[24][17]/Q} .original_name {fir_filter/sum_r_reg[24][17]/Q}}
@file 1045: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[24][18]/Q} .original_name {fir_filter/sum_r_reg[24][18]/Q}}
@file 1046: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[24][19]/Q} .original_name {fir_filter/sum_r_reg[24][19]/Q}}
@file 1047: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[24][20]/Q} .original_name {fir_filter/sum_r_reg[24][20]/Q}}
@file 1048: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[24][21]/Q} .original_name {fir_filter/sum_r_reg[24][21]/Q}}
@file 1049: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[24][22]/Q} .original_name {fir_filter/sum_r_reg[24][22]/QN}}
@file 1050: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[25][0]/Q} .original_name {fir_filter/sum_r_reg[25][0]/Q}}
@file 1051: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[25][0]/QN} .original_name {fir_filter/sum_r_reg[25][0]/Q}}
@file 1052: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[25][1]/Q} .original_name {fir_filter/sum_r_reg[25][1]/Q}}
@file 1053: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[25][2]/Q} .original_name {fir_filter/sum_r_reg[25][2]/Q}}
@file 1054: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[25][3]/Q} .original_name {fir_filter/sum_r_reg[25][3]/Q}}
@file 1055: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[25][4]/Q} .original_name {fir_filter/sum_r_reg[25][4]/Q}}
@file 1056: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[25][5]/Q} .original_name {fir_filter/sum_r_reg[25][5]/Q}}
@file 1057: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[25][6]/Q} .original_name {fir_filter/sum_r_reg[25][6]/Q}}
@file 1058: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[25][7]/Q} .original_name {fir_filter/sum_r_reg[25][7]/Q}}
@file 1059: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[25][8]/Q} .original_name {fir_filter/sum_r_reg[25][8]/Q}}
@file 1060: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[25][9]/Q} .original_name {fir_filter/sum_r_reg[25][9]/Q}}
@file 1061: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[25][10]/Q} .original_name {fir_filter/sum_r_reg[25][10]/Q}}
@file 1062: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[25][11]/Q} .original_name {fir_filter/sum_r_reg[25][11]/Q}}
@file 1063: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[25][12]/Q} .original_name {fir_filter/sum_r_reg[25][12]/Q}}
@file 1064: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[25][13]/Q} .original_name {fir_filter/sum_r_reg[25][13]/Q}}
@file 1065: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[25][14]/Q} .original_name {fir_filter/sum_r_reg[25][14]/Q}}
@file 1066: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[25][15]/Q} .original_name {fir_filter/sum_r_reg[25][15]/Q}}
@file 1067: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[25][16]/Q} .original_name {fir_filter/sum_r_reg[25][16]/Q}}
@file 1068: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[25][17]/Q} .original_name {fir_filter/sum_r_reg[25][17]/Q}}
@file 1069: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[25][18]/Q} .original_name {fir_filter/sum_r_reg[25][18]/Q}}
@file 1070: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[25][19]/Q} .original_name {fir_filter/sum_r_reg[25][19]/Q}}
@file 1071: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[25][20]/Q} .original_name {fir_filter/sum_r_reg[25][20]/Q}}
@file 1072: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[25][21]/Q} .original_name {fir_filter/sum_r_reg[25][21]/Q}}
@file 1073: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[25][22]/Q} .original_name {fir_filter/sum_r_reg[25][22]/QN}}
@file 1074: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[26][0]/Q} .original_name {fir_filter/sum_r_reg[26][0]/Q}}
@file 1075: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[26][0]/QN} .original_name {fir_filter/sum_r_reg[26][0]/Q}}
@file 1076: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[26][1]/Q} .original_name {fir_filter/sum_r_reg[26][1]/Q}}
@file 1077: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[26][2]/Q} .original_name {fir_filter/sum_r_reg[26][2]/Q}}
@file 1078: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[26][3]/Q} .original_name {fir_filter/sum_r_reg[26][3]/Q}}
@file 1079: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[26][4]/Q} .original_name {fir_filter/sum_r_reg[26][4]/Q}}
@file 1080: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[26][5]/Q} .original_name {fir_filter/sum_r_reg[26][5]/Q}}
@file 1081: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[26][6]/Q} .original_name {fir_filter/sum_r_reg[26][6]/Q}}
@file 1082: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[26][7]/Q} .original_name {fir_filter/sum_r_reg[26][7]/Q}}
@file 1083: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[26][8]/Q} .original_name {fir_filter/sum_r_reg[26][8]/Q}}
@file 1084: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[26][9]/Q} .original_name {fir_filter/sum_r_reg[26][9]/Q}}
@file 1085: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[26][10]/Q} .original_name {fir_filter/sum_r_reg[26][10]/Q}}
@file 1086: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[26][11]/Q} .original_name {fir_filter/sum_r_reg[26][11]/Q}}
@file 1087: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[26][12]/Q} .original_name {fir_filter/sum_r_reg[26][12]/Q}}
@file 1088: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[26][13]/Q} .original_name {fir_filter/sum_r_reg[26][13]/Q}}
@file 1089: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[26][14]/Q} .original_name {fir_filter/sum_r_reg[26][14]/Q}}
@file 1090: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[26][15]/Q} .original_name {fir_filter/sum_r_reg[26][15]/Q}}
@file 1091: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[26][16]/Q} .original_name {fir_filter/sum_r_reg[26][16]/Q}}
@file 1092: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[26][17]/Q} .original_name {fir_filter/sum_r_reg[26][17]/Q}}
@file 1093: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[26][18]/Q} .original_name {fir_filter/sum_r_reg[26][18]/Q}}
@file 1094: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[26][19]/Q} .original_name {fir_filter/sum_r_reg[26][19]/Q}}
@file 1095: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[26][20]/Q} .original_name {fir_filter/sum_r_reg[26][20]/Q}}
@file 1096: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[26][21]/Q} .original_name {fir_filter/sum_r_reg[26][21]/Q}}
@file 1097: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[26][22]/Q} .original_name {fir_filter/sum_r_reg[26][22]/QN}}
@file 1098: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[27][0]/Q} .original_name {fir_filter/sum_r_reg[27][0]/Q}}
@file 1099: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[27][0]/QN} .original_name {fir_filter/sum_r_reg[27][0]/Q}}
@file 1100: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[27][1]/Q} .original_name {fir_filter/sum_r_reg[27][1]/Q}}
@file 1101: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[27][2]/Q} .original_name {fir_filter/sum_r_reg[27][2]/Q}}
@file 1102: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[27][3]/Q} .original_name {fir_filter/sum_r_reg[27][3]/Q}}
@file 1103: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[27][4]/Q} .original_name {fir_filter/sum_r_reg[27][4]/Q}}
@file 1104: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[27][5]/Q} .original_name {fir_filter/sum_r_reg[27][5]/Q}}
@file 1105: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[27][6]/Q} .original_name {fir_filter/sum_r_reg[27][6]/Q}}
@file 1106: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[27][7]/Q} .original_name {fir_filter/sum_r_reg[27][7]/Q}}
@file 1107: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[27][8]/Q} .original_name {fir_filter/sum_r_reg[27][8]/Q}}
@file 1108: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[27][9]/Q} .original_name {fir_filter/sum_r_reg[27][9]/Q}}
@file 1109: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[27][10]/Q} .original_name {fir_filter/sum_r_reg[27][10]/Q}}
@file 1110: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[27][11]/Q} .original_name {fir_filter/sum_r_reg[27][11]/Q}}
@file 1111: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[27][12]/Q} .original_name {fir_filter/sum_r_reg[27][12]/Q}}
@file 1112: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[27][13]/Q} .original_name {fir_filter/sum_r_reg[27][13]/Q}}
@file 1113: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[27][14]/Q} .original_name {fir_filter/sum_r_reg[27][14]/Q}}
@file 1114: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[27][15]/Q} .original_name {fir_filter/sum_r_reg[27][15]/Q}}
@file 1115: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[27][16]/Q} .original_name {fir_filter/sum_r_reg[27][16]/Q}}
@file 1116: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[27][17]/Q} .original_name {fir_filter/sum_r_reg[27][17]/Q}}
@file 1117: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[27][18]/Q} .original_name {fir_filter/sum_r_reg[27][18]/Q}}
@file 1118: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[27][19]/Q} .original_name {fir_filter/sum_r_reg[27][19]/Q}}
@file 1119: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[27][20]/Q} .original_name {fir_filter/sum_r_reg[27][20]/Q}}
@file 1120: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[27][21]/Q} .original_name {fir_filter/sum_r_reg[27][21]/Q}}
@file 1121: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[27][22]/Q} .original_name {fir_filter/sum_r_reg[27][22]/QN}}
@file 1122: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[28][0]/Q} .original_name {fir_filter/sum_r_reg[28][0]/Q}}
@file 1123: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[28][0]/QN} .original_name {fir_filter/sum_r_reg[28][0]/Q}}
@file 1124: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[28][1]/Q} .original_name {fir_filter/sum_r_reg[28][1]/Q}}
@file 1125: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[28][2]/Q} .original_name {fir_filter/sum_r_reg[28][2]/Q}}
@file 1126: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[28][3]/Q} .original_name {fir_filter/sum_r_reg[28][3]/Q}}
@file 1127: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[28][4]/Q} .original_name {fir_filter/sum_r_reg[28][4]/Q}}
@file 1128: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[28][5]/Q} .original_name {fir_filter/sum_r_reg[28][5]/Q}}
@file 1129: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[28][6]/Q} .original_name {fir_filter/sum_r_reg[28][6]/Q}}
@file 1130: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[28][7]/Q} .original_name {fir_filter/sum_r_reg[28][7]/Q}}
@file 1131: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[28][8]/Q} .original_name {fir_filter/sum_r_reg[28][8]/Q}}
@file 1132: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[28][9]/Q} .original_name {fir_filter/sum_r_reg[28][9]/Q}}
@file 1133: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[28][10]/Q} .original_name {fir_filter/sum_r_reg[28][10]/Q}}
@file 1134: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[28][11]/Q} .original_name {fir_filter/sum_r_reg[28][11]/Q}}
@file 1135: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[28][12]/Q} .original_name {fir_filter/sum_r_reg[28][12]/Q}}
@file 1136: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[28][13]/Q} .original_name {fir_filter/sum_r_reg[28][13]/Q}}
@file 1137: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[28][14]/Q} .original_name {fir_filter/sum_r_reg[28][14]/Q}}
@file 1138: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[28][15]/Q} .original_name {fir_filter/sum_r_reg[28][15]/Q}}
@file 1139: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[28][16]/Q} .original_name {fir_filter/sum_r_reg[28][16]/Q}}
@file 1140: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[28][17]/Q} .original_name {fir_filter/sum_r_reg[28][17]/Q}}
@file 1141: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[28][18]/Q} .original_name {fir_filter/sum_r_reg[28][18]/Q}}
@file 1142: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[28][19]/Q} .original_name {fir_filter/sum_r_reg[28][19]/Q}}
@file 1143: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[28][20]/Q} .original_name {fir_filter/sum_r_reg[28][20]/Q}}
@file 1144: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[28][21]/Q} .original_name {fir_filter/sum_r_reg[28][21]/Q}}
@file 1145: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[28][22]/Q} .original_name {fir_filter/sum_r_reg[28][22]/QN}}
@file 1146: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[29][0]/Q} .original_name {fir_filter/sum_r_reg[29][0]/Q}}
@file 1147: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[29][0]/QN} .original_name {fir_filter/sum_r_reg[29][0]/Q}}
@file 1148: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[29][1]/Q} .original_name {fir_filter/sum_r_reg[29][1]/Q}}
@file 1149: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[29][2]/Q} .original_name {fir_filter/sum_r_reg[29][2]/Q}}
@file 1150: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[29][3]/Q} .original_name {fir_filter/sum_r_reg[29][3]/Q}}
@file 1151: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[29][4]/Q} .original_name {fir_filter/sum_r_reg[29][4]/Q}}
@file 1152: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[29][5]/Q} .original_name {fir_filter/sum_r_reg[29][5]/Q}}
@file 1153: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[29][6]/Q} .original_name {fir_filter/sum_r_reg[29][6]/Q}}
@file 1154: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[29][7]/Q} .original_name {fir_filter/sum_r_reg[29][7]/Q}}
@file 1155: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[29][8]/Q} .original_name {fir_filter/sum_r_reg[29][8]/Q}}
@file 1156: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[29][9]/Q} .original_name {fir_filter/sum_r_reg[29][9]/Q}}
@file 1157: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[29][10]/Q} .original_name {fir_filter/sum_r_reg[29][10]/Q}}
@file 1158: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[29][11]/Q} .original_name {fir_filter/sum_r_reg[29][11]/Q}}
@file 1159: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[29][12]/Q} .original_name {fir_filter/sum_r_reg[29][12]/Q}}
@file 1160: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[29][13]/Q} .original_name {fir_filter/sum_r_reg[29][13]/Q}}
@file 1161: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[29][14]/Q} .original_name {fir_filter/sum_r_reg[29][14]/Q}}
@file 1162: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[29][15]/Q} .original_name {fir_filter/sum_r_reg[29][15]/Q}}
@file 1163: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[29][16]/Q} .original_name {fir_filter/sum_r_reg[29][16]/Q}}
@file 1164: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[29][17]/Q} .original_name {fir_filter/sum_r_reg[29][17]/Q}}
@file 1165: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[29][18]/Q} .original_name {fir_filter/sum_r_reg[29][18]/Q}}
@file 1166: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[29][19]/Q} .original_name {fir_filter/sum_r_reg[29][19]/Q}}
@file 1167: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[29][20]/Q} .original_name {fir_filter/sum_r_reg[29][20]/Q}}
@file 1168: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[29][21]/Q} .original_name {fir_filter/sum_r_reg[29][21]/Q}}
@file 1169: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[29][22]/Q} .original_name {fir_filter/sum_r_reg[29][22]/QN}}
@file 1170: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[30][0]/Q} .original_name {fir_filter/sum_r_reg[30][0]/Q}}
@file 1171: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[30][1]/Q} .original_name {fir_filter/sum_r_reg[30][1]/Q}}
@file 1172: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[30][2]/Q} .original_name {fir_filter/sum_r_reg[30][2]/Q}}
@file 1173: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[30][3]/Q} .original_name {fir_filter/sum_r_reg[30][3]/Q}}
@file 1174: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[30][4]/Q} .original_name {fir_filter/sum_r_reg[30][4]/Q}}
@file 1175: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[30][5]/Q} .original_name {fir_filter/sum_r_reg[30][5]/Q}}
@file 1176: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[30][6]/Q} .original_name {fir_filter/sum_r_reg[30][6]/Q}}
@file 1177: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[30][7]/Q} .original_name {fir_filter/sum_r_reg[30][7]/Q}}
@file 1178: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[30][8]/Q} .original_name {fir_filter/sum_r_reg[30][8]/Q}}
@file 1179: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[30][9]/Q} .original_name {fir_filter/sum_r_reg[30][9]/Q}}
@file 1180: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[30][10]/Q} .original_name {fir_filter/sum_r_reg[30][10]/Q}}
@file 1181: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[30][11]/Q} .original_name {fir_filter/sum_r_reg[30][11]/Q}}
@file 1182: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[30][12]/Q} .original_name {fir_filter/sum_r_reg[30][12]/Q}}
@file 1183: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[30][13]/Q} .original_name {fir_filter/sum_r_reg[30][13]/Q}}
@file 1184: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[30][14]/Q} .original_name {fir_filter/sum_r_reg[30][14]/Q}}
@file 1185: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[30][15]/Q} .original_name {fir_filter/sum_r_reg[30][15]/Q}}
@file 1186: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[30][16]/Q} .original_name {fir_filter/sum_r_reg[30][16]/Q}}
@file 1187: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[30][17]/Q} .original_name {fir_filter/sum_r_reg[30][17]/Q}}
@file 1188: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[30][18]/Q} .original_name {fir_filter/sum_r_reg[30][18]/Q}}
@file 1189: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[30][19]/Q} .original_name {fir_filter/sum_r_reg[30][19]/Q}}
@file 1190: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[30][20]/Q} .original_name {fir_filter/sum_r_reg[30][20]/Q}}
@file 1191: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[30][21]/Q} .original_name {fir_filter/sum_r_reg[30][21]/Q}}
@file 1192: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[30][22]/Q} .original_name {fir_filter/sum_r_reg[30][22]/QN}}
@file 1193: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[31][11]/Q} .original_name {fir_filter/sum_r_reg[31][11]/Q}}
@file 1194: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[31][12]/Q} .original_name {fir_filter/sum_r_reg[31][12]/Q}}
@file 1195: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[31][13]/Q} .original_name {fir_filter/sum_r_reg[31][13]/Q}}
@file 1196: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[31][14]/Q} .original_name {fir_filter/sum_r_reg[31][14]/Q}}
@file 1197: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[31][15]/Q} .original_name {fir_filter/sum_r_reg[31][15]/Q}}
@file 1198: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[31][16]/Q} .original_name {fir_filter/sum_r_reg[31][16]/Q}}
@file 1199: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[31][17]/Q} .original_name {fir_filter/sum_r_reg[31][17]/Q}}
@file 1200: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[31][18]/Q} .original_name {fir_filter/sum_r_reg[31][18]/Q}}
@file 1201: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[31][19]/Q} .original_name {fir_filter/sum_r_reg[31][19]/Q}}
@file 1202: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[31][20]/Q} .original_name {fir_filter/sum_r_reg[31][20]/Q}}
@file 1203: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[31][21]/Q} .original_name {fir_filter/sum_r_reg[31][21]/Q}}
@file 1204: catch {set_db {pin:filter_top/fir_filter/sum_r_reg[31][22]/Q} .original_name {fir_filter/sum_r_reg[31][22]/Q}}
@file 1205: catch {set_db pin:filter_top/spi/load_reg_reg/Q .original_name spi/load_reg_reg/Q}
@file 1206: catch {set_db pin:filter_top/spi/load_reg_reg/QN .original_name spi/load_reg_reg/Q}
@file 1207: catch {set_db pin:filter_top/spi/MISO_reg/Q .original_name spi/MISO_reg/Q}
@file 1208: catch {set_db pin:filter_top/spi/MISO_reg/QN .original_name spi/MISO_reg/Q}
@file 1209: catch {set_db {pin:filter_top/spi/MISO_reg_reg[2]/Q} .original_name {spi/MISO_reg_reg[2]/Q}}
@file 1210: catch {set_db {pin:filter_top/spi/MISO_reg_reg[2]/QN} .original_name {spi/MISO_reg_reg[2]/Q}}
@file 1211: catch {set_db {pin:filter_top/spi/MISO_reg_reg[3]/Q} .original_name {spi/MISO_reg_reg[3]/Q}}
@file 1212: catch {set_db {pin:filter_top/spi/MISO_reg_reg[3]/QN} .original_name {spi/MISO_reg_reg[3]/Q}}
@file 1213: catch {set_db {pin:filter_top/spi/MISO_reg_reg[4]/Q} .original_name {spi/MISO_reg_reg[4]/Q}}
@file 1214: catch {set_db {pin:filter_top/spi/MISO_reg_reg[4]/QN} .original_name {spi/MISO_reg_reg[4]/Q}}
@file 1215: catch {set_db {pin:filter_top/spi/MISO_reg_reg[5]/Q} .original_name {spi/MISO_reg_reg[5]/Q}}
@file 1216: catch {set_db {pin:filter_top/spi/MISO_reg_reg[5]/QN} .original_name {spi/MISO_reg_reg[5]/Q}}
@file 1217: catch {set_db {pin:filter_top/spi/MISO_reg_reg[6]/Q} .original_name {spi/MISO_reg_reg[6]/Q}}
@file 1218: catch {set_db {pin:filter_top/spi/MISO_reg_reg[6]/QN} .original_name {spi/MISO_reg_reg[6]/Q}}
@file 1219: catch {set_db {pin:filter_top/spi/MISO_reg_reg[7]/Q} .original_name {spi/MISO_reg_reg[7]/Q}}
@file 1220: catch {set_db {pin:filter_top/spi/MISO_reg_reg[7]/QN} .original_name {spi/MISO_reg_reg[7]/Q}}
@file 1221: catch {set_db {pin:filter_top/spi/MISO_reg_reg[8]/Q} .original_name {spi/MISO_reg_reg[8]/Q}}
@file 1222: catch {set_db {pin:filter_top/spi/MISO_reg_reg[8]/QN} .original_name {spi/MISO_reg_reg[8]/Q}}
@file 1223: catch {set_db {pin:filter_top/spi/MISO_reg_reg[9]/Q} .original_name {spi/MISO_reg_reg[9]/Q}}
@file 1224: catch {set_db {pin:filter_top/spi/MISO_reg_reg[9]/QN} .original_name {spi/MISO_reg_reg[9]/Q}}
@file 1225: catch {set_db {pin:filter_top/spi/MISO_reg_reg[10]/Q} .original_name {spi/MISO_reg_reg[10]/Q}}
@file 1226: catch {set_db {pin:filter_top/spi/MISO_reg_reg[10]/QN} .original_name {spi/MISO_reg_reg[10]/Q}}
@file 1227: catch {set_db {pin:filter_top/spi/MISO_reg_reg[11]/Q} .original_name {spi/MISO_reg_reg[11]/Q}}
@file 1228: catch {set_db {pin:filter_top/spi/MISO_reg_reg[11]/QN} .original_name {spi/MISO_reg_reg[11]/Q}}
@file 1229: catch {set_db {pin:filter_top/spi/MISO_reg_reg[12]/Q} .original_name {spi/MISO_reg_reg[12]/Q}}
@file 1230: catch {set_db {pin:filter_top/spi/MISO_reg_reg[12]/QN} .original_name {spi/MISO_reg_reg[12]/Q}}
@file 1231: catch {set_db {pin:filter_top/spi/MISO_reg_reg[13]/Q} .original_name {spi/MISO_reg_reg[13]/Q}}
@file 1232: catch {set_db {pin:filter_top/spi/MISO_reg_reg[13]/QN} .original_name {spi/MISO_reg_reg[13]/Q}}
@file 1233: catch {set_db {pin:filter_top/spi/MISO_reg_reg[14]/Q} .original_name {spi/MISO_reg_reg[14]/Q}}
@file 1234: catch {set_db {pin:filter_top/spi/MISO_reg_reg[14]/QN} .original_name {spi/MISO_reg_reg[14]/Q}}
@file 1235: catch {set_db {pin:filter_top/spi/MISO_reg_reg[15]/Q} .original_name {spi/MISO_reg_reg[15]/Q}}
@file 1236: catch {set_db {pin:filter_top/spi/MISO_reg_reg[15]/QN} .original_name {spi/MISO_reg_reg[15]/Q}}
@file 1237: catch {set_db pin:filter_top/spi/begin_count_reg/Q .original_name spi/begin_count_reg/Q}
@file 1238: catch {set_db pin:filter_top/spi/begin_count_reg/QN .original_name spi/begin_count_reg/Q}
@file 1239: catch {set_db {pin:filter_top/spi/byte_count_reg[0]/Q} .original_name {spi/byte_count_reg[0]/Q}}
@file 1240: catch {set_db {pin:filter_top/spi/byte_count_reg[0]/QN} .original_name {spi/byte_count_reg[0]/Q}}
@file 1241: catch {set_db {pin:filter_top/spi/byte_count_reg[1]/Q} .original_name {spi/byte_count_reg[1]/Q}}
@file 1242: catch {set_db {pin:filter_top/spi/byte_count_reg[1]/QN} .original_name {spi/byte_count_reg[1]/Q}}
@file 1243: catch {set_db {pin:filter_top/spi/byte_received_reg[0]/Q} .original_name {spi/byte_received_reg[0]/Q}}
@file 1244: catch {set_db {pin:filter_top/spi/byte_received_reg[0]/QN} .original_name {spi/byte_received_reg[0]/Q}}
@file 1245: catch {set_db {pin:filter_top/spi/byte_received_reg[1]/Q} .original_name {spi/byte_received_reg[1]/Q}}
@file 1246: catch {set_db {pin:filter_top/spi/byte_received_reg[1]/QN} .original_name {spi/byte_received_reg[1]/Q}}
@file 1247: catch {set_db {pin:filter_top/spi/byte_received_reg[2]/Q} .original_name {spi/byte_received_reg[2]/Q}}
@file 1248: catch {set_db {pin:filter_top/spi/byte_received_reg[2]/QN} .original_name {spi/byte_received_reg[2]/Q}}
@file 1249: catch {set_db {pin:filter_top/spi/byte_received_reg[3]/Q} .original_name {spi/byte_received_reg[3]/Q}}
@file 1250: catch {set_db {pin:filter_top/spi/byte_received_reg[3]/QN} .original_name {spi/byte_received_reg[3]/Q}}
@file 1251: catch {set_db {pin:filter_top/spi/byte_received_reg[4]/Q} .original_name {spi/byte_received_reg[4]/Q}}
@file 1252: catch {set_db {pin:filter_top/spi/byte_received_reg[4]/QN} .original_name {spi/byte_received_reg[4]/Q}}
@file 1253: catch {set_db {pin:filter_top/spi/byte_received_reg[5]/Q} .original_name {spi/byte_received_reg[5]/Q}}
@file 1254: catch {set_db {pin:filter_top/spi/byte_received_reg[5]/QN} .original_name {spi/byte_received_reg[5]/Q}}
@file 1255: catch {set_db {pin:filter_top/spi/byte_received_reg[6]/Q} .original_name {spi/byte_received_reg[6]/Q}}
@file 1256: catch {set_db {pin:filter_top/spi/byte_received_reg[6]/QN} .original_name {spi/byte_received_reg[6]/Q}}
@file 1257: catch {set_db {pin:filter_top/spi/byte_received_reg[7]/Q} .original_name {spi/byte_received_reg[7]/Q}}
@file 1258: catch {set_db {pin:filter_top/spi/byte_received_reg[7]/QN} .original_name {spi/byte_received_reg[7]/Q}}
@file 1259: catch {set_db {pin:filter_top/spi/count_bits_reg[0]/Q} .original_name {spi/count_bits_reg[0]/Q}}
@file 1260: catch {set_db {pin:filter_top/spi/count_bits_reg[0]/QN} .original_name {spi/count_bits_reg[0]/Q}}
@file 1261: catch {set_db {pin:filter_top/spi/count_bits_reg[1]/Q} .original_name {spi/count_bits_reg[1]/Q}}
@file 1262: catch {set_db {pin:filter_top/spi/count_bits_reg[1]/QN} .original_name {spi/count_bits_reg[1]/Q}}
@file 1263: catch {set_db {pin:filter_top/spi/count_bits_reg[2]/Q} .original_name {spi/count_bits_reg[2]/Q}}
@file 1264: catch {set_db {pin:filter_top/spi/count_bits_reg[2]/QN} .original_name {spi/count_bits_reg[2]/Q}}
@file 1265: catch {set_db {pin:filter_top/spi/read_address_reg[0]/Q} .original_name {spi/read_address_reg[0]/Q}}
@file 1266: catch {set_db {pin:filter_top/spi/read_address_reg[0]/QN} .original_name {spi/read_address_reg[0]/Q}}
@file 1267: catch {set_db {pin:filter_top/spi/read_address_reg[1]/Q} .original_name {spi/read_address_reg[1]/Q}}
@file 1268: catch {set_db {pin:filter_top/spi/read_address_reg[1]/QN} .original_name {spi/read_address_reg[1]/Q}}
@file 1269: catch {set_db {pin:filter_top/spi/read_address_reg[2]/Q} .original_name {spi/read_address_reg[2]/Q}}
@file 1270: catch {set_db {pin:filter_top/spi/read_address_reg[2]/QN} .original_name {spi/read_address_reg[2]/Q}}
@file 1271: catch {set_db {pin:filter_top/spi/read_address_reg[3]/Q} .original_name {spi/read_address_reg[3]/Q}}
@file 1272: catch {set_db {pin:filter_top/spi/read_address_reg[3]/QN} .original_name {spi/read_address_reg[3]/Q}}
@file 1273: catch {set_db {pin:filter_top/spi/read_address_reg[4]/Q} .original_name {spi/read_address_reg[4]/Q}}
@file 1274: catch {set_db {pin:filter_top/spi/read_address_reg[4]/QN} .original_name {spi/read_address_reg[4]/Q}}
@file 1275: catch {set_db {pin:filter_top/spi/read_address_reg[5]/Q} .original_name {spi/read_address_reg[5]/Q}}
@file 1276: catch {set_db {pin:filter_top/spi/read_address_reg[5]/QN} .original_name {spi/read_address_reg[5]/Q}}
@file 1277: catch {set_db {pin:filter_top/spi/read_address_reg[6]/Q} .original_name {spi/read_address_reg[6]/Q}}
@file 1278: catch {set_db {pin:filter_top/spi/read_address_reg[6]/QN} .original_name {spi/read_address_reg[6]/Q}}
@file 1279: catch {set_db {pin:filter_top/spi/read_address_reg[7]/Q} .original_name {spi/read_address_reg[7]/Q}}
@file 1280: catch {set_db {pin:filter_top/spi/read_address_reg[7]/QN} .original_name {spi/read_address_reg[7]/Q}}
@file 1281: catch {set_db pin:filter_top/spi/read_que_reg/Q .original_name spi/read_que_reg/Q}
@file 1282: catch {set_db pin:filter_top/spi/read_que_reg/QN .original_name spi/read_que_reg/Q}
@file 1283: catch {set_db pin:filter_top/spi/reading_reg/Q .original_name spi/reading_reg/Q}
@file 1284: catch {set_db pin:filter_top/spi/reading_reg/QN .original_name spi/reading_reg/Q}
@file 1285: catch {set_db {pin:filter_top/spi/store1_reg[0]/Q} .original_name {spi/store1_reg[0]/Q}}
@file 1286: catch {set_db {pin:filter_top/spi/store1_reg[0]/QN} .original_name {spi/store1_reg[0]/Q}}
@file 1287: catch {set_db {pin:filter_top/spi/store1_reg[1]/Q} .original_name {spi/store1_reg[1]/Q}}
@file 1288: catch {set_db {pin:filter_top/spi/store1_reg[1]/QN} .original_name {spi/store1_reg[1]/Q}}
@file 1289: catch {set_db {pin:filter_top/spi/store1_reg[2]/Q} .original_name {spi/store1_reg[2]/Q}}
@file 1290: catch {set_db {pin:filter_top/spi/store1_reg[2]/QN} .original_name {spi/store1_reg[2]/Q}}
@file 1291: catch {set_db {pin:filter_top/spi/store1_reg[3]/Q} .original_name {spi/store1_reg[3]/Q}}
@file 1292: catch {set_db {pin:filter_top/spi/store1_reg[3]/QN} .original_name {spi/store1_reg[3]/Q}}
@file 1293: catch {set_db {pin:filter_top/spi/store1_reg[4]/Q} .original_name {spi/store1_reg[4]/Q}}
@file 1294: catch {set_db {pin:filter_top/spi/store1_reg[4]/QN} .original_name {spi/store1_reg[4]/Q}}
@file 1295: catch {set_db {pin:filter_top/spi/store1_reg[5]/Q} .original_name {spi/store1_reg[5]/Q}}
@file 1296: catch {set_db {pin:filter_top/spi/store1_reg[5]/QN} .original_name {spi/store1_reg[5]/Q}}
@file 1297: catch {set_db {pin:filter_top/spi/store1_reg[6]/Q} .original_name {spi/store1_reg[6]/Q}}
@file 1298: catch {set_db {pin:filter_top/spi/store1_reg[6]/QN} .original_name {spi/store1_reg[6]/Q}}
@file 1299: catch {set_db {pin:filter_top/spi/store1_reg[7]/Q} .original_name {spi/store1_reg[7]/Q}}
@file 1300: catch {set_db {pin:filter_top/spi/store1_reg[7]/QN} .original_name {spi/store1_reg[7]/Q}}
@file 1301: catch {set_db {pin:filter_top/spi/store2_reg[0]/Q} .original_name {spi/store2_reg[0]/Q}}
@file 1302: catch {set_db {pin:filter_top/spi/store2_reg[0]/QN} .original_name {spi/store2_reg[0]/Q}}
@file 1303: catch {set_db {pin:filter_top/spi/store2_reg[1]/Q} .original_name {spi/store2_reg[1]/Q}}
@file 1304: catch {set_db {pin:filter_top/spi/store2_reg[1]/QN} .original_name {spi/store2_reg[1]/Q}}
@file 1305: catch {set_db {pin:filter_top/spi/store2_reg[2]/Q} .original_name {spi/store2_reg[2]/Q}}
@file 1306: catch {set_db {pin:filter_top/spi/store2_reg[2]/QN} .original_name {spi/store2_reg[2]/Q}}
@file 1307: catch {set_db {pin:filter_top/spi/store2_reg[3]/Q} .original_name {spi/store2_reg[3]/Q}}
@file 1308: catch {set_db {pin:filter_top/spi/store2_reg[3]/QN} .original_name {spi/store2_reg[3]/Q}}
@file 1309: catch {set_db {pin:filter_top/spi/store2_reg[4]/Q} .original_name {spi/store2_reg[4]/Q}}
@file 1310: catch {set_db {pin:filter_top/spi/store2_reg[4]/QN} .original_name {spi/store2_reg[4]/Q}}
@file 1311: catch {set_db {pin:filter_top/spi/store2_reg[5]/Q} .original_name {spi/store2_reg[5]/Q}}
@file 1312: catch {set_db {pin:filter_top/spi/store2_reg[5]/QN} .original_name {spi/store2_reg[5]/Q}}
@file 1313: catch {set_db {pin:filter_top/spi/store2_reg[6]/Q} .original_name {spi/store2_reg[6]/Q}}
@file 1314: catch {set_db {pin:filter_top/spi/store2_reg[6]/QN} .original_name {spi/store2_reg[6]/Q}}
@file 1315: catch {set_db {pin:filter_top/spi/store2_reg[7]/Q} .original_name {spi/store2_reg[7]/Q}}
@file 1316: catch {set_db {pin:filter_top/spi/store2_reg[7]/QN} .original_name {spi/store2_reg[7]/Q}}
@file 1317: catch {set_db {pin:filter_top/spi/store3_reg[0]/Q} .original_name {spi/store3_reg[0]/Q}}
@file 1318: catch {set_db {pin:filter_top/spi/store3_reg[0]/QN} .original_name {spi/store3_reg[0]/Q}}
@file 1319: catch {set_db {pin:filter_top/spi/store3_reg[1]/Q} .original_name {spi/store3_reg[1]/Q}}
@file 1320: catch {set_db {pin:filter_top/spi/store3_reg[1]/QN} .original_name {spi/store3_reg[1]/Q}}
@file 1321: catch {set_db {pin:filter_top/spi/store3_reg[2]/Q} .original_name {spi/store3_reg[2]/Q}}
@file 1322: catch {set_db {pin:filter_top/spi/store3_reg[2]/QN} .original_name {spi/store3_reg[2]/Q}}
@file 1323: catch {set_db {pin:filter_top/spi/store3_reg[3]/Q} .original_name {spi/store3_reg[3]/Q}}
@file 1324: catch {set_db {pin:filter_top/spi/store3_reg[3]/QN} .original_name {spi/store3_reg[3]/Q}}
@file 1325: catch {set_db {pin:filter_top/spi/store3_reg[4]/Q} .original_name {spi/store3_reg[4]/Q}}
@file 1326: catch {set_db {pin:filter_top/spi/store3_reg[4]/QN} .original_name {spi/store3_reg[4]/Q}}
@file 1327: catch {set_db {pin:filter_top/spi/store3_reg[5]/Q} .original_name {spi/store3_reg[5]/Q}}
@file 1328: catch {set_db {pin:filter_top/spi/store3_reg[5]/QN} .original_name {spi/store3_reg[5]/Q}}
@file 1329: catch {set_db {pin:filter_top/spi/store3_reg[6]/Q} .original_name {spi/store3_reg[6]/Q}}
@file 1330: catch {set_db {pin:filter_top/spi/store3_reg[6]/QN} .original_name {spi/store3_reg[6]/Q}}
@file 1331: catch {set_db {pin:filter_top/spi/store3_reg[7]/Q} .original_name {spi/store3_reg[7]/Q}}
@file 1332: catch {set_db {pin:filter_top/spi/store3_reg[7]/QN} .original_name {spi/store3_reg[7]/Q}}
@file 1333: catch {set_db pin:filter_top/spi/writing_reg/Q .original_name spi/writing_reg/Q}
@file 1334: catch {set_db pin:filter_top/spi/writing_reg/QN .original_name spi/writing_reg/Q}
@file 1335: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[0][0]} .original_name {{fir_filter/coefficients_r_reg[0][0]}}}
@file 1336: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[0][1]} .original_name {{fir_filter/coefficients_r_reg[0][1]}}}
@file 1337: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[0][2]} .original_name {{fir_filter/coefficients_r_reg[0][2]}}}
@file 1338: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[0][3]} .original_name {{fir_filter/coefficients_r_reg[0][3]}}}
@file 1339: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[0][4]} .original_name {{fir_filter/coefficients_r_reg[0][4]}}}
@file 1340: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[0][5]} .original_name {{fir_filter/coefficients_r_reg[0][5]}}}
@file 1341: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[0][6]} .original_name {{fir_filter/coefficients_r_reg[0][6]}}}
@file 1342: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[0][7]} .original_name {{fir_filter/coefficients_r_reg[0][7]}}}
@file 1343: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[0][8]} .original_name {{fir_filter/coefficients_r_reg[0][8]}}}
@file 1344: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[0][9]} .original_name {{fir_filter/coefficients_r_reg[0][9]}}}
@file 1345: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[0][10]} .original_name {{fir_filter/coefficients_r_reg[0][10]}}}
@file 1346: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[0][11]} .original_name {{fir_filter/coefficients_r_reg[0][11]}}}
@file 1347: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[1][0]} .original_name {{fir_filter/coefficients_r_reg[1][0]}}}
@file 1348: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[1][1]} .original_name {{fir_filter/coefficients_r_reg[1][1]}}}
@file 1349: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[1][2]} .original_name {{fir_filter/coefficients_r_reg[1][2]}}}
@file 1350: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[1][3]} .original_name {{fir_filter/coefficients_r_reg[1][3]}}}
@file 1351: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[1][4]} .original_name {{fir_filter/coefficients_r_reg[1][4]}}}
@file 1352: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[1][5]} .original_name {{fir_filter/coefficients_r_reg[1][5]}}}
@file 1353: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[1][6]} .original_name {{fir_filter/coefficients_r_reg[1][6]}}}
@file 1354: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[1][7]} .original_name {{fir_filter/coefficients_r_reg[1][7]}}}
@file 1355: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[1][8]} .original_name {{fir_filter/coefficients_r_reg[1][8]}}}
@file 1356: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[1][9]} .original_name {{fir_filter/coefficients_r_reg[1][9]}}}
@file 1357: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[1][10]} .original_name {{fir_filter/coefficients_r_reg[1][10]}}}
@file 1358: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[1][11]} .original_name {{fir_filter/coefficients_r_reg[1][11]}}}
@file 1359: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[2][0]} .original_name {{fir_filter/coefficients_r_reg[2][0]}}}
@file 1360: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[2][1]} .original_name {{fir_filter/coefficients_r_reg[2][1]}}}
@file 1361: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[2][2]} .original_name {{fir_filter/coefficients_r_reg[2][2]}}}
@file 1362: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[2][3]} .original_name {{fir_filter/coefficients_r_reg[2][3]}}}
@file 1363: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[2][4]} .original_name {{fir_filter/coefficients_r_reg[2][4]}}}
@file 1364: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[2][5]} .original_name {{fir_filter/coefficients_r_reg[2][5]}}}
@file 1365: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[2][6]} .original_name {{fir_filter/coefficients_r_reg[2][6]}}}
@file 1366: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[2][7]} .original_name {{fir_filter/coefficients_r_reg[2][7]}}}
@file 1367: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[2][8]} .original_name {{fir_filter/coefficients_r_reg[2][8]}}}
@file 1368: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[2][9]} .original_name {{fir_filter/coefficients_r_reg[2][9]}}}
@file 1369: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[2][10]} .original_name {{fir_filter/coefficients_r_reg[2][10]}}}
@file 1370: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[2][11]} .original_name {{fir_filter/coefficients_r_reg[2][11]}}}
@file 1371: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[3][0]} .original_name {{fir_filter/coefficients_r_reg[3][0]}}}
@file 1372: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[3][1]} .original_name {{fir_filter/coefficients_r_reg[3][1]}}}
@file 1373: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[3][2]} .original_name {{fir_filter/coefficients_r_reg[3][2]}}}
@file 1374: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[3][3]} .original_name {{fir_filter/coefficients_r_reg[3][3]}}}
@file 1375: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[3][4]} .original_name {{fir_filter/coefficients_r_reg[3][4]}}}
@file 1376: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[3][5]} .original_name {{fir_filter/coefficients_r_reg[3][5]}}}
@file 1377: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[3][6]} .original_name {{fir_filter/coefficients_r_reg[3][6]}}}
@file 1378: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[3][7]} .original_name {{fir_filter/coefficients_r_reg[3][7]}}}
@file 1379: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[3][8]} .original_name {{fir_filter/coefficients_r_reg[3][8]}}}
@file 1380: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[3][9]} .original_name {{fir_filter/coefficients_r_reg[3][9]}}}
@file 1381: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[3][10]} .original_name {{fir_filter/coefficients_r_reg[3][10]}}}
@file 1382: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[3][11]} .original_name {{fir_filter/coefficients_r_reg[3][11]}}}
@file 1383: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[4][0]} .original_name {{fir_filter/coefficients_r_reg[4][0]}}}
@file 1384: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[4][1]} .original_name {{fir_filter/coefficients_r_reg[4][1]}}}
@file 1385: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[4][2]} .original_name {{fir_filter/coefficients_r_reg[4][2]}}}
@file 1386: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[4][3]} .original_name {{fir_filter/coefficients_r_reg[4][3]}}}
@file 1387: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[4][4]} .original_name {{fir_filter/coefficients_r_reg[4][4]}}}
@file 1388: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[4][5]} .original_name {{fir_filter/coefficients_r_reg[4][5]}}}
@file 1389: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[4][6]} .original_name {{fir_filter/coefficients_r_reg[4][6]}}}
@file 1390: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[4][7]} .original_name {{fir_filter/coefficients_r_reg[4][7]}}}
@file 1391: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[4][8]} .original_name {{fir_filter/coefficients_r_reg[4][8]}}}
@file 1392: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[4][9]} .original_name {{fir_filter/coefficients_r_reg[4][9]}}}
@file 1393: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[4][10]} .original_name {{fir_filter/coefficients_r_reg[4][10]}}}
@file 1394: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[4][11]} .original_name {{fir_filter/coefficients_r_reg[4][11]}}}
@file 1395: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[5][0]} .original_name {{fir_filter/coefficients_r_reg[5][0]}}}
@file 1396: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[5][1]} .original_name {{fir_filter/coefficients_r_reg[5][1]}}}
@file 1397: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[5][2]} .original_name {{fir_filter/coefficients_r_reg[5][2]}}}
@file 1398: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[5][3]} .original_name {{fir_filter/coefficients_r_reg[5][3]}}}
@file 1399: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[5][4]} .original_name {{fir_filter/coefficients_r_reg[5][4]}}}
@file 1400: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[5][5]} .original_name {{fir_filter/coefficients_r_reg[5][5]}}}
@file 1401: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[5][6]} .original_name {{fir_filter/coefficients_r_reg[5][6]}}}
@file 1402: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[5][7]} .original_name {{fir_filter/coefficients_r_reg[5][7]}}}
@file 1403: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[5][8]} .original_name {{fir_filter/coefficients_r_reg[5][8]}}}
@file 1404: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[5][9]} .original_name {{fir_filter/coefficients_r_reg[5][9]}}}
@file 1405: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[5][10]} .original_name {{fir_filter/coefficients_r_reg[5][10]}}}
@file 1406: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[5][11]} .original_name {{fir_filter/coefficients_r_reg[5][11]}}}
@file 1407: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[6][0]} .original_name {{fir_filter/coefficients_r_reg[6][0]}}}
@file 1408: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[6][1]} .original_name {{fir_filter/coefficients_r_reg[6][1]}}}
@file 1409: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[6][2]} .original_name {{fir_filter/coefficients_r_reg[6][2]}}}
@file 1410: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[6][3]} .original_name {{fir_filter/coefficients_r_reg[6][3]}}}
@file 1411: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[6][4]} .original_name {{fir_filter/coefficients_r_reg[6][4]}}}
@file 1412: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[6][5]} .original_name {{fir_filter/coefficients_r_reg[6][5]}}}
@file 1413: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[6][6]} .original_name {{fir_filter/coefficients_r_reg[6][6]}}}
@file 1414: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[6][7]} .original_name {{fir_filter/coefficients_r_reg[6][7]}}}
@file 1415: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[6][8]} .original_name {{fir_filter/coefficients_r_reg[6][8]}}}
@file 1416: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[6][9]} .original_name {{fir_filter/coefficients_r_reg[6][9]}}}
@file 1417: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[6][10]} .original_name {{fir_filter/coefficients_r_reg[6][10]}}}
@file 1418: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[6][11]} .original_name {{fir_filter/coefficients_r_reg[6][11]}}}
@file 1419: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[7][0]} .original_name {{fir_filter/coefficients_r_reg[7][0]}}}
@file 1420: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[7][1]} .original_name {{fir_filter/coefficients_r_reg[7][1]}}}
@file 1421: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[7][2]} .original_name {{fir_filter/coefficients_r_reg[7][2]}}}
@file 1422: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[7][3]} .original_name {{fir_filter/coefficients_r_reg[7][3]}}}
@file 1423: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[7][4]} .original_name {{fir_filter/coefficients_r_reg[7][4]}}}
@file 1424: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[7][5]} .original_name {{fir_filter/coefficients_r_reg[7][5]}}}
@file 1425: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[7][6]} .original_name {{fir_filter/coefficients_r_reg[7][6]}}}
@file 1426: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[7][7]} .original_name {{fir_filter/coefficients_r_reg[7][7]}}}
@file 1427: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[7][8]} .original_name {{fir_filter/coefficients_r_reg[7][8]}}}
@file 1428: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[7][9]} .original_name {{fir_filter/coefficients_r_reg[7][9]}}}
@file 1429: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[7][10]} .original_name {{fir_filter/coefficients_r_reg[7][10]}}}
@file 1430: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[7][11]} .original_name {{fir_filter/coefficients_r_reg[7][11]}}}
@file 1431: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[8][0]} .original_name {{fir_filter/coefficients_r_reg[8][0]}}}
@file 1432: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[8][1]} .original_name {{fir_filter/coefficients_r_reg[8][1]}}}
@file 1433: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[8][2]} .original_name {{fir_filter/coefficients_r_reg[8][2]}}}
@file 1434: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[8][3]} .original_name {{fir_filter/coefficients_r_reg[8][3]}}}
@file 1435: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[8][4]} .original_name {{fir_filter/coefficients_r_reg[8][4]}}}
@file 1436: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[8][5]} .original_name {{fir_filter/coefficients_r_reg[8][5]}}}
@file 1437: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[8][6]} .original_name {{fir_filter/coefficients_r_reg[8][6]}}}
@file 1438: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[8][7]} .original_name {{fir_filter/coefficients_r_reg[8][7]}}}
@file 1439: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[8][8]} .original_name {{fir_filter/coefficients_r_reg[8][8]}}}
@file 1440: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[8][9]} .original_name {{fir_filter/coefficients_r_reg[8][9]}}}
@file 1441: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[8][10]} .original_name {{fir_filter/coefficients_r_reg[8][10]}}}
@file 1442: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[8][11]} .original_name {{fir_filter/coefficients_r_reg[8][11]}}}
@file 1443: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[9][0]} .original_name {{fir_filter/coefficients_r_reg[9][0]}}}
@file 1444: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[9][1]} .original_name {{fir_filter/coefficients_r_reg[9][1]}}}
@file 1445: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[9][2]} .original_name {{fir_filter/coefficients_r_reg[9][2]}}}
@file 1446: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[9][3]} .original_name {{fir_filter/coefficients_r_reg[9][3]}}}
@file 1447: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[9][4]} .original_name {{fir_filter/coefficients_r_reg[9][4]}}}
@file 1448: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[9][5]} .original_name {{fir_filter/coefficients_r_reg[9][5]}}}
@file 1449: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[9][6]} .original_name {{fir_filter/coefficients_r_reg[9][6]}}}
@file 1450: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[9][7]} .original_name {{fir_filter/coefficients_r_reg[9][7]}}}
@file 1451: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[9][8]} .original_name {{fir_filter/coefficients_r_reg[9][8]}}}
@file 1452: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[9][9]} .original_name {{fir_filter/coefficients_r_reg[9][9]}}}
@file 1453: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[9][10]} .original_name {{fir_filter/coefficients_r_reg[9][10]}}}
@file 1454: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[9][11]} .original_name {{fir_filter/coefficients_r_reg[9][11]}}}
@file 1455: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[10][0]} .original_name {{fir_filter/coefficients_r_reg[10][0]}}}
@file 1456: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[10][1]} .original_name {{fir_filter/coefficients_r_reg[10][1]}}}
@file 1457: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[10][2]} .original_name {{fir_filter/coefficients_r_reg[10][2]}}}
@file 1458: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[10][3]} .original_name {{fir_filter/coefficients_r_reg[10][3]}}}
@file 1459: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[10][4]} .original_name {{fir_filter/coefficients_r_reg[10][4]}}}
@file 1460: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[10][5]} .original_name {{fir_filter/coefficients_r_reg[10][5]}}}
@file 1461: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[10][6]} .original_name {{fir_filter/coefficients_r_reg[10][6]}}}
@file 1462: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[10][7]} .original_name {{fir_filter/coefficients_r_reg[10][7]}}}
@file 1463: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[10][8]} .original_name {{fir_filter/coefficients_r_reg[10][8]}}}
@file 1464: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[10][9]} .original_name {{fir_filter/coefficients_r_reg[10][9]}}}
@file 1465: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[10][10]} .original_name {{fir_filter/coefficients_r_reg[10][10]}}}
@file 1466: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[10][11]} .original_name {{fir_filter/coefficients_r_reg[10][11]}}}
@file 1467: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[11][0]} .original_name {{fir_filter/coefficients_r_reg[11][0]}}}
@file 1468: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[11][1]} .original_name {{fir_filter/coefficients_r_reg[11][1]}}}
@file 1469: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[11][2]} .original_name {{fir_filter/coefficients_r_reg[11][2]}}}
@file 1470: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[11][3]} .original_name {{fir_filter/coefficients_r_reg[11][3]}}}
@file 1471: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[11][4]} .original_name {{fir_filter/coefficients_r_reg[11][4]}}}
@file 1472: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[11][5]} .original_name {{fir_filter/coefficients_r_reg[11][5]}}}
@file 1473: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[11][6]} .original_name {{fir_filter/coefficients_r_reg[11][6]}}}
@file 1474: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[11][7]} .original_name {{fir_filter/coefficients_r_reg[11][7]}}}
@file 1475: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[11][8]} .original_name {{fir_filter/coefficients_r_reg[11][8]}}}
@file 1476: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[11][9]} .original_name {{fir_filter/coefficients_r_reg[11][9]}}}
@file 1477: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[11][10]} .original_name {{fir_filter/coefficients_r_reg[11][10]}}}
@file 1478: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[11][11]} .original_name {{fir_filter/coefficients_r_reg[11][11]}}}
@file 1479: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[12][0]} .original_name {{fir_filter/coefficients_r_reg[12][0]}}}
@file 1480: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[12][1]} .original_name {{fir_filter/coefficients_r_reg[12][1]}}}
@file 1481: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[12][2]} .original_name {{fir_filter/coefficients_r_reg[12][2]}}}
@file 1482: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[12][3]} .original_name {{fir_filter/coefficients_r_reg[12][3]}}}
@file 1483: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[12][4]} .original_name {{fir_filter/coefficients_r_reg[12][4]}}}
@file 1484: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[12][5]} .original_name {{fir_filter/coefficients_r_reg[12][5]}}}
@file 1485: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[12][6]} .original_name {{fir_filter/coefficients_r_reg[12][6]}}}
@file 1486: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[12][7]} .original_name {{fir_filter/coefficients_r_reg[12][7]}}}
@file 1487: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[12][8]} .original_name {{fir_filter/coefficients_r_reg[12][8]}}}
@file 1488: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[12][9]} .original_name {{fir_filter/coefficients_r_reg[12][9]}}}
@file 1489: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[12][10]} .original_name {{fir_filter/coefficients_r_reg[12][10]}}}
@file 1490: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[12][11]} .original_name {{fir_filter/coefficients_r_reg[12][11]}}}
@file 1491: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[13][0]} .original_name {{fir_filter/coefficients_r_reg[13][0]}}}
@file 1492: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[13][1]} .original_name {{fir_filter/coefficients_r_reg[13][1]}}}
@file 1493: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[13][2]} .original_name {{fir_filter/coefficients_r_reg[13][2]}}}
@file 1494: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[13][3]} .original_name {{fir_filter/coefficients_r_reg[13][3]}}}
@file 1495: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[13][4]} .original_name {{fir_filter/coefficients_r_reg[13][4]}}}
@file 1496: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[13][5]} .original_name {{fir_filter/coefficients_r_reg[13][5]}}}
@file 1497: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[13][6]} .original_name {{fir_filter/coefficients_r_reg[13][6]}}}
@file 1498: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[13][7]} .original_name {{fir_filter/coefficients_r_reg[13][7]}}}
@file 1499: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[13][8]} .original_name {{fir_filter/coefficients_r_reg[13][8]}}}
@file 1500: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[13][9]} .original_name {{fir_filter/coefficients_r_reg[13][9]}}}
@file 1501: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[13][10]} .original_name {{fir_filter/coefficients_r_reg[13][10]}}}
@file 1502: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[13][11]} .original_name {{fir_filter/coefficients_r_reg[13][11]}}}
@file 1503: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[14][0]} .original_name {{fir_filter/coefficients_r_reg[14][0]}}}
@file 1504: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[14][1]} .original_name {{fir_filter/coefficients_r_reg[14][1]}}}
@file 1505: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[14][2]} .original_name {{fir_filter/coefficients_r_reg[14][2]}}}
@file 1506: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[14][3]} .original_name {{fir_filter/coefficients_r_reg[14][3]}}}
@file 1507: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[14][4]} .original_name {{fir_filter/coefficients_r_reg[14][4]}}}
@file 1508: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[14][5]} .original_name {{fir_filter/coefficients_r_reg[14][5]}}}
@file 1509: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[14][6]} .original_name {{fir_filter/coefficients_r_reg[14][6]}}}
@file 1510: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[14][7]} .original_name {{fir_filter/coefficients_r_reg[14][7]}}}
@file 1511: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[14][8]} .original_name {{fir_filter/coefficients_r_reg[14][8]}}}
@file 1512: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[14][9]} .original_name {{fir_filter/coefficients_r_reg[14][9]}}}
@file 1513: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[14][10]} .original_name {{fir_filter/coefficients_r_reg[14][10]}}}
@file 1514: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[14][11]} .original_name {{fir_filter/coefficients_r_reg[14][11]}}}
@file 1515: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[15][0]} .original_name {{fir_filter/coefficients_r_reg[15][0]}}}
@file 1516: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[15][1]} .original_name {{fir_filter/coefficients_r_reg[15][1]}}}
@file 1517: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[15][2]} .original_name {{fir_filter/coefficients_r_reg[15][2]}}}
@file 1518: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[15][3]} .original_name {{fir_filter/coefficients_r_reg[15][3]}}}
@file 1519: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[15][4]} .original_name {{fir_filter/coefficients_r_reg[15][4]}}}
@file 1520: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[15][5]} .original_name {{fir_filter/coefficients_r_reg[15][5]}}}
@file 1521: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[15][6]} .original_name {{fir_filter/coefficients_r_reg[15][6]}}}
@file 1522: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[15][7]} .original_name {{fir_filter/coefficients_r_reg[15][7]}}}
@file 1523: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[15][8]} .original_name {{fir_filter/coefficients_r_reg[15][8]}}}
@file 1524: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[15][9]} .original_name {{fir_filter/coefficients_r_reg[15][9]}}}
@file 1525: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[15][10]} .original_name {{fir_filter/coefficients_r_reg[15][10]}}}
@file 1526: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[15][11]} .original_name {{fir_filter/coefficients_r_reg[15][11]}}}
@file 1527: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[16][0]} .original_name {{fir_filter/coefficients_r_reg[16][0]}}}
@file 1528: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[16][1]} .original_name {{fir_filter/coefficients_r_reg[16][1]}}}
@file 1529: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[16][2]} .original_name {{fir_filter/coefficients_r_reg[16][2]}}}
@file 1530: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[16][3]} .original_name {{fir_filter/coefficients_r_reg[16][3]}}}
@file 1531: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[16][4]} .original_name {{fir_filter/coefficients_r_reg[16][4]}}}
@file 1532: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[16][5]} .original_name {{fir_filter/coefficients_r_reg[16][5]}}}
@file 1533: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[16][6]} .original_name {{fir_filter/coefficients_r_reg[16][6]}}}
@file 1534: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[16][7]} .original_name {{fir_filter/coefficients_r_reg[16][7]}}}
@file 1535: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[16][8]} .original_name {{fir_filter/coefficients_r_reg[16][8]}}}
@file 1536: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[16][9]} .original_name {{fir_filter/coefficients_r_reg[16][9]}}}
@file 1537: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[16][10]} .original_name {{fir_filter/coefficients_r_reg[16][10]}}}
@file 1538: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[16][11]} .original_name {{fir_filter/coefficients_r_reg[16][11]}}}
@file 1539: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[17][0]} .original_name {{fir_filter/coefficients_r_reg[17][0]}}}
@file 1540: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[17][1]} .original_name {{fir_filter/coefficients_r_reg[17][1]}}}
@file 1541: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[17][2]} .original_name {{fir_filter/coefficients_r_reg[17][2]}}}
@file 1542: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[17][3]} .original_name {{fir_filter/coefficients_r_reg[17][3]}}}
@file 1543: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[17][4]} .original_name {{fir_filter/coefficients_r_reg[17][4]}}}
@file 1544: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[17][5]} .original_name {{fir_filter/coefficients_r_reg[17][5]}}}
@file 1545: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[17][6]} .original_name {{fir_filter/coefficients_r_reg[17][6]}}}
@file 1546: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[17][7]} .original_name {{fir_filter/coefficients_r_reg[17][7]}}}
@file 1547: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[17][8]} .original_name {{fir_filter/coefficients_r_reg[17][8]}}}
@file 1548: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[17][9]} .original_name {{fir_filter/coefficients_r_reg[17][9]}}}
@file 1549: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[17][10]} .original_name {{fir_filter/coefficients_r_reg[17][10]}}}
@file 1550: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[17][11]} .original_name {{fir_filter/coefficients_r_reg[17][11]}}}
@file 1551: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[18][0]} .original_name {{fir_filter/coefficients_r_reg[18][0]}}}
@file 1552: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[18][1]} .original_name {{fir_filter/coefficients_r_reg[18][1]}}}
@file 1553: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[18][2]} .original_name {{fir_filter/coefficients_r_reg[18][2]}}}
@file 1554: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[18][3]} .original_name {{fir_filter/coefficients_r_reg[18][3]}}}
@file 1555: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[18][4]} .original_name {{fir_filter/coefficients_r_reg[18][4]}}}
@file 1556: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[18][5]} .original_name {{fir_filter/coefficients_r_reg[18][5]}}}
@file 1557: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[18][6]} .original_name {{fir_filter/coefficients_r_reg[18][6]}}}
@file 1558: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[18][7]} .original_name {{fir_filter/coefficients_r_reg[18][7]}}}
@file 1559: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[18][8]} .original_name {{fir_filter/coefficients_r_reg[18][8]}}}
@file 1560: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[18][9]} .original_name {{fir_filter/coefficients_r_reg[18][9]}}}
@file 1561: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[18][10]} .original_name {{fir_filter/coefficients_r_reg[18][10]}}}
@file 1562: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[18][11]} .original_name {{fir_filter/coefficients_r_reg[18][11]}}}
@file 1563: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[19][0]} .original_name {{fir_filter/coefficients_r_reg[19][0]}}}
@file 1564: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[19][1]} .original_name {{fir_filter/coefficients_r_reg[19][1]}}}
@file 1565: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[19][2]} .original_name {{fir_filter/coefficients_r_reg[19][2]}}}
@file 1566: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[19][3]} .original_name {{fir_filter/coefficients_r_reg[19][3]}}}
@file 1567: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[19][4]} .original_name {{fir_filter/coefficients_r_reg[19][4]}}}
@file 1568: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[19][5]} .original_name {{fir_filter/coefficients_r_reg[19][5]}}}
@file 1569: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[19][6]} .original_name {{fir_filter/coefficients_r_reg[19][6]}}}
@file 1570: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[19][7]} .original_name {{fir_filter/coefficients_r_reg[19][7]}}}
@file 1571: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[19][8]} .original_name {{fir_filter/coefficients_r_reg[19][8]}}}
@file 1572: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[19][9]} .original_name {{fir_filter/coefficients_r_reg[19][9]}}}
@file 1573: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[19][10]} .original_name {{fir_filter/coefficients_r_reg[19][10]}}}
@file 1574: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[19][11]} .original_name {{fir_filter/coefficients_r_reg[19][11]}}}
@file 1575: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[20][0]} .original_name {{fir_filter/coefficients_r_reg[20][0]}}}
@file 1576: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[20][1]} .original_name {{fir_filter/coefficients_r_reg[20][1]}}}
@file 1577: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[20][2]} .original_name {{fir_filter/coefficients_r_reg[20][2]}}}
@file 1578: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[20][3]} .original_name {{fir_filter/coefficients_r_reg[20][3]}}}
@file 1579: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[20][4]} .original_name {{fir_filter/coefficients_r_reg[20][4]}}}
@file 1580: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[20][5]} .original_name {{fir_filter/coefficients_r_reg[20][5]}}}
@file 1581: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[20][6]} .original_name {{fir_filter/coefficients_r_reg[20][6]}}}
@file 1582: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[20][7]} .original_name {{fir_filter/coefficients_r_reg[20][7]}}}
@file 1583: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[20][8]} .original_name {{fir_filter/coefficients_r_reg[20][8]}}}
@file 1584: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[20][9]} .original_name {{fir_filter/coefficients_r_reg[20][9]}}}
@file 1585: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[20][10]} .original_name {{fir_filter/coefficients_r_reg[20][10]}}}
@file 1586: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[20][11]} .original_name {{fir_filter/coefficients_r_reg[20][11]}}}
@file 1587: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[21][0]} .original_name {{fir_filter/coefficients_r_reg[21][0]}}}
@file 1588: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[21][1]} .original_name {{fir_filter/coefficients_r_reg[21][1]}}}
@file 1589: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[21][2]} .original_name {{fir_filter/coefficients_r_reg[21][2]}}}
@file 1590: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[21][3]} .original_name {{fir_filter/coefficients_r_reg[21][3]}}}
@file 1591: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[21][4]} .original_name {{fir_filter/coefficients_r_reg[21][4]}}}
@file 1592: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[21][5]} .original_name {{fir_filter/coefficients_r_reg[21][5]}}}
@file 1593: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[21][6]} .original_name {{fir_filter/coefficients_r_reg[21][6]}}}
@file 1594: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[21][7]} .original_name {{fir_filter/coefficients_r_reg[21][7]}}}
@file 1595: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[21][8]} .original_name {{fir_filter/coefficients_r_reg[21][8]}}}
@file 1596: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[21][9]} .original_name {{fir_filter/coefficients_r_reg[21][9]}}}
@file 1597: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[21][10]} .original_name {{fir_filter/coefficients_r_reg[21][10]}}}
@file 1598: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[21][11]} .original_name {{fir_filter/coefficients_r_reg[21][11]}}}
@file 1599: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[22][0]} .original_name {{fir_filter/coefficients_r_reg[22][0]}}}
@file 1600: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[22][1]} .original_name {{fir_filter/coefficients_r_reg[22][1]}}}
@file 1601: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[22][2]} .original_name {{fir_filter/coefficients_r_reg[22][2]}}}
@file 1602: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[22][3]} .original_name {{fir_filter/coefficients_r_reg[22][3]}}}
@file 1603: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[22][4]} .original_name {{fir_filter/coefficients_r_reg[22][4]}}}
@file 1604: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[22][5]} .original_name {{fir_filter/coefficients_r_reg[22][5]}}}
@file 1605: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[22][6]} .original_name {{fir_filter/coefficients_r_reg[22][6]}}}
@file 1606: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[22][7]} .original_name {{fir_filter/coefficients_r_reg[22][7]}}}
@file 1607: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[22][8]} .original_name {{fir_filter/coefficients_r_reg[22][8]}}}
@file 1608: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[22][9]} .original_name {{fir_filter/coefficients_r_reg[22][9]}}}
@file 1609: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[22][10]} .original_name {{fir_filter/coefficients_r_reg[22][10]}}}
@file 1610: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[22][11]} .original_name {{fir_filter/coefficients_r_reg[22][11]}}}
@file 1611: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[23][0]} .original_name {{fir_filter/coefficients_r_reg[23][0]}}}
@file 1612: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[23][1]} .original_name {{fir_filter/coefficients_r_reg[23][1]}}}
@file 1613: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[23][2]} .original_name {{fir_filter/coefficients_r_reg[23][2]}}}
@file 1614: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[23][3]} .original_name {{fir_filter/coefficients_r_reg[23][3]}}}
@file 1615: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[23][4]} .original_name {{fir_filter/coefficients_r_reg[23][4]}}}
@file 1616: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[23][5]} .original_name {{fir_filter/coefficients_r_reg[23][5]}}}
@file 1617: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[23][6]} .original_name {{fir_filter/coefficients_r_reg[23][6]}}}
@file 1618: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[23][7]} .original_name {{fir_filter/coefficients_r_reg[23][7]}}}
@file 1619: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[23][8]} .original_name {{fir_filter/coefficients_r_reg[23][8]}}}
@file 1620: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[23][9]} .original_name {{fir_filter/coefficients_r_reg[23][9]}}}
@file 1621: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[23][10]} .original_name {{fir_filter/coefficients_r_reg[23][10]}}}
@file 1622: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[23][11]} .original_name {{fir_filter/coefficients_r_reg[23][11]}}}
@file 1623: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[24][0]} .original_name {{fir_filter/coefficients_r_reg[24][0]}}}
@file 1624: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[24][1]} .original_name {{fir_filter/coefficients_r_reg[24][1]}}}
@file 1625: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[24][2]} .original_name {{fir_filter/coefficients_r_reg[24][2]}}}
@file 1626: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[24][3]} .original_name {{fir_filter/coefficients_r_reg[24][3]}}}
@file 1627: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[24][4]} .original_name {{fir_filter/coefficients_r_reg[24][4]}}}
@file 1628: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[24][5]} .original_name {{fir_filter/coefficients_r_reg[24][5]}}}
@file 1629: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[24][6]} .original_name {{fir_filter/coefficients_r_reg[24][6]}}}
@file 1630: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[24][7]} .original_name {{fir_filter/coefficients_r_reg[24][7]}}}
@file 1631: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[24][8]} .original_name {{fir_filter/coefficients_r_reg[24][8]}}}
@file 1632: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[24][9]} .original_name {{fir_filter/coefficients_r_reg[24][9]}}}
@file 1633: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[24][10]} .original_name {{fir_filter/coefficients_r_reg[24][10]}}}
@file 1634: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[24][11]} .original_name {{fir_filter/coefficients_r_reg[24][11]}}}
@file 1635: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[25][0]} .original_name {{fir_filter/coefficients_r_reg[25][0]}}}
@file 1636: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[25][1]} .original_name {{fir_filter/coefficients_r_reg[25][1]}}}
@file 1637: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[25][2]} .original_name {{fir_filter/coefficients_r_reg[25][2]}}}
@file 1638: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[25][3]} .original_name {{fir_filter/coefficients_r_reg[25][3]}}}
@file 1639: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[25][4]} .original_name {{fir_filter/coefficients_r_reg[25][4]}}}
@file 1640: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[25][5]} .original_name {{fir_filter/coefficients_r_reg[25][5]}}}
@file 1641: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[25][6]} .original_name {{fir_filter/coefficients_r_reg[25][6]}}}
@file 1642: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[25][7]} .original_name {{fir_filter/coefficients_r_reg[25][7]}}}
@file 1643: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[25][8]} .original_name {{fir_filter/coefficients_r_reg[25][8]}}}
@file 1644: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[25][9]} .original_name {{fir_filter/coefficients_r_reg[25][9]}}}
@file 1645: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[25][10]} .original_name {{fir_filter/coefficients_r_reg[25][10]}}}
@file 1646: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[25][11]} .original_name {{fir_filter/coefficients_r_reg[25][11]}}}
@file 1647: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[26][0]} .original_name {{fir_filter/coefficients_r_reg[26][0]}}}
@file 1648: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[26][1]} .original_name {{fir_filter/coefficients_r_reg[26][1]}}}
@file 1649: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[26][2]} .original_name {{fir_filter/coefficients_r_reg[26][2]}}}
@file 1650: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[26][3]} .original_name {{fir_filter/coefficients_r_reg[26][3]}}}
@file 1651: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[26][4]} .original_name {{fir_filter/coefficients_r_reg[26][4]}}}
@file 1652: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[26][5]} .original_name {{fir_filter/coefficients_r_reg[26][5]}}}
@file 1653: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[26][6]} .original_name {{fir_filter/coefficients_r_reg[26][6]}}}
@file 1654: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[26][7]} .original_name {{fir_filter/coefficients_r_reg[26][7]}}}
@file 1655: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[26][8]} .original_name {{fir_filter/coefficients_r_reg[26][8]}}}
@file 1656: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[26][9]} .original_name {{fir_filter/coefficients_r_reg[26][9]}}}
@file 1657: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[26][10]} .original_name {{fir_filter/coefficients_r_reg[26][10]}}}
@file 1658: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[26][11]} .original_name {{fir_filter/coefficients_r_reg[26][11]}}}
@file 1659: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[27][0]} .original_name {{fir_filter/coefficients_r_reg[27][0]}}}
@file 1660: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[27][1]} .original_name {{fir_filter/coefficients_r_reg[27][1]}}}
@file 1661: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[27][2]} .original_name {{fir_filter/coefficients_r_reg[27][2]}}}
@file 1662: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[27][3]} .original_name {{fir_filter/coefficients_r_reg[27][3]}}}
@file 1663: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[27][4]} .original_name {{fir_filter/coefficients_r_reg[27][4]}}}
@file 1664: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[27][5]} .original_name {{fir_filter/coefficients_r_reg[27][5]}}}
@file 1665: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[27][6]} .original_name {{fir_filter/coefficients_r_reg[27][6]}}}
@file 1666: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[27][7]} .original_name {{fir_filter/coefficients_r_reg[27][7]}}}
@file 1667: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[27][8]} .original_name {{fir_filter/coefficients_r_reg[27][8]}}}
@file 1668: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[27][9]} .original_name {{fir_filter/coefficients_r_reg[27][9]}}}
@file 1669: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[27][10]} .original_name {{fir_filter/coefficients_r_reg[27][10]}}}
@file 1670: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[27][11]} .original_name {{fir_filter/coefficients_r_reg[27][11]}}}
@file 1671: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[28][0]} .original_name {{fir_filter/coefficients_r_reg[28][0]}}}
@file 1672: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[28][1]} .original_name {{fir_filter/coefficients_r_reg[28][1]}}}
@file 1673: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[28][2]} .original_name {{fir_filter/coefficients_r_reg[28][2]}}}
@file 1674: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[28][3]} .original_name {{fir_filter/coefficients_r_reg[28][3]}}}
@file 1675: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[28][4]} .original_name {{fir_filter/coefficients_r_reg[28][4]}}}
@file 1676: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[28][5]} .original_name {{fir_filter/coefficients_r_reg[28][5]}}}
@file 1677: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[28][6]} .original_name {{fir_filter/coefficients_r_reg[28][6]}}}
@file 1678: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[28][7]} .original_name {{fir_filter/coefficients_r_reg[28][7]}}}
@file 1679: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[28][8]} .original_name {{fir_filter/coefficients_r_reg[28][8]}}}
@file 1680: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[28][9]} .original_name {{fir_filter/coefficients_r_reg[28][9]}}}
@file 1681: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[28][10]} .original_name {{fir_filter/coefficients_r_reg[28][10]}}}
@file 1682: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[28][11]} .original_name {{fir_filter/coefficients_r_reg[28][11]}}}
@file 1683: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[29][0]} .original_name {{fir_filter/coefficients_r_reg[29][0]}}}
@file 1684: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[29][1]} .original_name {{fir_filter/coefficients_r_reg[29][1]}}}
@file 1685: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[29][2]} .original_name {{fir_filter/coefficients_r_reg[29][2]}}}
@file 1686: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[29][3]} .original_name {{fir_filter/coefficients_r_reg[29][3]}}}
@file 1687: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[29][4]} .original_name {{fir_filter/coefficients_r_reg[29][4]}}}
@file 1688: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[29][5]} .original_name {{fir_filter/coefficients_r_reg[29][5]}}}
@file 1689: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[29][6]} .original_name {{fir_filter/coefficients_r_reg[29][6]}}}
@file 1690: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[29][7]} .original_name {{fir_filter/coefficients_r_reg[29][7]}}}
@file 1691: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[29][8]} .original_name {{fir_filter/coefficients_r_reg[29][8]}}}
@file 1692: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[29][9]} .original_name {{fir_filter/coefficients_r_reg[29][9]}}}
@file 1693: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[29][10]} .original_name {{fir_filter/coefficients_r_reg[29][10]}}}
@file 1694: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[29][11]} .original_name {{fir_filter/coefficients_r_reg[29][11]}}}
@file 1695: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[30][0]} .original_name {{fir_filter/coefficients_r_reg[30][0]}}}
@file 1696: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[30][1]} .original_name {{fir_filter/coefficients_r_reg[30][1]}}}
@file 1697: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[30][2]} .original_name {{fir_filter/coefficients_r_reg[30][2]}}}
@file 1698: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[30][3]} .original_name {{fir_filter/coefficients_r_reg[30][3]}}}
@file 1699: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[30][4]} .original_name {{fir_filter/coefficients_r_reg[30][4]}}}
@file 1700: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[30][5]} .original_name {{fir_filter/coefficients_r_reg[30][5]}}}
@file 1701: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[30][6]} .original_name {{fir_filter/coefficients_r_reg[30][6]}}}
@file 1702: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[30][7]} .original_name {{fir_filter/coefficients_r_reg[30][7]}}}
@file 1703: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[30][8]} .original_name {{fir_filter/coefficients_r_reg[30][8]}}}
@file 1704: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[30][9]} .original_name {{fir_filter/coefficients_r_reg[30][9]}}}
@file 1705: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[30][10]} .original_name {{fir_filter/coefficients_r_reg[30][10]}}}
@file 1706: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[30][11]} .original_name {{fir_filter/coefficients_r_reg[30][11]}}}
@file 1707: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[31][0]} .original_name {{fir_filter/coefficients_r_reg[31][0]}}}
@file 1708: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[31][1]} .original_name {{fir_filter/coefficients_r_reg[31][1]}}}
@file 1709: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[31][2]} .original_name {{fir_filter/coefficients_r_reg[31][2]}}}
@file 1710: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[31][3]} .original_name {{fir_filter/coefficients_r_reg[31][3]}}}
@file 1711: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[31][4]} .original_name {{fir_filter/coefficients_r_reg[31][4]}}}
@file 1712: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[31][5]} .original_name {{fir_filter/coefficients_r_reg[31][5]}}}
@file 1713: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[31][6]} .original_name {{fir_filter/coefficients_r_reg[31][6]}}}
@file 1714: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[31][7]} .original_name {{fir_filter/coefficients_r_reg[31][7]}}}
@file 1715: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[31][8]} .original_name {{fir_filter/coefficients_r_reg[31][8]}}}
@file 1716: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[31][9]} .original_name {{fir_filter/coefficients_r_reg[31][9]}}}
@file 1717: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[31][10]} .original_name {{fir_filter/coefficients_r_reg[31][10]}}}
@file 1718: catch {set_db {inst:filter_top/fir_filter/coefficients_r_reg[31][11]} .original_name {{fir_filter/coefficients_r_reg[31][11]}}}
@file 1719: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[0][1]} .original_name {{fir_filter/sum_r_reg[0][1]}}}
@file 1720: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[0][2]} .original_name {{fir_filter/sum_r_reg[0][2]}}}
@file 1721: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[0][3]} .original_name {{fir_filter/sum_r_reg[0][3]}}}
@file 1722: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[0][4]} .original_name {{fir_filter/sum_r_reg[0][4]}}}
@file 1723: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[0][5]} .original_name {{fir_filter/sum_r_reg[0][5]}}}
@file 1724: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[0][6]} .original_name {{fir_filter/sum_r_reg[0][6]}}}
@file 1725: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[0][7]} .original_name {{fir_filter/sum_r_reg[0][7]}}}
@file 1726: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[0][8]} .original_name {{fir_filter/sum_r_reg[0][8]}}}
@file 1727: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[0][9]} .original_name {{fir_filter/sum_r_reg[0][9]}}}
@file 1728: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[0][10]} .original_name {{fir_filter/sum_r_reg[0][10]}}}
@file 1729: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[0][11]} .original_name {{fir_filter/sum_r_reg[0][11]}}}
@file 1730: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[0][12]} .original_name {{fir_filter/sum_r_reg[0][12]}}}
@file 1731: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[0][13]} .original_name {{fir_filter/sum_r_reg[0][13]}}}
@file 1732: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[0][14]} .original_name {{fir_filter/sum_r_reg[0][14]}}}
@file 1733: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[0][15]} .original_name {{fir_filter/sum_r_reg[0][15]}}}
@file 1734: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[0][16]} .original_name {{fir_filter/sum_r_reg[0][16]}}}
@file 1735: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[0][17]} .original_name {{fir_filter/sum_r_reg[0][17]}}}
@file 1736: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[0][18]} .original_name {{fir_filter/sum_r_reg[0][18]}}}
@file 1737: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[0][19]} .original_name {{fir_filter/sum_r_reg[0][19]}}}
@file 1738: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[0][20]} .original_name {{fir_filter/sum_r_reg[0][20]}}}
@file 1739: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[0][21]} .original_name {{fir_filter/sum_r_reg[0][21]}}}
@file 1740: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[0][22]} .original_name {{fir_filter/sum_r_reg[0][22]}}}
@file 1741: catch {set_db {inst:filter_top/fir_filter/din_r_reg[0]} .original_name {{fir_filter/din_r_reg[0]}}}
@file 1742: catch {set_db {inst:filter_top/fir_filter/din_r_reg[1]} .original_name {{fir_filter/din_r_reg[1]}}}
@file 1743: catch {set_db {inst:filter_top/fir_filter/din_r_reg[2]} .original_name {{fir_filter/din_r_reg[2]}}}
@file 1744: catch {set_db {inst:filter_top/fir_filter/din_r_reg[3]} .original_name {{fir_filter/din_r_reg[3]}}}
@file 1745: catch {set_db {inst:filter_top/fir_filter/din_r_reg[4]} .original_name {{fir_filter/din_r_reg[4]}}}
@file 1746: catch {set_db {inst:filter_top/fir_filter/din_r_reg[5]} .original_name {{fir_filter/din_r_reg[5]}}}
@file 1747: catch {set_db {inst:filter_top/fir_filter/din_r_reg[6]} .original_name {{fir_filter/din_r_reg[6]}}}
@file 1748: catch {set_db {inst:filter_top/fir_filter/din_r_reg[7]} .original_name {{fir_filter/din_r_reg[7]}}}
@file 1749: catch {set_db {inst:filter_top/fir_filter/din_r_reg[8]} .original_name {{fir_filter/din_r_reg[8]}}}
@file 1750: catch {set_db {inst:filter_top/fir_filter/din_r_reg[9]} .original_name {{fir_filter/din_r_reg[9]}}}
@file 1751: catch {set_db {inst:filter_top/fir_filter/din_r_reg[10]} .original_name {{fir_filter/din_r_reg[10]}}}
@file 1752: catch {set_db {inst:filter_top/fir_filter/din_r_reg[11]} .original_name {{fir_filter/din_r_reg[11]}}}
@file 1753: catch {set_db {inst:filter_top/fir_filter/read_value_reg[0]} .original_name {{fir_filter/read_value_reg[0]}}}
@file 1754: catch {set_db {inst:filter_top/fir_filter/read_value_reg[1]} .original_name {{fir_filter/read_value_reg[1]}}}
@file 1755: catch {set_db {inst:filter_top/fir_filter/read_value_reg[2]} .original_name {{fir_filter/read_value_reg[2]}}}
@file 1756: catch {set_db {inst:filter_top/fir_filter/read_value_reg[3]} .original_name {{fir_filter/read_value_reg[3]}}}
@file 1757: catch {set_db {inst:filter_top/fir_filter/read_value_reg[4]} .original_name {{fir_filter/read_value_reg[4]}}}
@file 1758: catch {set_db {inst:filter_top/fir_filter/read_value_reg[5]} .original_name {{fir_filter/read_value_reg[5]}}}
@file 1759: catch {set_db {inst:filter_top/fir_filter/read_value_reg[6]} .original_name {{fir_filter/read_value_reg[6]}}}
@file 1760: catch {set_db {inst:filter_top/fir_filter/read_value_reg[7]} .original_name {{fir_filter/read_value_reg[7]}}}
@file 1761: catch {set_db {inst:filter_top/fir_filter/read_value_reg[8]} .original_name {{fir_filter/read_value_reg[8]}}}
@file 1762: catch {set_db {inst:filter_top/fir_filter/read_value_reg[9]} .original_name {{fir_filter/read_value_reg[9]}}}
@file 1763: catch {set_db {inst:filter_top/fir_filter/read_value_reg[10]} .original_name {{fir_filter/read_value_reg[10]}}}
@file 1764: catch {set_db {inst:filter_top/fir_filter/read_value_reg[11]} .original_name {{fir_filter/read_value_reg[11]}}}
@file 1765: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[0][0]} .original_name {{fir_filter/sum_r_reg[0][0]}}}
@file 1766: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[1][0]} .original_name {{fir_filter/sum_r_reg[1][0]}}}
@file 1767: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[1][1]} .original_name {{fir_filter/sum_r_reg[1][1]}}}
@file 1768: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[1][2]} .original_name {{fir_filter/sum_r_reg[1][2]}}}
@file 1769: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[1][3]} .original_name {{fir_filter/sum_r_reg[1][3]}}}
@file 1770: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[1][4]} .original_name {{fir_filter/sum_r_reg[1][4]}}}
@file 1771: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[1][5]} .original_name {{fir_filter/sum_r_reg[1][5]}}}
@file 1772: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[1][6]} .original_name {{fir_filter/sum_r_reg[1][6]}}}
@file 1773: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[1][7]} .original_name {{fir_filter/sum_r_reg[1][7]}}}
@file 1774: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[1][8]} .original_name {{fir_filter/sum_r_reg[1][8]}}}
@file 1775: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[1][9]} .original_name {{fir_filter/sum_r_reg[1][9]}}}
@file 1776: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[1][10]} .original_name {{fir_filter/sum_r_reg[1][10]}}}
@file 1777: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[1][11]} .original_name {{fir_filter/sum_r_reg[1][11]}}}
@file 1778: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[1][12]} .original_name {{fir_filter/sum_r_reg[1][12]}}}
@file 1779: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[1][13]} .original_name {{fir_filter/sum_r_reg[1][13]}}}
@file 1780: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[1][14]} .original_name {{fir_filter/sum_r_reg[1][14]}}}
@file 1781: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[1][15]} .original_name {{fir_filter/sum_r_reg[1][15]}}}
@file 1782: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[1][16]} .original_name {{fir_filter/sum_r_reg[1][16]}}}
@file 1783: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[1][17]} .original_name {{fir_filter/sum_r_reg[1][17]}}}
@file 1784: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[1][18]} .original_name {{fir_filter/sum_r_reg[1][18]}}}
@file 1785: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[1][19]} .original_name {{fir_filter/sum_r_reg[1][19]}}}
@file 1786: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[1][20]} .original_name {{fir_filter/sum_r_reg[1][20]}}}
@file 1787: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[1][21]} .original_name {{fir_filter/sum_r_reg[1][21]}}}
@file 1788: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[1][22]} .original_name {{fir_filter/sum_r_reg[1][22]}}}
@file 1789: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[2][0]} .original_name {{fir_filter/sum_r_reg[2][0]}}}
@file 1790: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[2][1]} .original_name {{fir_filter/sum_r_reg[2][1]}}}
@file 1791: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[2][2]} .original_name {{fir_filter/sum_r_reg[2][2]}}}
@file 1792: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[2][3]} .original_name {{fir_filter/sum_r_reg[2][3]}}}
@file 1793: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[2][4]} .original_name {{fir_filter/sum_r_reg[2][4]}}}
@file 1794: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[2][5]} .original_name {{fir_filter/sum_r_reg[2][5]}}}
@file 1795: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[2][6]} .original_name {{fir_filter/sum_r_reg[2][6]}}}
@file 1796: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[2][7]} .original_name {{fir_filter/sum_r_reg[2][7]}}}
@file 1797: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[2][8]} .original_name {{fir_filter/sum_r_reg[2][8]}}}
@file 1798: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[2][9]} .original_name {{fir_filter/sum_r_reg[2][9]}}}
@file 1799: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[2][10]} .original_name {{fir_filter/sum_r_reg[2][10]}}}
@file 1800: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[2][11]} .original_name {{fir_filter/sum_r_reg[2][11]}}}
@file 1801: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[2][12]} .original_name {{fir_filter/sum_r_reg[2][12]}}}
@file 1802: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[2][13]} .original_name {{fir_filter/sum_r_reg[2][13]}}}
@file 1803: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[2][14]} .original_name {{fir_filter/sum_r_reg[2][14]}}}
@file 1804: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[2][15]} .original_name {{fir_filter/sum_r_reg[2][15]}}}
@file 1805: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[2][16]} .original_name {{fir_filter/sum_r_reg[2][16]}}}
@file 1806: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[2][17]} .original_name {{fir_filter/sum_r_reg[2][17]}}}
@file 1807: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[2][18]} .original_name {{fir_filter/sum_r_reg[2][18]}}}
@file 1808: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[2][19]} .original_name {{fir_filter/sum_r_reg[2][19]}}}
@file 1809: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[2][20]} .original_name {{fir_filter/sum_r_reg[2][20]}}}
@file 1810: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[2][21]} .original_name {{fir_filter/sum_r_reg[2][21]}}}
@file 1811: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[2][22]} .original_name {{fir_filter/sum_r_reg[2][22]}}}
@file 1812: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[3][0]} .original_name {{fir_filter/sum_r_reg[3][0]}}}
@file 1813: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[3][1]} .original_name {{fir_filter/sum_r_reg[3][1]}}}
@file 1814: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[3][2]} .original_name {{fir_filter/sum_r_reg[3][2]}}}
@file 1815: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[3][3]} .original_name {{fir_filter/sum_r_reg[3][3]}}}
@file 1816: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[3][4]} .original_name {{fir_filter/sum_r_reg[3][4]}}}
@file 1817: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[3][5]} .original_name {{fir_filter/sum_r_reg[3][5]}}}
@file 1818: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[3][6]} .original_name {{fir_filter/sum_r_reg[3][6]}}}
@file 1819: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[3][7]} .original_name {{fir_filter/sum_r_reg[3][7]}}}
@file 1820: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[3][8]} .original_name {{fir_filter/sum_r_reg[3][8]}}}
@file 1821: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[3][9]} .original_name {{fir_filter/sum_r_reg[3][9]}}}
@file 1822: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[3][10]} .original_name {{fir_filter/sum_r_reg[3][10]}}}
@file 1823: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[3][11]} .original_name {{fir_filter/sum_r_reg[3][11]}}}
@file 1824: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[3][12]} .original_name {{fir_filter/sum_r_reg[3][12]}}}
@file 1825: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[3][13]} .original_name {{fir_filter/sum_r_reg[3][13]}}}
@file 1826: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[3][14]} .original_name {{fir_filter/sum_r_reg[3][14]}}}
@file 1827: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[3][15]} .original_name {{fir_filter/sum_r_reg[3][15]}}}
@file 1828: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[3][16]} .original_name {{fir_filter/sum_r_reg[3][16]}}}
@file 1829: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[3][17]} .original_name {{fir_filter/sum_r_reg[3][17]}}}
@file 1830: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[3][18]} .original_name {{fir_filter/sum_r_reg[3][18]}}}
@file 1831: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[3][19]} .original_name {{fir_filter/sum_r_reg[3][19]}}}
@file 1832: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[3][20]} .original_name {{fir_filter/sum_r_reg[3][20]}}}
@file 1833: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[3][21]} .original_name {{fir_filter/sum_r_reg[3][21]}}}
@file 1834: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[3][22]} .original_name {{fir_filter/sum_r_reg[3][22]}}}
@file 1835: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[4][0]} .original_name {{fir_filter/sum_r_reg[4][0]}}}
@file 1836: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[4][1]} .original_name {{fir_filter/sum_r_reg[4][1]}}}
@file 1837: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[4][2]} .original_name {{fir_filter/sum_r_reg[4][2]}}}
@file 1838: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[4][3]} .original_name {{fir_filter/sum_r_reg[4][3]}}}
@file 1839: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[4][4]} .original_name {{fir_filter/sum_r_reg[4][4]}}}
@file 1840: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[4][5]} .original_name {{fir_filter/sum_r_reg[4][5]}}}
@file 1841: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[4][6]} .original_name {{fir_filter/sum_r_reg[4][6]}}}
@file 1842: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[4][7]} .original_name {{fir_filter/sum_r_reg[4][7]}}}
@file 1843: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[4][8]} .original_name {{fir_filter/sum_r_reg[4][8]}}}
@file 1844: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[4][9]} .original_name {{fir_filter/sum_r_reg[4][9]}}}
@file 1845: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[4][10]} .original_name {{fir_filter/sum_r_reg[4][10]}}}
@file 1846: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[4][11]} .original_name {{fir_filter/sum_r_reg[4][11]}}}
@file 1847: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[4][12]} .original_name {{fir_filter/sum_r_reg[4][12]}}}
@file 1848: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[4][13]} .original_name {{fir_filter/sum_r_reg[4][13]}}}
@file 1849: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[4][14]} .original_name {{fir_filter/sum_r_reg[4][14]}}}
@file 1850: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[4][15]} .original_name {{fir_filter/sum_r_reg[4][15]}}}
@file 1851: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[4][16]} .original_name {{fir_filter/sum_r_reg[4][16]}}}
@file 1852: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[4][17]} .original_name {{fir_filter/sum_r_reg[4][17]}}}
@file 1853: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[4][18]} .original_name {{fir_filter/sum_r_reg[4][18]}}}
@file 1854: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[4][19]} .original_name {{fir_filter/sum_r_reg[4][19]}}}
@file 1855: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[4][20]} .original_name {{fir_filter/sum_r_reg[4][20]}}}
@file 1856: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[4][21]} .original_name {{fir_filter/sum_r_reg[4][21]}}}
@file 1857: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[4][22]} .original_name {{fir_filter/sum_r_reg[4][22]}}}
@file 1858: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[5][0]} .original_name {{fir_filter/sum_r_reg[5][0]}}}
@file 1859: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[5][1]} .original_name {{fir_filter/sum_r_reg[5][1]}}}
@file 1860: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[5][2]} .original_name {{fir_filter/sum_r_reg[5][2]}}}
@file 1861: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[5][3]} .original_name {{fir_filter/sum_r_reg[5][3]}}}
@file 1862: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[5][4]} .original_name {{fir_filter/sum_r_reg[5][4]}}}
@file 1863: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[5][5]} .original_name {{fir_filter/sum_r_reg[5][5]}}}
@file 1864: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[5][6]} .original_name {{fir_filter/sum_r_reg[5][6]}}}
@file 1865: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[5][7]} .original_name {{fir_filter/sum_r_reg[5][7]}}}
@file 1866: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[5][8]} .original_name {{fir_filter/sum_r_reg[5][8]}}}
@file 1867: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[5][9]} .original_name {{fir_filter/sum_r_reg[5][9]}}}
@file 1868: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[5][10]} .original_name {{fir_filter/sum_r_reg[5][10]}}}
@file 1869: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[5][11]} .original_name {{fir_filter/sum_r_reg[5][11]}}}
@file 1870: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[5][12]} .original_name {{fir_filter/sum_r_reg[5][12]}}}
@file 1871: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[5][13]} .original_name {{fir_filter/sum_r_reg[5][13]}}}
@file 1872: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[5][14]} .original_name {{fir_filter/sum_r_reg[5][14]}}}
@file 1873: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[5][15]} .original_name {{fir_filter/sum_r_reg[5][15]}}}
@file 1874: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[5][16]} .original_name {{fir_filter/sum_r_reg[5][16]}}}
@file 1875: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[5][17]} .original_name {{fir_filter/sum_r_reg[5][17]}}}
@file 1876: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[5][18]} .original_name {{fir_filter/sum_r_reg[5][18]}}}
@file 1877: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[5][19]} .original_name {{fir_filter/sum_r_reg[5][19]}}}
@file 1878: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[5][20]} .original_name {{fir_filter/sum_r_reg[5][20]}}}
@file 1879: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[5][21]} .original_name {{fir_filter/sum_r_reg[5][21]}}}
@file 1880: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[5][22]} .original_name {{fir_filter/sum_r_reg[5][22]}}}
@file 1881: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[6][0]} .original_name {{fir_filter/sum_r_reg[6][0]}}}
@file 1882: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[6][1]} .original_name {{fir_filter/sum_r_reg[6][1]}}}
@file 1883: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[6][2]} .original_name {{fir_filter/sum_r_reg[6][2]}}}
@file 1884: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[6][3]} .original_name {{fir_filter/sum_r_reg[6][3]}}}
@file 1885: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[6][4]} .original_name {{fir_filter/sum_r_reg[6][4]}}}
@file 1886: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[6][5]} .original_name {{fir_filter/sum_r_reg[6][5]}}}
@file 1887: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[6][6]} .original_name {{fir_filter/sum_r_reg[6][6]}}}
@file 1888: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[6][7]} .original_name {{fir_filter/sum_r_reg[6][7]}}}
@file 1889: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[6][8]} .original_name {{fir_filter/sum_r_reg[6][8]}}}
@file 1890: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[6][9]} .original_name {{fir_filter/sum_r_reg[6][9]}}}
@file 1891: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[6][10]} .original_name {{fir_filter/sum_r_reg[6][10]}}}
@file 1892: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[6][11]} .original_name {{fir_filter/sum_r_reg[6][11]}}}
@file 1893: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[6][12]} .original_name {{fir_filter/sum_r_reg[6][12]}}}
@file 1894: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[6][13]} .original_name {{fir_filter/sum_r_reg[6][13]}}}
@file 1895: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[6][14]} .original_name {{fir_filter/sum_r_reg[6][14]}}}
@file 1896: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[6][15]} .original_name {{fir_filter/sum_r_reg[6][15]}}}
@file 1897: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[6][16]} .original_name {{fir_filter/sum_r_reg[6][16]}}}
@file 1898: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[6][17]} .original_name {{fir_filter/sum_r_reg[6][17]}}}
@file 1899: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[6][18]} .original_name {{fir_filter/sum_r_reg[6][18]}}}
@file 1900: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[6][19]} .original_name {{fir_filter/sum_r_reg[6][19]}}}
@file 1901: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[6][20]} .original_name {{fir_filter/sum_r_reg[6][20]}}}
@file 1902: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[6][21]} .original_name {{fir_filter/sum_r_reg[6][21]}}}
@file 1903: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[6][22]} .original_name {{fir_filter/sum_r_reg[6][22]}}}
@file 1904: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[7][0]} .original_name {{fir_filter/sum_r_reg[7][0]}}}
@file 1905: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[7][1]} .original_name {{fir_filter/sum_r_reg[7][1]}}}
@file 1906: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[7][2]} .original_name {{fir_filter/sum_r_reg[7][2]}}}
@file 1907: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[7][3]} .original_name {{fir_filter/sum_r_reg[7][3]}}}
@file 1908: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[7][4]} .original_name {{fir_filter/sum_r_reg[7][4]}}}
@file 1909: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[7][5]} .original_name {{fir_filter/sum_r_reg[7][5]}}}
@file 1910: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[7][6]} .original_name {{fir_filter/sum_r_reg[7][6]}}}
@file 1911: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[7][7]} .original_name {{fir_filter/sum_r_reg[7][7]}}}
@file 1912: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[7][8]} .original_name {{fir_filter/sum_r_reg[7][8]}}}
@file 1913: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[7][9]} .original_name {{fir_filter/sum_r_reg[7][9]}}}
@file 1914: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[7][10]} .original_name {{fir_filter/sum_r_reg[7][10]}}}
@file 1915: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[7][11]} .original_name {{fir_filter/sum_r_reg[7][11]}}}
@file 1916: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[7][12]} .original_name {{fir_filter/sum_r_reg[7][12]}}}
@file 1917: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[7][13]} .original_name {{fir_filter/sum_r_reg[7][13]}}}
@file 1918: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[7][14]} .original_name {{fir_filter/sum_r_reg[7][14]}}}
@file 1919: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[7][15]} .original_name {{fir_filter/sum_r_reg[7][15]}}}
@file 1920: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[7][16]} .original_name {{fir_filter/sum_r_reg[7][16]}}}
@file 1921: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[7][17]} .original_name {{fir_filter/sum_r_reg[7][17]}}}
@file 1922: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[7][18]} .original_name {{fir_filter/sum_r_reg[7][18]}}}
@file 1923: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[7][19]} .original_name {{fir_filter/sum_r_reg[7][19]}}}
@file 1924: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[7][20]} .original_name {{fir_filter/sum_r_reg[7][20]}}}
@file 1925: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[7][21]} .original_name {{fir_filter/sum_r_reg[7][21]}}}
@file 1926: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[7][22]} .original_name {{fir_filter/sum_r_reg[7][22]}}}
@file 1927: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[8][0]} .original_name {{fir_filter/sum_r_reg[8][0]}}}
@file 1928: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[8][1]} .original_name {{fir_filter/sum_r_reg[8][1]}}}
@file 1929: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[8][2]} .original_name {{fir_filter/sum_r_reg[8][2]}}}
@file 1930: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[8][3]} .original_name {{fir_filter/sum_r_reg[8][3]}}}
@file 1931: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[8][4]} .original_name {{fir_filter/sum_r_reg[8][4]}}}
@file 1932: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[8][5]} .original_name {{fir_filter/sum_r_reg[8][5]}}}
@file 1933: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[8][6]} .original_name {{fir_filter/sum_r_reg[8][6]}}}
@file 1934: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[8][7]} .original_name {{fir_filter/sum_r_reg[8][7]}}}
@file 1935: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[8][8]} .original_name {{fir_filter/sum_r_reg[8][8]}}}
@file 1936: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[8][9]} .original_name {{fir_filter/sum_r_reg[8][9]}}}
@file 1937: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[8][10]} .original_name {{fir_filter/sum_r_reg[8][10]}}}
@file 1938: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[8][11]} .original_name {{fir_filter/sum_r_reg[8][11]}}}
@file 1939: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[8][12]} .original_name {{fir_filter/sum_r_reg[8][12]}}}
@file 1940: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[8][13]} .original_name {{fir_filter/sum_r_reg[8][13]}}}
@file 1941: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[8][14]} .original_name {{fir_filter/sum_r_reg[8][14]}}}
@file 1942: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[8][15]} .original_name {{fir_filter/sum_r_reg[8][15]}}}
@file 1943: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[8][16]} .original_name {{fir_filter/sum_r_reg[8][16]}}}
@file 1944: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[8][17]} .original_name {{fir_filter/sum_r_reg[8][17]}}}
@file 1945: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[8][18]} .original_name {{fir_filter/sum_r_reg[8][18]}}}
@file 1946: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[8][19]} .original_name {{fir_filter/sum_r_reg[8][19]}}}
@file 1947: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[8][20]} .original_name {{fir_filter/sum_r_reg[8][20]}}}
@file 1948: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[8][21]} .original_name {{fir_filter/sum_r_reg[8][21]}}}
@file 1949: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[8][22]} .original_name {{fir_filter/sum_r_reg[8][22]}}}
@file 1950: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[9][0]} .original_name {{fir_filter/sum_r_reg[9][0]}}}
@file 1951: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[9][1]} .original_name {{fir_filter/sum_r_reg[9][1]}}}
@file 1952: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[9][2]} .original_name {{fir_filter/sum_r_reg[9][2]}}}
@file 1953: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[9][3]} .original_name {{fir_filter/sum_r_reg[9][3]}}}
@file 1954: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[9][4]} .original_name {{fir_filter/sum_r_reg[9][4]}}}
@file 1955: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[9][5]} .original_name {{fir_filter/sum_r_reg[9][5]}}}
@file 1956: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[9][6]} .original_name {{fir_filter/sum_r_reg[9][6]}}}
@file 1957: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[9][7]} .original_name {{fir_filter/sum_r_reg[9][7]}}}
@file 1958: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[9][8]} .original_name {{fir_filter/sum_r_reg[9][8]}}}
@file 1959: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[9][9]} .original_name {{fir_filter/sum_r_reg[9][9]}}}
@file 1960: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[9][10]} .original_name {{fir_filter/sum_r_reg[9][10]}}}
@file 1961: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[9][11]} .original_name {{fir_filter/sum_r_reg[9][11]}}}
@file 1962: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[9][12]} .original_name {{fir_filter/sum_r_reg[9][12]}}}
@file 1963: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[9][13]} .original_name {{fir_filter/sum_r_reg[9][13]}}}
@file 1964: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[9][14]} .original_name {{fir_filter/sum_r_reg[9][14]}}}
@file 1965: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[9][15]} .original_name {{fir_filter/sum_r_reg[9][15]}}}
@file 1966: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[9][16]} .original_name {{fir_filter/sum_r_reg[9][16]}}}
@file 1967: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[9][17]} .original_name {{fir_filter/sum_r_reg[9][17]}}}
@file 1968: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[9][18]} .original_name {{fir_filter/sum_r_reg[9][18]}}}
@file 1969: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[9][19]} .original_name {{fir_filter/sum_r_reg[9][19]}}}
@file 1970: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[9][20]} .original_name {{fir_filter/sum_r_reg[9][20]}}}
@file 1971: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[9][21]} .original_name {{fir_filter/sum_r_reg[9][21]}}}
@file 1972: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[9][22]} .original_name {{fir_filter/sum_r_reg[9][22]}}}
@file 1973: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[10][0]} .original_name {{fir_filter/sum_r_reg[10][0]}}}
@file 1974: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[10][1]} .original_name {{fir_filter/sum_r_reg[10][1]}}}
@file 1975: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[10][2]} .original_name {{fir_filter/sum_r_reg[10][2]}}}
@file 1976: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[10][3]} .original_name {{fir_filter/sum_r_reg[10][3]}}}
@file 1977: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[10][4]} .original_name {{fir_filter/sum_r_reg[10][4]}}}
@file 1978: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[10][5]} .original_name {{fir_filter/sum_r_reg[10][5]}}}
@file 1979: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[10][6]} .original_name {{fir_filter/sum_r_reg[10][6]}}}
@file 1980: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[10][7]} .original_name {{fir_filter/sum_r_reg[10][7]}}}
@file 1981: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[10][8]} .original_name {{fir_filter/sum_r_reg[10][8]}}}
@file 1982: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[10][9]} .original_name {{fir_filter/sum_r_reg[10][9]}}}
@file 1983: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[10][10]} .original_name {{fir_filter/sum_r_reg[10][10]}}}
@file 1984: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[10][11]} .original_name {{fir_filter/sum_r_reg[10][11]}}}
@file 1985: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[10][12]} .original_name {{fir_filter/sum_r_reg[10][12]}}}
@file 1986: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[10][13]} .original_name {{fir_filter/sum_r_reg[10][13]}}}
@file 1987: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[10][14]} .original_name {{fir_filter/sum_r_reg[10][14]}}}
@file 1988: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[10][15]} .original_name {{fir_filter/sum_r_reg[10][15]}}}
@file 1989: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[10][16]} .original_name {{fir_filter/sum_r_reg[10][16]}}}
@file 1990: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[10][17]} .original_name {{fir_filter/sum_r_reg[10][17]}}}
@file 1991: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[10][18]} .original_name {{fir_filter/sum_r_reg[10][18]}}}
@file 1992: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[10][19]} .original_name {{fir_filter/sum_r_reg[10][19]}}}
@file 1993: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[10][20]} .original_name {{fir_filter/sum_r_reg[10][20]}}}
@file 1994: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[10][21]} .original_name {{fir_filter/sum_r_reg[10][21]}}}
@file 1995: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[10][22]} .original_name {{fir_filter/sum_r_reg[10][22]}}}
@file 1996: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[11][0]} .original_name {{fir_filter/sum_r_reg[11][0]}}}
@file 1997: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[11][1]} .original_name {{fir_filter/sum_r_reg[11][1]}}}
@file 1998: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[11][2]} .original_name {{fir_filter/sum_r_reg[11][2]}}}
@file 1999: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[11][3]} .original_name {{fir_filter/sum_r_reg[11][3]}}}
@file 2000: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[11][4]} .original_name {{fir_filter/sum_r_reg[11][4]}}}
@file 2001: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[11][5]} .original_name {{fir_filter/sum_r_reg[11][5]}}}
@file 2002: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[11][6]} .original_name {{fir_filter/sum_r_reg[11][6]}}}
@file 2003: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[11][7]} .original_name {{fir_filter/sum_r_reg[11][7]}}}
@file 2004: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[11][8]} .original_name {{fir_filter/sum_r_reg[11][8]}}}
@file 2005: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[11][9]} .original_name {{fir_filter/sum_r_reg[11][9]}}}
@file 2006: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[11][10]} .original_name {{fir_filter/sum_r_reg[11][10]}}}
@file 2007: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[11][11]} .original_name {{fir_filter/sum_r_reg[11][11]}}}
@file 2008: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[11][12]} .original_name {{fir_filter/sum_r_reg[11][12]}}}
@file 2009: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[11][13]} .original_name {{fir_filter/sum_r_reg[11][13]}}}
@file 2010: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[11][14]} .original_name {{fir_filter/sum_r_reg[11][14]}}}
@file 2011: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[11][15]} .original_name {{fir_filter/sum_r_reg[11][15]}}}
@file 2012: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[11][16]} .original_name {{fir_filter/sum_r_reg[11][16]}}}
@file 2013: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[11][17]} .original_name {{fir_filter/sum_r_reg[11][17]}}}
@file 2014: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[11][18]} .original_name {{fir_filter/sum_r_reg[11][18]}}}
@file 2015: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[11][19]} .original_name {{fir_filter/sum_r_reg[11][19]}}}
@file 2016: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[11][20]} .original_name {{fir_filter/sum_r_reg[11][20]}}}
@file 2017: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[11][21]} .original_name {{fir_filter/sum_r_reg[11][21]}}}
@file 2018: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[11][22]} .original_name {{fir_filter/sum_r_reg[11][22]}}}
@file 2019: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[12][0]} .original_name {{fir_filter/sum_r_reg[12][0]}}}
@file 2020: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[12][1]} .original_name {{fir_filter/sum_r_reg[12][1]}}}
@file 2021: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[12][2]} .original_name {{fir_filter/sum_r_reg[12][2]}}}
@file 2022: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[12][3]} .original_name {{fir_filter/sum_r_reg[12][3]}}}
@file 2023: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[12][4]} .original_name {{fir_filter/sum_r_reg[12][4]}}}
@file 2024: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[12][5]} .original_name {{fir_filter/sum_r_reg[12][5]}}}
@file 2025: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[12][6]} .original_name {{fir_filter/sum_r_reg[12][6]}}}
@file 2026: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[12][7]} .original_name {{fir_filter/sum_r_reg[12][7]}}}
@file 2027: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[12][8]} .original_name {{fir_filter/sum_r_reg[12][8]}}}
@file 2028: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[12][9]} .original_name {{fir_filter/sum_r_reg[12][9]}}}
@file 2029: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[12][10]} .original_name {{fir_filter/sum_r_reg[12][10]}}}
@file 2030: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[12][11]} .original_name {{fir_filter/sum_r_reg[12][11]}}}
@file 2031: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[12][12]} .original_name {{fir_filter/sum_r_reg[12][12]}}}
@file 2032: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[12][13]} .original_name {{fir_filter/sum_r_reg[12][13]}}}
@file 2033: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[12][14]} .original_name {{fir_filter/sum_r_reg[12][14]}}}
@file 2034: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[12][15]} .original_name {{fir_filter/sum_r_reg[12][15]}}}
@file 2035: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[12][16]} .original_name {{fir_filter/sum_r_reg[12][16]}}}
@file 2036: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[12][17]} .original_name {{fir_filter/sum_r_reg[12][17]}}}
@file 2037: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[12][18]} .original_name {{fir_filter/sum_r_reg[12][18]}}}
@file 2038: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[12][19]} .original_name {{fir_filter/sum_r_reg[12][19]}}}
@file 2039: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[12][20]} .original_name {{fir_filter/sum_r_reg[12][20]}}}
@file 2040: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[12][21]} .original_name {{fir_filter/sum_r_reg[12][21]}}}
@file 2041: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[12][22]} .original_name {{fir_filter/sum_r_reg[12][22]}}}
@file 2042: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[13][0]} .original_name {{fir_filter/sum_r_reg[13][0]}}}
@file 2043: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[13][1]} .original_name {{fir_filter/sum_r_reg[13][1]}}}
@file 2044: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[13][2]} .original_name {{fir_filter/sum_r_reg[13][2]}}}
@file 2045: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[13][3]} .original_name {{fir_filter/sum_r_reg[13][3]}}}
@file 2046: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[13][4]} .original_name {{fir_filter/sum_r_reg[13][4]}}}
@file 2047: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[13][5]} .original_name {{fir_filter/sum_r_reg[13][5]}}}
@file 2048: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[13][6]} .original_name {{fir_filter/sum_r_reg[13][6]}}}
@file 2049: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[13][7]} .original_name {{fir_filter/sum_r_reg[13][7]}}}
@file 2050: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[13][8]} .original_name {{fir_filter/sum_r_reg[13][8]}}}
@file 2051: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[13][9]} .original_name {{fir_filter/sum_r_reg[13][9]}}}
@file 2052: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[13][10]} .original_name {{fir_filter/sum_r_reg[13][10]}}}
@file 2053: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[13][11]} .original_name {{fir_filter/sum_r_reg[13][11]}}}
@file 2054: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[13][12]} .original_name {{fir_filter/sum_r_reg[13][12]}}}
@file 2055: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[13][13]} .original_name {{fir_filter/sum_r_reg[13][13]}}}
@file 2056: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[13][14]} .original_name {{fir_filter/sum_r_reg[13][14]}}}
@file 2057: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[13][15]} .original_name {{fir_filter/sum_r_reg[13][15]}}}
@file 2058: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[13][16]} .original_name {{fir_filter/sum_r_reg[13][16]}}}
@file 2059: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[13][17]} .original_name {{fir_filter/sum_r_reg[13][17]}}}
@file 2060: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[13][18]} .original_name {{fir_filter/sum_r_reg[13][18]}}}
@file 2061: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[13][19]} .original_name {{fir_filter/sum_r_reg[13][19]}}}
@file 2062: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[13][20]} .original_name {{fir_filter/sum_r_reg[13][20]}}}
@file 2063: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[13][21]} .original_name {{fir_filter/sum_r_reg[13][21]}}}
@file 2064: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[13][22]} .original_name {{fir_filter/sum_r_reg[13][22]}}}
@file 2065: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[14][0]} .original_name {{fir_filter/sum_r_reg[14][0]}}}
@file 2066: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[14][1]} .original_name {{fir_filter/sum_r_reg[14][1]}}}
@file 2067: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[14][2]} .original_name {{fir_filter/sum_r_reg[14][2]}}}
@file 2068: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[14][3]} .original_name {{fir_filter/sum_r_reg[14][3]}}}
@file 2069: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[14][4]} .original_name {{fir_filter/sum_r_reg[14][4]}}}
@file 2070: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[14][5]} .original_name {{fir_filter/sum_r_reg[14][5]}}}
@file 2071: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[14][6]} .original_name {{fir_filter/sum_r_reg[14][6]}}}
@file 2072: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[14][7]} .original_name {{fir_filter/sum_r_reg[14][7]}}}
@file 2073: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[14][8]} .original_name {{fir_filter/sum_r_reg[14][8]}}}
@file 2074: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[14][9]} .original_name {{fir_filter/sum_r_reg[14][9]}}}
@file 2075: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[14][10]} .original_name {{fir_filter/sum_r_reg[14][10]}}}
@file 2076: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[14][11]} .original_name {{fir_filter/sum_r_reg[14][11]}}}
@file 2077: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[14][12]} .original_name {{fir_filter/sum_r_reg[14][12]}}}
@file 2078: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[14][13]} .original_name {{fir_filter/sum_r_reg[14][13]}}}
@file 2079: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[14][14]} .original_name {{fir_filter/sum_r_reg[14][14]}}}
@file 2080: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[14][15]} .original_name {{fir_filter/sum_r_reg[14][15]}}}
@file 2081: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[14][16]} .original_name {{fir_filter/sum_r_reg[14][16]}}}
@file 2082: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[14][17]} .original_name {{fir_filter/sum_r_reg[14][17]}}}
@file 2083: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[14][18]} .original_name {{fir_filter/sum_r_reg[14][18]}}}
@file 2084: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[14][19]} .original_name {{fir_filter/sum_r_reg[14][19]}}}
@file 2085: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[14][20]} .original_name {{fir_filter/sum_r_reg[14][20]}}}
@file 2086: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[14][21]} .original_name {{fir_filter/sum_r_reg[14][21]}}}
@file 2087: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[14][22]} .original_name {{fir_filter/sum_r_reg[14][22]}}}
@file 2088: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[15][0]} .original_name {{fir_filter/sum_r_reg[15][0]}}}
@file 2089: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[15][1]} .original_name {{fir_filter/sum_r_reg[15][1]}}}
@file 2090: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[15][2]} .original_name {{fir_filter/sum_r_reg[15][2]}}}
@file 2091: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[15][3]} .original_name {{fir_filter/sum_r_reg[15][3]}}}
@file 2092: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[15][4]} .original_name {{fir_filter/sum_r_reg[15][4]}}}
@file 2093: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[15][5]} .original_name {{fir_filter/sum_r_reg[15][5]}}}
@file 2094: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[15][6]} .original_name {{fir_filter/sum_r_reg[15][6]}}}
@file 2095: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[15][7]} .original_name {{fir_filter/sum_r_reg[15][7]}}}
@file 2096: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[15][8]} .original_name {{fir_filter/sum_r_reg[15][8]}}}
@file 2097: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[15][9]} .original_name {{fir_filter/sum_r_reg[15][9]}}}
@file 2098: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[15][10]} .original_name {{fir_filter/sum_r_reg[15][10]}}}
@file 2099: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[15][11]} .original_name {{fir_filter/sum_r_reg[15][11]}}}
@file 2100: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[15][12]} .original_name {{fir_filter/sum_r_reg[15][12]}}}
@file 2101: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[15][13]} .original_name {{fir_filter/sum_r_reg[15][13]}}}
@file 2102: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[15][14]} .original_name {{fir_filter/sum_r_reg[15][14]}}}
@file 2103: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[15][15]} .original_name {{fir_filter/sum_r_reg[15][15]}}}
@file 2104: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[15][16]} .original_name {{fir_filter/sum_r_reg[15][16]}}}
@file 2105: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[15][17]} .original_name {{fir_filter/sum_r_reg[15][17]}}}
@file 2106: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[15][18]} .original_name {{fir_filter/sum_r_reg[15][18]}}}
@file 2107: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[15][19]} .original_name {{fir_filter/sum_r_reg[15][19]}}}
@file 2108: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[15][20]} .original_name {{fir_filter/sum_r_reg[15][20]}}}
@file 2109: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[15][21]} .original_name {{fir_filter/sum_r_reg[15][21]}}}
@file 2110: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[15][22]} .original_name {{fir_filter/sum_r_reg[15][22]}}}
@file 2111: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[16][0]} .original_name {{fir_filter/sum_r_reg[16][0]}}}
@file 2112: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[16][1]} .original_name {{fir_filter/sum_r_reg[16][1]}}}
@file 2113: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[16][2]} .original_name {{fir_filter/sum_r_reg[16][2]}}}
@file 2114: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[16][3]} .original_name {{fir_filter/sum_r_reg[16][3]}}}
@file 2115: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[16][4]} .original_name {{fir_filter/sum_r_reg[16][4]}}}
@file 2116: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[16][5]} .original_name {{fir_filter/sum_r_reg[16][5]}}}
@file 2117: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[16][6]} .original_name {{fir_filter/sum_r_reg[16][6]}}}
@file 2118: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[16][7]} .original_name {{fir_filter/sum_r_reg[16][7]}}}
@file 2119: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[16][8]} .original_name {{fir_filter/sum_r_reg[16][8]}}}
@file 2120: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[16][9]} .original_name {{fir_filter/sum_r_reg[16][9]}}}
@file 2121: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[16][10]} .original_name {{fir_filter/sum_r_reg[16][10]}}}
@file 2122: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[16][11]} .original_name {{fir_filter/sum_r_reg[16][11]}}}
@file 2123: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[16][12]} .original_name {{fir_filter/sum_r_reg[16][12]}}}
@file 2124: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[16][13]} .original_name {{fir_filter/sum_r_reg[16][13]}}}
@file 2125: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[16][14]} .original_name {{fir_filter/sum_r_reg[16][14]}}}
@file 2126: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[16][15]} .original_name {{fir_filter/sum_r_reg[16][15]}}}
@file 2127: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[16][16]} .original_name {{fir_filter/sum_r_reg[16][16]}}}
@file 2128: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[16][17]} .original_name {{fir_filter/sum_r_reg[16][17]}}}
@file 2129: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[16][18]} .original_name {{fir_filter/sum_r_reg[16][18]}}}
@file 2130: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[16][19]} .original_name {{fir_filter/sum_r_reg[16][19]}}}
@file 2131: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[16][20]} .original_name {{fir_filter/sum_r_reg[16][20]}}}
@file 2132: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[16][21]} .original_name {{fir_filter/sum_r_reg[16][21]}}}
@file 2133: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[16][22]} .original_name {{fir_filter/sum_r_reg[16][22]}}}
@file 2134: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[17][0]} .original_name {{fir_filter/sum_r_reg[17][0]}}}
@file 2135: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[17][1]} .original_name {{fir_filter/sum_r_reg[17][1]}}}
@file 2136: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[17][2]} .original_name {{fir_filter/sum_r_reg[17][2]}}}
@file 2137: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[17][3]} .original_name {{fir_filter/sum_r_reg[17][3]}}}
@file 2138: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[17][4]} .original_name {{fir_filter/sum_r_reg[17][4]}}}
@file 2139: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[17][5]} .original_name {{fir_filter/sum_r_reg[17][5]}}}
@file 2140: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[17][6]} .original_name {{fir_filter/sum_r_reg[17][6]}}}
@file 2141: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[17][7]} .original_name {{fir_filter/sum_r_reg[17][7]}}}
@file 2142: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[17][8]} .original_name {{fir_filter/sum_r_reg[17][8]}}}
@file 2143: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[17][9]} .original_name {{fir_filter/sum_r_reg[17][9]}}}
@file 2144: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[17][10]} .original_name {{fir_filter/sum_r_reg[17][10]}}}
@file 2145: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[17][11]} .original_name {{fir_filter/sum_r_reg[17][11]}}}
@file 2146: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[17][12]} .original_name {{fir_filter/sum_r_reg[17][12]}}}
@file 2147: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[17][13]} .original_name {{fir_filter/sum_r_reg[17][13]}}}
@file 2148: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[17][14]} .original_name {{fir_filter/sum_r_reg[17][14]}}}
@file 2149: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[17][15]} .original_name {{fir_filter/sum_r_reg[17][15]}}}
@file 2150: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[17][16]} .original_name {{fir_filter/sum_r_reg[17][16]}}}
@file 2151: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[17][17]} .original_name {{fir_filter/sum_r_reg[17][17]}}}
@file 2152: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[17][18]} .original_name {{fir_filter/sum_r_reg[17][18]}}}
@file 2153: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[17][19]} .original_name {{fir_filter/sum_r_reg[17][19]}}}
@file 2154: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[17][20]} .original_name {{fir_filter/sum_r_reg[17][20]}}}
@file 2155: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[17][21]} .original_name {{fir_filter/sum_r_reg[17][21]}}}
@file 2156: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[17][22]} .original_name {{fir_filter/sum_r_reg[17][22]}}}
@file 2157: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[18][0]} .original_name {{fir_filter/sum_r_reg[18][0]}}}
@file 2158: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[18][1]} .original_name {{fir_filter/sum_r_reg[18][1]}}}
@file 2159: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[18][2]} .original_name {{fir_filter/sum_r_reg[18][2]}}}
@file 2160: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[18][3]} .original_name {{fir_filter/sum_r_reg[18][3]}}}
@file 2161: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[18][4]} .original_name {{fir_filter/sum_r_reg[18][4]}}}
@file 2162: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[18][5]} .original_name {{fir_filter/sum_r_reg[18][5]}}}
@file 2163: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[18][6]} .original_name {{fir_filter/sum_r_reg[18][6]}}}
@file 2164: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[18][7]} .original_name {{fir_filter/sum_r_reg[18][7]}}}
@file 2165: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[18][8]} .original_name {{fir_filter/sum_r_reg[18][8]}}}
@file 2166: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[18][9]} .original_name {{fir_filter/sum_r_reg[18][9]}}}
@file 2167: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[18][10]} .original_name {{fir_filter/sum_r_reg[18][10]}}}
@file 2168: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[18][11]} .original_name {{fir_filter/sum_r_reg[18][11]}}}
@file 2169: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[18][12]} .original_name {{fir_filter/sum_r_reg[18][12]}}}
@file 2170: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[18][13]} .original_name {{fir_filter/sum_r_reg[18][13]}}}
@file 2171: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[18][14]} .original_name {{fir_filter/sum_r_reg[18][14]}}}
@file 2172: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[18][15]} .original_name {{fir_filter/sum_r_reg[18][15]}}}
@file 2173: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[18][16]} .original_name {{fir_filter/sum_r_reg[18][16]}}}
@file 2174: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[18][17]} .original_name {{fir_filter/sum_r_reg[18][17]}}}
@file 2175: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[18][18]} .original_name {{fir_filter/sum_r_reg[18][18]}}}
@file 2176: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[18][19]} .original_name {{fir_filter/sum_r_reg[18][19]}}}
@file 2177: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[18][20]} .original_name {{fir_filter/sum_r_reg[18][20]}}}
@file 2178: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[18][21]} .original_name {{fir_filter/sum_r_reg[18][21]}}}
@file 2179: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[18][22]} .original_name {{fir_filter/sum_r_reg[18][22]}}}
@file 2180: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[19][0]} .original_name {{fir_filter/sum_r_reg[19][0]}}}
@file 2181: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[19][1]} .original_name {{fir_filter/sum_r_reg[19][1]}}}
@file 2182: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[19][2]} .original_name {{fir_filter/sum_r_reg[19][2]}}}
@file 2183: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[19][3]} .original_name {{fir_filter/sum_r_reg[19][3]}}}
@file 2184: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[19][4]} .original_name {{fir_filter/sum_r_reg[19][4]}}}
@file 2185: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[19][5]} .original_name {{fir_filter/sum_r_reg[19][5]}}}
@file 2186: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[19][6]} .original_name {{fir_filter/sum_r_reg[19][6]}}}
@file 2187: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[19][7]} .original_name {{fir_filter/sum_r_reg[19][7]}}}
@file 2188: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[19][8]} .original_name {{fir_filter/sum_r_reg[19][8]}}}
@file 2189: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[19][9]} .original_name {{fir_filter/sum_r_reg[19][9]}}}
@file 2190: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[19][10]} .original_name {{fir_filter/sum_r_reg[19][10]}}}
@file 2191: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[19][11]} .original_name {{fir_filter/sum_r_reg[19][11]}}}
@file 2192: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[19][12]} .original_name {{fir_filter/sum_r_reg[19][12]}}}
@file 2193: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[19][13]} .original_name {{fir_filter/sum_r_reg[19][13]}}}
@file 2194: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[19][14]} .original_name {{fir_filter/sum_r_reg[19][14]}}}
@file 2195: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[19][15]} .original_name {{fir_filter/sum_r_reg[19][15]}}}
@file 2196: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[19][16]} .original_name {{fir_filter/sum_r_reg[19][16]}}}
@file 2197: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[19][17]} .original_name {{fir_filter/sum_r_reg[19][17]}}}
@file 2198: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[19][18]} .original_name {{fir_filter/sum_r_reg[19][18]}}}
@file 2199: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[19][19]} .original_name {{fir_filter/sum_r_reg[19][19]}}}
@file 2200: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[19][20]} .original_name {{fir_filter/sum_r_reg[19][20]}}}
@file 2201: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[19][21]} .original_name {{fir_filter/sum_r_reg[19][21]}}}
@file 2202: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[19][22]} .original_name {{fir_filter/sum_r_reg[19][22]}}}
@file 2203: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[20][0]} .original_name {{fir_filter/sum_r_reg[20][0]}}}
@file 2204: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[20][1]} .original_name {{fir_filter/sum_r_reg[20][1]}}}
@file 2205: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[20][2]} .original_name {{fir_filter/sum_r_reg[20][2]}}}
@file 2206: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[20][3]} .original_name {{fir_filter/sum_r_reg[20][3]}}}
@file 2207: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[20][4]} .original_name {{fir_filter/sum_r_reg[20][4]}}}
@file 2208: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[20][5]} .original_name {{fir_filter/sum_r_reg[20][5]}}}
@file 2209: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[20][6]} .original_name {{fir_filter/sum_r_reg[20][6]}}}
@file 2210: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[20][7]} .original_name {{fir_filter/sum_r_reg[20][7]}}}
@file 2211: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[20][8]} .original_name {{fir_filter/sum_r_reg[20][8]}}}
@file 2212: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[20][9]} .original_name {{fir_filter/sum_r_reg[20][9]}}}
@file 2213: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[20][10]} .original_name {{fir_filter/sum_r_reg[20][10]}}}
@file 2214: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[20][11]} .original_name {{fir_filter/sum_r_reg[20][11]}}}
@file 2215: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[20][12]} .original_name {{fir_filter/sum_r_reg[20][12]}}}
@file 2216: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[20][13]} .original_name {{fir_filter/sum_r_reg[20][13]}}}
@file 2217: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[20][14]} .original_name {{fir_filter/sum_r_reg[20][14]}}}
@file 2218: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[20][15]} .original_name {{fir_filter/sum_r_reg[20][15]}}}
@file 2219: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[20][16]} .original_name {{fir_filter/sum_r_reg[20][16]}}}
@file 2220: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[20][17]} .original_name {{fir_filter/sum_r_reg[20][17]}}}
@file 2221: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[20][18]} .original_name {{fir_filter/sum_r_reg[20][18]}}}
@file 2222: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[20][19]} .original_name {{fir_filter/sum_r_reg[20][19]}}}
@file 2223: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[20][20]} .original_name {{fir_filter/sum_r_reg[20][20]}}}
@file 2224: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[20][21]} .original_name {{fir_filter/sum_r_reg[20][21]}}}
@file 2225: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[20][22]} .original_name {{fir_filter/sum_r_reg[20][22]}}}
@file 2226: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[21][0]} .original_name {{fir_filter/sum_r_reg[21][0]}}}
@file 2227: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[21][1]} .original_name {{fir_filter/sum_r_reg[21][1]}}}
@file 2228: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[21][2]} .original_name {{fir_filter/sum_r_reg[21][2]}}}
@file 2229: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[21][3]} .original_name {{fir_filter/sum_r_reg[21][3]}}}
@file 2230: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[21][4]} .original_name {{fir_filter/sum_r_reg[21][4]}}}
@file 2231: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[21][5]} .original_name {{fir_filter/sum_r_reg[21][5]}}}
@file 2232: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[21][6]} .original_name {{fir_filter/sum_r_reg[21][6]}}}
@file 2233: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[21][7]} .original_name {{fir_filter/sum_r_reg[21][7]}}}
@file 2234: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[21][8]} .original_name {{fir_filter/sum_r_reg[21][8]}}}
@file 2235: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[21][9]} .original_name {{fir_filter/sum_r_reg[21][9]}}}
@file 2236: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[21][10]} .original_name {{fir_filter/sum_r_reg[21][10]}}}
@file 2237: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[21][11]} .original_name {{fir_filter/sum_r_reg[21][11]}}}
@file 2238: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[21][12]} .original_name {{fir_filter/sum_r_reg[21][12]}}}
@file 2239: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[21][13]} .original_name {{fir_filter/sum_r_reg[21][13]}}}
@file 2240: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[21][14]} .original_name {{fir_filter/sum_r_reg[21][14]}}}
@file 2241: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[21][15]} .original_name {{fir_filter/sum_r_reg[21][15]}}}
@file 2242: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[21][16]} .original_name {{fir_filter/sum_r_reg[21][16]}}}
@file 2243: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[21][17]} .original_name {{fir_filter/sum_r_reg[21][17]}}}
@file 2244: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[21][18]} .original_name {{fir_filter/sum_r_reg[21][18]}}}
@file 2245: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[21][19]} .original_name {{fir_filter/sum_r_reg[21][19]}}}
@file 2246: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[21][20]} .original_name {{fir_filter/sum_r_reg[21][20]}}}
@file 2247: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[21][21]} .original_name {{fir_filter/sum_r_reg[21][21]}}}
@file 2248: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[21][22]} .original_name {{fir_filter/sum_r_reg[21][22]}}}
@file 2249: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[22][0]} .original_name {{fir_filter/sum_r_reg[22][0]}}}
@file 2250: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[22][1]} .original_name {{fir_filter/sum_r_reg[22][1]}}}
@file 2251: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[22][2]} .original_name {{fir_filter/sum_r_reg[22][2]}}}
@file 2252: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[22][3]} .original_name {{fir_filter/sum_r_reg[22][3]}}}
@file 2253: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[22][4]} .original_name {{fir_filter/sum_r_reg[22][4]}}}
@file 2254: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[22][5]} .original_name {{fir_filter/sum_r_reg[22][5]}}}
@file 2255: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[22][6]} .original_name {{fir_filter/sum_r_reg[22][6]}}}
@file 2256: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[22][7]} .original_name {{fir_filter/sum_r_reg[22][7]}}}
@file 2257: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[22][8]} .original_name {{fir_filter/sum_r_reg[22][8]}}}
@file 2258: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[22][9]} .original_name {{fir_filter/sum_r_reg[22][9]}}}
@file 2259: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[22][10]} .original_name {{fir_filter/sum_r_reg[22][10]}}}
@file 2260: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[22][11]} .original_name {{fir_filter/sum_r_reg[22][11]}}}
@file 2261: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[22][12]} .original_name {{fir_filter/sum_r_reg[22][12]}}}
@file 2262: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[22][13]} .original_name {{fir_filter/sum_r_reg[22][13]}}}
@file 2263: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[22][14]} .original_name {{fir_filter/sum_r_reg[22][14]}}}
@file 2264: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[22][15]} .original_name {{fir_filter/sum_r_reg[22][15]}}}
@file 2265: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[22][16]} .original_name {{fir_filter/sum_r_reg[22][16]}}}
@file 2266: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[22][17]} .original_name {{fir_filter/sum_r_reg[22][17]}}}
@file 2267: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[22][18]} .original_name {{fir_filter/sum_r_reg[22][18]}}}
@file 2268: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[22][19]} .original_name {{fir_filter/sum_r_reg[22][19]}}}
@file 2269: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[22][20]} .original_name {{fir_filter/sum_r_reg[22][20]}}}
@file 2270: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[22][21]} .original_name {{fir_filter/sum_r_reg[22][21]}}}
@file 2271: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[22][22]} .original_name {{fir_filter/sum_r_reg[22][22]}}}
@file 2272: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[23][0]} .original_name {{fir_filter/sum_r_reg[23][0]}}}
@file 2273: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[23][1]} .original_name {{fir_filter/sum_r_reg[23][1]}}}
@file 2274: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[23][2]} .original_name {{fir_filter/sum_r_reg[23][2]}}}
@file 2275: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[23][3]} .original_name {{fir_filter/sum_r_reg[23][3]}}}
@file 2276: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[23][4]} .original_name {{fir_filter/sum_r_reg[23][4]}}}
@file 2277: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[23][5]} .original_name {{fir_filter/sum_r_reg[23][5]}}}
@file 2278: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[23][6]} .original_name {{fir_filter/sum_r_reg[23][6]}}}
@file 2279: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[23][7]} .original_name {{fir_filter/sum_r_reg[23][7]}}}
@file 2280: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[23][8]} .original_name {{fir_filter/sum_r_reg[23][8]}}}
@file 2281: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[23][9]} .original_name {{fir_filter/sum_r_reg[23][9]}}}
@file 2282: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[23][10]} .original_name {{fir_filter/sum_r_reg[23][10]}}}
@file 2283: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[23][11]} .original_name {{fir_filter/sum_r_reg[23][11]}}}
@file 2284: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[23][12]} .original_name {{fir_filter/sum_r_reg[23][12]}}}
@file 2285: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[23][13]} .original_name {{fir_filter/sum_r_reg[23][13]}}}
@file 2286: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[23][14]} .original_name {{fir_filter/sum_r_reg[23][14]}}}
@file 2287: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[23][15]} .original_name {{fir_filter/sum_r_reg[23][15]}}}
@file 2288: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[23][16]} .original_name {{fir_filter/sum_r_reg[23][16]}}}
@file 2289: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[23][17]} .original_name {{fir_filter/sum_r_reg[23][17]}}}
@file 2290: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[23][18]} .original_name {{fir_filter/sum_r_reg[23][18]}}}
@file 2291: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[23][19]} .original_name {{fir_filter/sum_r_reg[23][19]}}}
@file 2292: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[23][20]} .original_name {{fir_filter/sum_r_reg[23][20]}}}
@file 2293: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[23][21]} .original_name {{fir_filter/sum_r_reg[23][21]}}}
@file 2294: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[23][22]} .original_name {{fir_filter/sum_r_reg[23][22]}}}
@file 2295: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[24][0]} .original_name {{fir_filter/sum_r_reg[24][0]}}}
@file 2296: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[24][1]} .original_name {{fir_filter/sum_r_reg[24][1]}}}
@file 2297: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[24][2]} .original_name {{fir_filter/sum_r_reg[24][2]}}}
@file 2298: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[24][3]} .original_name {{fir_filter/sum_r_reg[24][3]}}}
@file 2299: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[24][4]} .original_name {{fir_filter/sum_r_reg[24][4]}}}
@file 2300: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[24][5]} .original_name {{fir_filter/sum_r_reg[24][5]}}}
@file 2301: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[24][6]} .original_name {{fir_filter/sum_r_reg[24][6]}}}
@file 2302: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[24][7]} .original_name {{fir_filter/sum_r_reg[24][7]}}}
@file 2303: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[24][8]} .original_name {{fir_filter/sum_r_reg[24][8]}}}
@file 2304: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[24][9]} .original_name {{fir_filter/sum_r_reg[24][9]}}}
@file 2305: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[24][10]} .original_name {{fir_filter/sum_r_reg[24][10]}}}
@file 2306: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[24][11]} .original_name {{fir_filter/sum_r_reg[24][11]}}}
@file 2307: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[24][12]} .original_name {{fir_filter/sum_r_reg[24][12]}}}
@file 2308: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[24][13]} .original_name {{fir_filter/sum_r_reg[24][13]}}}
@file 2309: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[24][14]} .original_name {{fir_filter/sum_r_reg[24][14]}}}
@file 2310: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[24][15]} .original_name {{fir_filter/sum_r_reg[24][15]}}}
@file 2311: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[24][16]} .original_name {{fir_filter/sum_r_reg[24][16]}}}
@file 2312: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[24][17]} .original_name {{fir_filter/sum_r_reg[24][17]}}}
@file 2313: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[24][18]} .original_name {{fir_filter/sum_r_reg[24][18]}}}
@file 2314: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[24][19]} .original_name {{fir_filter/sum_r_reg[24][19]}}}
@file 2315: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[24][20]} .original_name {{fir_filter/sum_r_reg[24][20]}}}
@file 2316: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[24][21]} .original_name {{fir_filter/sum_r_reg[24][21]}}}
@file 2317: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[24][22]} .original_name {{fir_filter/sum_r_reg[24][22]}}}
@file 2318: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[25][0]} .original_name {{fir_filter/sum_r_reg[25][0]}}}
@file 2319: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[25][1]} .original_name {{fir_filter/sum_r_reg[25][1]}}}
@file 2320: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[25][2]} .original_name {{fir_filter/sum_r_reg[25][2]}}}
@file 2321: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[25][3]} .original_name {{fir_filter/sum_r_reg[25][3]}}}
@file 2322: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[25][4]} .original_name {{fir_filter/sum_r_reg[25][4]}}}
@file 2323: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[25][5]} .original_name {{fir_filter/sum_r_reg[25][5]}}}
@file 2324: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[25][6]} .original_name {{fir_filter/sum_r_reg[25][6]}}}
@file 2325: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[25][7]} .original_name {{fir_filter/sum_r_reg[25][7]}}}
@file 2326: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[25][8]} .original_name {{fir_filter/sum_r_reg[25][8]}}}
@file 2327: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[25][9]} .original_name {{fir_filter/sum_r_reg[25][9]}}}
@file 2328: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[25][10]} .original_name {{fir_filter/sum_r_reg[25][10]}}}
@file 2329: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[25][11]} .original_name {{fir_filter/sum_r_reg[25][11]}}}
@file 2330: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[25][12]} .original_name {{fir_filter/sum_r_reg[25][12]}}}
@file 2331: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[25][13]} .original_name {{fir_filter/sum_r_reg[25][13]}}}
@file 2332: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[25][14]} .original_name {{fir_filter/sum_r_reg[25][14]}}}
@file 2333: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[25][15]} .original_name {{fir_filter/sum_r_reg[25][15]}}}
@file 2334: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[25][16]} .original_name {{fir_filter/sum_r_reg[25][16]}}}
@file 2335: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[25][17]} .original_name {{fir_filter/sum_r_reg[25][17]}}}
@file 2336: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[25][18]} .original_name {{fir_filter/sum_r_reg[25][18]}}}
@file 2337: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[25][19]} .original_name {{fir_filter/sum_r_reg[25][19]}}}
@file 2338: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[25][20]} .original_name {{fir_filter/sum_r_reg[25][20]}}}
@file 2339: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[25][21]} .original_name {{fir_filter/sum_r_reg[25][21]}}}
@file 2340: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[25][22]} .original_name {{fir_filter/sum_r_reg[25][22]}}}
@file 2341: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[26][0]} .original_name {{fir_filter/sum_r_reg[26][0]}}}
@file 2342: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[26][1]} .original_name {{fir_filter/sum_r_reg[26][1]}}}
@file 2343: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[26][2]} .original_name {{fir_filter/sum_r_reg[26][2]}}}
@file 2344: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[26][3]} .original_name {{fir_filter/sum_r_reg[26][3]}}}
@file 2345: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[26][4]} .original_name {{fir_filter/sum_r_reg[26][4]}}}
@file 2346: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[26][5]} .original_name {{fir_filter/sum_r_reg[26][5]}}}
@file 2347: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[26][6]} .original_name {{fir_filter/sum_r_reg[26][6]}}}
@file 2348: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[26][7]} .original_name {{fir_filter/sum_r_reg[26][7]}}}
@file 2349: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[26][8]} .original_name {{fir_filter/sum_r_reg[26][8]}}}
@file 2350: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[26][9]} .original_name {{fir_filter/sum_r_reg[26][9]}}}
@file 2351: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[26][10]} .original_name {{fir_filter/sum_r_reg[26][10]}}}
@file 2352: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[26][11]} .original_name {{fir_filter/sum_r_reg[26][11]}}}
@file 2353: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[26][12]} .original_name {{fir_filter/sum_r_reg[26][12]}}}
@file 2354: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[26][13]} .original_name {{fir_filter/sum_r_reg[26][13]}}}
@file 2355: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[26][14]} .original_name {{fir_filter/sum_r_reg[26][14]}}}
@file 2356: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[26][15]} .original_name {{fir_filter/sum_r_reg[26][15]}}}
@file 2357: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[26][16]} .original_name {{fir_filter/sum_r_reg[26][16]}}}
@file 2358: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[26][17]} .original_name {{fir_filter/sum_r_reg[26][17]}}}
@file 2359: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[26][18]} .original_name {{fir_filter/sum_r_reg[26][18]}}}
@file 2360: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[26][19]} .original_name {{fir_filter/sum_r_reg[26][19]}}}
@file 2361: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[26][20]} .original_name {{fir_filter/sum_r_reg[26][20]}}}
@file 2362: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[26][21]} .original_name {{fir_filter/sum_r_reg[26][21]}}}
@file 2363: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[26][22]} .original_name {{fir_filter/sum_r_reg[26][22]}}}
@file 2364: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[27][0]} .original_name {{fir_filter/sum_r_reg[27][0]}}}
@file 2365: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[27][1]} .original_name {{fir_filter/sum_r_reg[27][1]}}}
@file 2366: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[27][2]} .original_name {{fir_filter/sum_r_reg[27][2]}}}
@file 2367: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[27][3]} .original_name {{fir_filter/sum_r_reg[27][3]}}}
@file 2368: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[27][4]} .original_name {{fir_filter/sum_r_reg[27][4]}}}
@file 2369: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[27][5]} .original_name {{fir_filter/sum_r_reg[27][5]}}}
@file 2370: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[27][6]} .original_name {{fir_filter/sum_r_reg[27][6]}}}
@file 2371: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[27][7]} .original_name {{fir_filter/sum_r_reg[27][7]}}}
@file 2372: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[27][8]} .original_name {{fir_filter/sum_r_reg[27][8]}}}
@file 2373: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[27][9]} .original_name {{fir_filter/sum_r_reg[27][9]}}}
@file 2374: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[27][10]} .original_name {{fir_filter/sum_r_reg[27][10]}}}
@file 2375: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[27][11]} .original_name {{fir_filter/sum_r_reg[27][11]}}}
@file 2376: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[27][12]} .original_name {{fir_filter/sum_r_reg[27][12]}}}
@file 2377: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[27][13]} .original_name {{fir_filter/sum_r_reg[27][13]}}}
@file 2378: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[27][14]} .original_name {{fir_filter/sum_r_reg[27][14]}}}
@file 2379: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[27][15]} .original_name {{fir_filter/sum_r_reg[27][15]}}}
@file 2380: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[27][16]} .original_name {{fir_filter/sum_r_reg[27][16]}}}
@file 2381: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[27][17]} .original_name {{fir_filter/sum_r_reg[27][17]}}}
@file 2382: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[27][18]} .original_name {{fir_filter/sum_r_reg[27][18]}}}
@file 2383: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[27][19]} .original_name {{fir_filter/sum_r_reg[27][19]}}}
@file 2384: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[27][20]} .original_name {{fir_filter/sum_r_reg[27][20]}}}
@file 2385: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[27][21]} .original_name {{fir_filter/sum_r_reg[27][21]}}}
@file 2386: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[27][22]} .original_name {{fir_filter/sum_r_reg[27][22]}}}
@file 2387: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[28][0]} .original_name {{fir_filter/sum_r_reg[28][0]}}}
@file 2388: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[28][1]} .original_name {{fir_filter/sum_r_reg[28][1]}}}
@file 2389: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[28][2]} .original_name {{fir_filter/sum_r_reg[28][2]}}}
@file 2390: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[28][3]} .original_name {{fir_filter/sum_r_reg[28][3]}}}
@file 2391: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[28][4]} .original_name {{fir_filter/sum_r_reg[28][4]}}}
@file 2392: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[28][5]} .original_name {{fir_filter/sum_r_reg[28][5]}}}
@file 2393: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[28][6]} .original_name {{fir_filter/sum_r_reg[28][6]}}}
@file 2394: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[28][7]} .original_name {{fir_filter/sum_r_reg[28][7]}}}
@file 2395: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[28][8]} .original_name {{fir_filter/sum_r_reg[28][8]}}}
@file 2396: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[28][9]} .original_name {{fir_filter/sum_r_reg[28][9]}}}
@file 2397: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[28][10]} .original_name {{fir_filter/sum_r_reg[28][10]}}}
@file 2398: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[28][11]} .original_name {{fir_filter/sum_r_reg[28][11]}}}
@file 2399: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[28][12]} .original_name {{fir_filter/sum_r_reg[28][12]}}}
@file 2400: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[28][13]} .original_name {{fir_filter/sum_r_reg[28][13]}}}
@file 2401: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[28][14]} .original_name {{fir_filter/sum_r_reg[28][14]}}}
@file 2402: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[28][15]} .original_name {{fir_filter/sum_r_reg[28][15]}}}
@file 2403: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[28][16]} .original_name {{fir_filter/sum_r_reg[28][16]}}}
@file 2404: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[28][17]} .original_name {{fir_filter/sum_r_reg[28][17]}}}
@file 2405: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[28][18]} .original_name {{fir_filter/sum_r_reg[28][18]}}}
@file 2406: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[28][19]} .original_name {{fir_filter/sum_r_reg[28][19]}}}
@file 2407: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[28][20]} .original_name {{fir_filter/sum_r_reg[28][20]}}}
@file 2408: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[28][21]} .original_name {{fir_filter/sum_r_reg[28][21]}}}
@file 2409: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[28][22]} .original_name {{fir_filter/sum_r_reg[28][22]}}}
@file 2410: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[29][0]} .original_name {{fir_filter/sum_r_reg[29][0]}}}
@file 2411: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[29][1]} .original_name {{fir_filter/sum_r_reg[29][1]}}}
@file 2412: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[29][2]} .original_name {{fir_filter/sum_r_reg[29][2]}}}
@file 2413: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[29][3]} .original_name {{fir_filter/sum_r_reg[29][3]}}}
@file 2414: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[29][4]} .original_name {{fir_filter/sum_r_reg[29][4]}}}
@file 2415: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[29][5]} .original_name {{fir_filter/sum_r_reg[29][5]}}}
@file 2416: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[29][6]} .original_name {{fir_filter/sum_r_reg[29][6]}}}
@file 2417: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[29][7]} .original_name {{fir_filter/sum_r_reg[29][7]}}}
@file 2418: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[29][8]} .original_name {{fir_filter/sum_r_reg[29][8]}}}
@file 2419: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[29][9]} .original_name {{fir_filter/sum_r_reg[29][9]}}}
@file 2420: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[29][10]} .original_name {{fir_filter/sum_r_reg[29][10]}}}
@file 2421: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[29][11]} .original_name {{fir_filter/sum_r_reg[29][11]}}}
@file 2422: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[29][12]} .original_name {{fir_filter/sum_r_reg[29][12]}}}
@file 2423: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[29][13]} .original_name {{fir_filter/sum_r_reg[29][13]}}}
@file 2424: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[29][14]} .original_name {{fir_filter/sum_r_reg[29][14]}}}
@file 2425: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[29][15]} .original_name {{fir_filter/sum_r_reg[29][15]}}}
@file 2426: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[29][16]} .original_name {{fir_filter/sum_r_reg[29][16]}}}
@file 2427: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[29][17]} .original_name {{fir_filter/sum_r_reg[29][17]}}}
@file 2428: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[29][18]} .original_name {{fir_filter/sum_r_reg[29][18]}}}
@file 2429: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[29][19]} .original_name {{fir_filter/sum_r_reg[29][19]}}}
@file 2430: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[29][20]} .original_name {{fir_filter/sum_r_reg[29][20]}}}
@file 2431: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[29][21]} .original_name {{fir_filter/sum_r_reg[29][21]}}}
@file 2432: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[29][22]} .original_name {{fir_filter/sum_r_reg[29][22]}}}
@file 2433: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[30][0]} .original_name {{fir_filter/sum_r_reg[30][0]}}}
@file 2434: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[30][1]} .original_name {{fir_filter/sum_r_reg[30][1]}}}
@file 2435: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[30][2]} .original_name {{fir_filter/sum_r_reg[30][2]}}}
@file 2436: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[30][3]} .original_name {{fir_filter/sum_r_reg[30][3]}}}
@file 2437: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[30][4]} .original_name {{fir_filter/sum_r_reg[30][4]}}}
@file 2438: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[30][5]} .original_name {{fir_filter/sum_r_reg[30][5]}}}
@file 2439: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[30][6]} .original_name {{fir_filter/sum_r_reg[30][6]}}}
@file 2440: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[30][7]} .original_name {{fir_filter/sum_r_reg[30][7]}}}
@file 2441: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[30][8]} .original_name {{fir_filter/sum_r_reg[30][8]}}}
@file 2442: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[30][9]} .original_name {{fir_filter/sum_r_reg[30][9]}}}
@file 2443: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[30][10]} .original_name {{fir_filter/sum_r_reg[30][10]}}}
@file 2444: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[30][11]} .original_name {{fir_filter/sum_r_reg[30][11]}}}
@file 2445: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[30][12]} .original_name {{fir_filter/sum_r_reg[30][12]}}}
@file 2446: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[30][13]} .original_name {{fir_filter/sum_r_reg[30][13]}}}
@file 2447: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[30][14]} .original_name {{fir_filter/sum_r_reg[30][14]}}}
@file 2448: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[30][15]} .original_name {{fir_filter/sum_r_reg[30][15]}}}
@file 2449: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[30][16]} .original_name {{fir_filter/sum_r_reg[30][16]}}}
@file 2450: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[30][17]} .original_name {{fir_filter/sum_r_reg[30][17]}}}
@file 2451: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[30][18]} .original_name {{fir_filter/sum_r_reg[30][18]}}}
@file 2452: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[30][19]} .original_name {{fir_filter/sum_r_reg[30][19]}}}
@file 2453: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[30][20]} .original_name {{fir_filter/sum_r_reg[30][20]}}}
@file 2454: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[30][21]} .original_name {{fir_filter/sum_r_reg[30][21]}}}
@file 2455: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[30][22]} .original_name {{fir_filter/sum_r_reg[30][22]}}}
@file 2456: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[31][11]} .original_name {{fir_filter/sum_r_reg[31][11]}}}
@file 2457: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[31][12]} .original_name {{fir_filter/sum_r_reg[31][12]}}}
@file 2458: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[31][13]} .original_name {{fir_filter/sum_r_reg[31][13]}}}
@file 2459: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[31][14]} .original_name {{fir_filter/sum_r_reg[31][14]}}}
@file 2460: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[31][15]} .original_name {{fir_filter/sum_r_reg[31][15]}}}
@file 2461: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[31][16]} .original_name {{fir_filter/sum_r_reg[31][16]}}}
@file 2462: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[31][17]} .original_name {{fir_filter/sum_r_reg[31][17]}}}
@file 2463: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[31][18]} .original_name {{fir_filter/sum_r_reg[31][18]}}}
@file 2464: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[31][19]} .original_name {{fir_filter/sum_r_reg[31][19]}}}
@file 2465: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[31][20]} .original_name {{fir_filter/sum_r_reg[31][20]}}}
@file 2466: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[31][21]} .original_name {{fir_filter/sum_r_reg[31][21]}}}
@file 2467: catch {set_db {inst:filter_top/fir_filter/sum_r_reg[31][22]} .original_name {{fir_filter/sum_r_reg[31][22]}}}
@file 2468: catch {set_db inst:filter_top/spi/load_reg_reg .original_name spi/load_reg_reg}
@file 2469: catch {set_db inst:filter_top/spi/MISO_reg .original_name spi/MISO_reg}
@file 2470: catch {set_db {inst:filter_top/spi/MISO_reg_reg[2]} .original_name {{spi/MISO_reg_reg[2]}}}
@file 2471: catch {set_db {inst:filter_top/spi/MISO_reg_reg[3]} .original_name {{spi/MISO_reg_reg[3]}}}
@file 2472: catch {set_db {inst:filter_top/spi/MISO_reg_reg[4]} .original_name {{spi/MISO_reg_reg[4]}}}
@file 2473: catch {set_db {inst:filter_top/spi/MISO_reg_reg[5]} .original_name {{spi/MISO_reg_reg[5]}}}
@file 2474: catch {set_db {inst:filter_top/spi/MISO_reg_reg[6]} .original_name {{spi/MISO_reg_reg[6]}}}
@file 2475: catch {set_db {inst:filter_top/spi/MISO_reg_reg[7]} .original_name {{spi/MISO_reg_reg[7]}}}
@file 2476: catch {set_db {inst:filter_top/spi/MISO_reg_reg[8]} .original_name {{spi/MISO_reg_reg[8]}}}
@file 2477: catch {set_db {inst:filter_top/spi/MISO_reg_reg[9]} .original_name {{spi/MISO_reg_reg[9]}}}
@file 2478: catch {set_db {inst:filter_top/spi/MISO_reg_reg[10]} .original_name {{spi/MISO_reg_reg[10]}}}
@file 2479: catch {set_db {inst:filter_top/spi/MISO_reg_reg[11]} .original_name {{spi/MISO_reg_reg[11]}}}
@file 2480: catch {set_db {inst:filter_top/spi/MISO_reg_reg[12]} .original_name {{spi/MISO_reg_reg[12]}}}
@file 2481: catch {set_db {inst:filter_top/spi/MISO_reg_reg[13]} .original_name {{spi/MISO_reg_reg[13]}}}
@file 2482: catch {set_db {inst:filter_top/spi/MISO_reg_reg[14]} .original_name {{spi/MISO_reg_reg[14]}}}
@file 2483: catch {set_db {inst:filter_top/spi/MISO_reg_reg[15]} .original_name {{spi/MISO_reg_reg[15]}}}
@file 2484: catch {set_db inst:filter_top/spi/begin_count_reg .original_name spi/begin_count_reg}
@file 2485: catch {set_db {inst:filter_top/spi/byte_count_reg[0]} .original_name {{spi/byte_count_reg[0]}}}
@file 2486: catch {set_db {inst:filter_top/spi/byte_count_reg[1]} .original_name {{spi/byte_count_reg[1]}}}
@file 2487: catch {set_db {inst:filter_top/spi/byte_received_reg[0]} .original_name {{spi/byte_received_reg[0]}}}
@file 2488: catch {set_db {inst:filter_top/spi/byte_received_reg[1]} .original_name {{spi/byte_received_reg[1]}}}
@file 2489: catch {set_db {inst:filter_top/spi/byte_received_reg[2]} .original_name {{spi/byte_received_reg[2]}}}
@file 2490: catch {set_db {inst:filter_top/spi/byte_received_reg[3]} .original_name {{spi/byte_received_reg[3]}}}
@file 2491: catch {set_db {inst:filter_top/spi/byte_received_reg[4]} .original_name {{spi/byte_received_reg[4]}}}
@file 2492: catch {set_db {inst:filter_top/spi/byte_received_reg[5]} .original_name {{spi/byte_received_reg[5]}}}
@file 2493: catch {set_db {inst:filter_top/spi/byte_received_reg[6]} .original_name {{spi/byte_received_reg[6]}}}
@file 2494: catch {set_db {inst:filter_top/spi/byte_received_reg[7]} .original_name {{spi/byte_received_reg[7]}}}
@file 2495: catch {set_db {inst:filter_top/spi/count_bits_reg[0]} .original_name {{spi/count_bits_reg[0]}}}
@file 2496: catch {set_db {inst:filter_top/spi/count_bits_reg[1]} .original_name {{spi/count_bits_reg[1]}}}
@file 2497: catch {set_db {inst:filter_top/spi/count_bits_reg[2]} .original_name {{spi/count_bits_reg[2]}}}
@file 2498: catch {set_db {inst:filter_top/spi/read_address_reg[0]} .original_name {{spi/read_address_reg[0]}}}
@file 2499: catch {set_db {inst:filter_top/spi/read_address_reg[1]} .original_name {{spi/read_address_reg[1]}}}
@file 2500: catch {set_db {inst:filter_top/spi/read_address_reg[2]} .original_name {{spi/read_address_reg[2]}}}
@file 2501: catch {set_db {inst:filter_top/spi/read_address_reg[3]} .original_name {{spi/read_address_reg[3]}}}
@file 2502: catch {set_db {inst:filter_top/spi/read_address_reg[4]} .original_name {{spi/read_address_reg[4]}}}
@file 2503: catch {set_db {inst:filter_top/spi/read_address_reg[5]} .original_name {{spi/read_address_reg[5]}}}
@file 2504: catch {set_db {inst:filter_top/spi/read_address_reg[6]} .original_name {{spi/read_address_reg[6]}}}
@file 2505: catch {set_db {inst:filter_top/spi/read_address_reg[7]} .original_name {{spi/read_address_reg[7]}}}
@file 2506: catch {set_db inst:filter_top/spi/read_que_reg .original_name spi/read_que_reg}
@file 2507: catch {set_db inst:filter_top/spi/reading_reg .original_name spi/reading_reg}
@file 2508: catch {set_db {inst:filter_top/spi/store1_reg[0]} .original_name {{spi/store1_reg[0]}}}
@file 2509: catch {set_db {inst:filter_top/spi/store1_reg[1]} .original_name {{spi/store1_reg[1]}}}
@file 2510: catch {set_db {inst:filter_top/spi/store1_reg[2]} .original_name {{spi/store1_reg[2]}}}
@file 2511: catch {set_db {inst:filter_top/spi/store1_reg[3]} .original_name {{spi/store1_reg[3]}}}
@file 2512: catch {set_db {inst:filter_top/spi/store1_reg[4]} .original_name {{spi/store1_reg[4]}}}
@file 2513: catch {set_db {inst:filter_top/spi/store1_reg[5]} .original_name {{spi/store1_reg[5]}}}
@file 2514: catch {set_db {inst:filter_top/spi/store1_reg[6]} .original_name {{spi/store1_reg[6]}}}
@file 2515: catch {set_db {inst:filter_top/spi/store1_reg[7]} .original_name {{spi/store1_reg[7]}}}
@file 2516: catch {set_db {inst:filter_top/spi/store2_reg[0]} .original_name {{spi/store2_reg[0]}}}
@file 2517: catch {set_db {inst:filter_top/spi/store2_reg[1]} .original_name {{spi/store2_reg[1]}}}
@file 2518: catch {set_db {inst:filter_top/spi/store2_reg[2]} .original_name {{spi/store2_reg[2]}}}
@file 2519: catch {set_db {inst:filter_top/spi/store2_reg[3]} .original_name {{spi/store2_reg[3]}}}
@file 2520: catch {set_db {inst:filter_top/spi/store2_reg[4]} .original_name {{spi/store2_reg[4]}}}
@file 2521: catch {set_db {inst:filter_top/spi/store2_reg[5]} .original_name {{spi/store2_reg[5]}}}
@file 2522: catch {set_db {inst:filter_top/spi/store2_reg[6]} .original_name {{spi/store2_reg[6]}}}
@file 2523: catch {set_db {inst:filter_top/spi/store2_reg[7]} .original_name {{spi/store2_reg[7]}}}
@file 2524: catch {set_db {inst:filter_top/spi/store3_reg[0]} .original_name {{spi/store3_reg[0]}}}
@file 2525: catch {set_db {inst:filter_top/spi/store3_reg[1]} .original_name {{spi/store3_reg[1]}}}
@file 2526: catch {set_db {inst:filter_top/spi/store3_reg[2]} .original_name {{spi/store3_reg[2]}}}
@file 2527: catch {set_db {inst:filter_top/spi/store3_reg[3]} .original_name {{spi/store3_reg[3]}}}
@file 2528: catch {set_db {inst:filter_top/spi/store3_reg[4]} .original_name {{spi/store3_reg[4]}}}
@file 2529: catch {set_db {inst:filter_top/spi/store3_reg[5]} .original_name {{spi/store3_reg[5]}}}
@file 2530: catch {set_db {inst:filter_top/spi/store3_reg[6]} .original_name {{spi/store3_reg[6]}}}
@file 2531: catch {set_db {inst:filter_top/spi/store3_reg[7]} .original_name {{spi/store3_reg[7]}}}
@file 2532: catch {set_db inst:filter_top/spi/writing_reg .original_name spi/writing_reg}
#@ End verbose source ./syndb/final.wnm_attrs.tcl
@file 77: }
@file 78:
@file 79:
@file 80: # Reading NDR file
@file 81: source ./syndb/final.ndr.tcl
#@ Begin verbose source ./syndb/final.ndr.tcl (pre)
@file 1: # NDR attributes on nets
@@file 2: eval_legacy {
}
#@ End verbose source ./syndb/final.ndr.tcl
@file 82:
@file 83: # Reading Instance Attributes file
@file 84: pqos_eval { rcp::read_taf ./syndb/final.inst_attributes.taf.gz}
[final.inst_attributes.taf.gz]: empty.
@file 85:
@file 86: # Reading subdesign attributes file
@file 87: pqos_eval { rcp::read_taf ./syndb/final.subdesign_attributes.taf.gz}
[final.subdesign_attributes.taf.gz]: empty.
@file 88:
@file 89: # Reading minimum routing layer data file
@file 90: ################################################################################
@file 91: pqos_eval {rcp::load_min_layer_file ./syndb/final.min_layer {Metal1 Metal2 Metal3 Metal4 Metal5 Metal6 Metal7 Metal8 Metal9 Metal10 Metal11} {1 2 3 4 5 6 7 8 9 10 11}}
%# Begin rcp::load_min_layer_file (12/07 19:08:58, mem=1466.50M)
Read 0 nets
%# End rcp::load_min_layer_file (12/07 19:08:58, total cpu=03:00:00, real=03:00:00, peak res=1161.83M, current mem=1466.50M)
@@file 92: eval_legacy {set edi_pe::pegConsiderMacroLayersUnblocked 1}
@@file 93: eval_legacy {set edi_pe::pegPreRouteWireWidthBasedDensityCalModel 1}
Updating RC grid for preRoute extraction ...
Initializing multi-corner resistance tables ...
@file 94:
@file 95: set _t1 [clock seconds]
@file 96: puts [format  {%%%s End Genus to Innovus Setup (%s, real=%s)} \# [clock format $_t1 -format {%m/%d %H:%M:%S}] [clock format [expr {28800 + $_t1 - $_t0}] -format {%H:%M:%S}]]
%# End Genus to Innovus Setup (12/07 19:08:58, real=03:00:06)
@file 97:
#@ End verbose source ./syndb/final.invs_setup.tcl
@file 5:
@@file 6: set_db design_process_node 45
##  Process: 45            (User Set)               
##     Node: (not set)                           

##  Check design process and node:  
##  Design tech node is not set.

Applying the recommended capacitance filtering threshold values for 45nm process node: total_c_th=0, relative_c_th=1 and coupling_c_th=0.1.
	These values will be used by all post-route extraction engines, including TQuantus, IQuantus and Quantus QRC extraction.
	Capacitance filtering mode(extract_rc_cap_filter_mode option of the set_db) is 'relative_and_coupling' for all engines.
	The accuracy mode for post_route extract_rc_effort_level low extraction will be set to 'high'.
	Default value for EffortLevel(extract_rc_effort_level option of the set_db) in post_route extraction mode is 'medium'.
@file 7:
@@file 8: connect_global_net VSS -type tie_lo
@@file 9: connect_global_net VSS -type pg_pin -pin_base_name VSS -all 
@file 10:
@@file 11: connect_global_net VDD -type tie_hi
@@file 12: connect_global_net VDD -type pg_pin -pin_base_name VDD -all
@file 13:
@@file 14: read_io_file {../chip/chip.io}
Reading IO assignment file "../chip/chip.io" ...
@file 15:
@@file 16: create_floorplan -stdcell_density_size  1 0.70 20 20 20 20
Adjusting coreMargin bottom  to finFet grid (PlacementGrid) : after adjusting :20.14
Adjusting coreMargin top     to finFet grid (PlacementGrid) : after adjusting :20.14
Adjusting core size to PlacementGrid : width :314.2 height : 312.93
**WARN: (IMPFP-3961):	The techSite 'CornerSite' has no related standard cells in the LEF/OA library. The calculations for this site type cannot be made unless standard cell models of this type exist in the LEF/OA library. Ignore this warning if the SITE is not used by the library. Alternatively, remove the SITE definition for the LEF/OA library to avoid this message.
Type 'man IMPFP-3961' for more detail.
**WARN: (IMPFP-3961):	The techSite 'IOSite' has no related standard cells in the LEF/OA library. The calculations for this site type cannot be made unless standard cell models of this type exist in the LEF/OA library. Ignore this warning if the SITE is not used by the library. Alternatively, remove the SITE definition for the LEF/OA library to avoid this message.
Type 'man IMPFP-3961' for more detail.
Start create_tracks
@file 17:
@@file 18: add_rings -around user_defined \
    -type core_rings \
    -nets {VSS VDD} \
    -center 1 \
    -offset 0 \
    -width 4 \
    -spacing 2 \
    -layer {bottom Metal9 top Metal9 right Metal8 left Metal8}
#% Begin add_rings (date=12/07 19:08:58, mem=1162.1M)


viaInitial starts at Thu Dec  7 19:08:58 2023
viaInitial ends at Thu Dec  7 19:08:58 2023
Loading cell geometries (cpu: 0:00:00.0, real: 0:00:00.0, peak mem: 1465.5M)
Ring generation is complete.
vias are now being generated.
add_rings created 8 wires.
ViaGen created 8 vias, deleted 0 via to avoid violation.
+--------+----------------+----------------+
|  Layer |     Created    |     Deleted    |
+--------+----------------+----------------+
| Metal8 |        4       |       NA       |
|  Via8  |        8       |        0       |
| Metal9 |        4       |       NA       |
+--------+----------------+----------------+
#% End add_rings (date=12/07 19:08:58, total cpu=0:00:00.0, real=0:00:00.0, peak res=1164.3M, current mem=1164.3M)
@file 26:
@@file 27: add_stripes \
  -layer Metal9 \
  -direction horizontal \
  -width 2 \
  -spacing 1 \
  -start_offset 10 \
  -set_to_set_distance 20 \
  -nets {VSS VDD}
#% Begin add_stripes (date=12/07 19:08:58, mem=1164.3M)

Initialize fgc environment(mem: 1466.5M) ...  fail and won't use fgc to check drc(cpu: 0:00:00.0, real: 0:00:00.0, peak mem: 1466.5M)
Loading cell geometries (cpu: 0:00:00.0, real: 0:00:00.0, peak mem: 1466.5M)
Loading wires (cpu: 0:00:00.0, real: 0:00:00.0, peak mem: 1466.5M)
Loading via instances (cpu: 0:00:00.0, real: 0:00:00.0, peak mem: 1466.5M)
Starting stripe generation ...
Non-Default Mode Option Settings :
  NONE
Completing 10% stripe generation(cpu: 0:00:00.0, real: 0:00:00.0, peak mem: 1466.5M)
Completing 20% stripe generation(cpu: 0:00:00.0, real: 0:00:00.0, peak mem: 1466.5M)
Completing 30% stripe generation(cpu: 0:00:00.0, real: 0:00:00.0, peak mem: 1466.5M)
Completing 40% stripe generation(cpu: 0:00:00.0, real: 0:00:00.0, peak mem: 1466.5M)
Completing 50% stripe generation(cpu: 0:00:00.0, real: 0:00:00.0, peak mem: 1466.5M)
Completing 60% stripe generation(cpu: 0:00:00.0, real: 0:00:00.0, peak mem: 1466.5M)
Completing 70% stripe generation(cpu: 0:00:00.0, real: 0:00:00.0, peak mem: 1466.5M)
Completing 80% stripe generation(cpu: 0:00:00.0, real: 0:00:00.0, peak mem: 1466.5M)
Completing 90% stripe generation(cpu: 0:00:00.0, real: 0:00:00.0, peak mem: 1466.5M)
Completing 100% stripe generation(cpu: 0:00:00.0, real: 0:00:00.0, peak mem: 1466.5M)
Stripe generation is complete.
vias are now being generated.
add_stripes created 31 wires.
ViaGen created 62 vias, deleted 0 via to avoid violation.
+--------+----------------+----------------+
|  Layer |     Created    |     Deleted    |
+--------+----------------+----------------+
|  Via8  |       62       |        0       |
| Metal9 |       31       |       NA       |
+--------+----------------+----------------+
#% End add_stripes (date=12/07 19:08:58, total cpu=0:00:00.0, real=0:00:00.0, peak res=1165.2M, current mem=1165.2M)
@file 35:
@@file 36: add_stripes \
  -layer Metal8 \
  -direction vertical \
  -width 2 \
  -spacing 1 \
  -start_offset 10 \
  -set_to_set_distance 20 \
  -nets {VSS VDD}
#% Begin add_stripes (date=12/07 19:08:58, mem=1165.2M)

Initialize fgc environment(mem: 1466.5M) ...  fail and won't use fgc to check drc(cpu: 0:00:00.0, real: 0:00:00.0, peak mem: 1466.5M)
Loading cell geometries (cpu: 0:00:00.0, real: 0:00:00.0, peak mem: 1466.5M)
Loading wires (cpu: 0:00:00.0, real: 0:00:00.0, peak mem: 1466.5M)
Loading via instances (cpu: 0:00:00.0, real: 0:00:00.0, peak mem: 1466.5M)
Starting stripe generation ...
Non-Default Mode Option Settings :
  NONE
Completing 10% stripe generation(cpu: 0:00:00.0, real: 0:00:00.0, peak mem: 1466.5M)
Completing 20% stripe generation(cpu: 0:00:00.0, real: 0:00:00.0, peak mem: 1466.5M)
Completing 30% stripe generation(cpu: 0:00:00.0, real: 0:00:00.0, peak mem: 1466.5M)
Completing 40% stripe generation(cpu: 0:00:00.0, real: 0:00:00.0, peak mem: 1466.5M)
Completing 50% stripe generation(cpu: 0:00:00.0, real: 0:00:00.0, peak mem: 1466.5M)
Completing 60% stripe generation(cpu: 0:00:00.0, real: 0:00:00.0, peak mem: 1466.5M)
Completing 70% stripe generation(cpu: 0:00:00.0, real: 0:00:00.0, peak mem: 1466.5M)
Completing 80% stripe generation(cpu: 0:00:00.0, real: 0:00:00.0, peak mem: 1466.5M)
Completing 90% stripe generation(cpu: 0:00:00.0, real: 0:00:00.0, peak mem: 1466.5M)
Completing 100% stripe generation(cpu: 0:00:00.0, real: 0:00:00.0, peak mem: 1466.5M)
Stripe generation is complete.
vias are now being generated.
add_stripes created 31 wires.
ViaGen created 543 vias, deleted 0 via to avoid violation.
+--------+----------------+----------------+
|  Layer |     Created    |     Deleted    |
+--------+----------------+----------------+
| Metal8 |       31       |       NA       |
|  Via8  |       543      |        0       |
+--------+----------------+----------------+
#% End add_stripes (date=12/07 19:08:58, total cpu=0:00:00.0, real=0:00:00.0, peak res=1165.2M, current mem=1165.2M)
@file 44:
@@file 45: route_special \
    -connect {core_pin pad_pin} \
    -core_pin_target {first_after_row_end} \
     -pad_pin_target {nearest_target} \
    -nets {VDD VSS} \
    -allow_layer_change 1 \
    -pad_pin_layer_range {Metal1(1) Metal9(9)} 
#% Begin route_special (date=12/07 19:08:58, mem=1165.2M)
*** Begin SPECIAL ROUTE on Thu Dec  7 19:08:58 2023 ***
SPECIAL ROUTE ran on directory: /home/ebapinis/ECE_574_Proj/layout
SPECIAL ROUTE ran on machine: arc-schaumont-class-vm (Linux 3.10.0-1160.99.1.el7.x86_64 Xeon 2.39Ghz)

Begin option processing ...
srouteConnectPowerBump set to false
routeSelectNet set to "VDD VSS"
routeSpecial set to true
srouteConnectBlockPin set to false
srouteConnectConverterPin set to false
srouteConnectStripe set to false
srouteFollowCorePinEnd set to 3
srouteFollowPadPin set to false
srouteJogControl set to "preferWithChanges differentLayer"
srouteMaxPadPinLayer set to 9
srouteMinPadPinLayer set to 1
sroutePadPinAllPorts set to true
sroutePreserveExistingRoutes set to true
srouteRoutePowerBarPortOnBothDir set to true
End option processing: cpu: 0:00:00, real: 0:00:00, peak: 2848.00 megs.

Reading DB technology information...
Finished reading DB technology information.
Reading floorplan and netlist information...
Finished reading floorplan and netlist information.
**WARN: (IMPSR-4302):	Cap-table/qrcTechFile is found in the design, so the same information from the technology file will be ignored.
Read in 24 layers, 11 routing layers, 1 overlap layer
Read in 2 nondefault rules, 0 used
Read in 585 macros, 72 used
Read in 72 components
  72 core components: 72 unplaced, 0 placed, 0 fixed
Read in 30 physical pins
  30 physical pins: 0 unplaced, 0 placed, 30 fixed
Read in 30 nets
Read in 2 special nets, 2 routed
Read in 174 terminals
2 nets selected.

Begin power routing ...
**WARN: (IMPSR-1256):	Unable to find any CORE class pad pin of the VDD net due to unavailability of the pin or check netlist in the routing area or layer. Change routing area or layer to include the expected pin or check netlist. Alternatively, change port class in the technology file.
Type 'man IMPSR-1256' for more detail.
Cannot find any AREAIO class pad pin of net VDD. Check net list, or change port class in the technology file, or change option to include pin in given range.
**WARN: (IMPSR-1256):	Unable to find any CORE class pad pin of the VSS net due to unavailability of the pin or check netlist in the routing area or layer. Change routing area or layer to include the expected pin or check netlist. Alternatively, change port class in the technology file.
Type 'man IMPSR-1256' for more detail.
Cannot find any AREAIO class pad pin of net VSS. Check net list, or change port class in the technology file, or change option to include pin in given range.
CPU time for VDD FollowPin 0 seconds
CPU time for VSS FollowPin 0 seconds
  Number of IO ports routed: 0
  Number of Core ports routed: 368
  Number of Followpin connections: 184
End power routing: cpu: 0:00:01, real: 0:00:01, peak: 2853.00 megs.



 Begin updating DB with routing results ...
 Updating DB with 30 io pins ...
 Updating DB with 0 via definition ...Extracting standard cell pins and blockage ...... 
Pin and blockage extraction finished

route_special created 552 wires.
ViaGen created 22540 vias, deleted 0 via to avoid violation.
+--------+----------------+----------------+
|  Layer |     Created    |     Deleted    |
+--------+----------------+----------------+
| Metal1 |       552      |       NA       |
|  Via1  |      3220      |        0       |
|  Via2  |      3220      |        0       |
|  Via3  |      3220      |        0       |
|  Via4  |      3220      |        0       |
|  Via5  |      3220      |        0       |
|  Via6  |      3220      |        0       |
|  Via7  |      3220      |        0       |
+--------+----------------+----------------+
#% End route_special (date=12/07 19:09:00, total cpu=0:00:01.1, real=0:00:02.0, peak res=1192.2M, current mem=1176.8M)
@file 52:
@file 53:
@file 54: #-----------------------------------------------------------------------
@file 55: # Pre-placement timing check
@file 56: #-----------------------------------------------------------------------
@file 57:
@@file 58: check_timing
###############################################################
#  Generated by:      Cadence Innovus 21.18-s099_1
#  OS:                Linux x86_64(Host ID arc-schaumont-class-vm)
#  Generated on:      Thu Dec  7 19:09:00 2023
#  Design:            filter_top
#  Command:           check_timing
###############################################################
AAE_INFO: opIsDesignInPostRouteState() is 0
AAE DB initialization (MEM=1499.7 CPU=0:00:00.0 REAL=0:00:00.0) 
#################################################################################
# Design Stage: PreRoute
# Design Name: filter_top
# Design Mode: 45nm
# Analysis Mode: MMMC Non-OCV 
# Parasitics Mode: No SPEF/RCDB 
# Signoff Settings: SI Off 
#################################################################################
Calculate delays in Single mode...
Start delay calculation (fullDC) (1 T). (MEM=1573.57)
siFlow : Timing analysis mode is single, using late cdB files
Total number of fetched objects 31921
AAE_INFO: Total number of nets for which stage creation was skipped for all views 0
End delay calculation. (MEM=1711.16 CPU=0:00:03.0 REAL=0:00:03.0)
End delay calculation (fullDC). (MEM=1674.55 CPU=0:00:03.5 REAL=0:00:03.0)
    -------------------------------------------------------------------------------  
                                 TIMING CHECK SUMMARY                                
    -------------------------------------------------------------------------------  
     Warning                            Warning Description              Number of   
                                                                         Warnings    
    -------------------------------------------------------------------------------  
    clock_expected           Clock not found where clock is expected    65
    ideal_clock_waveform     Clock waveform is ideal                    1
    no_drive                 No drive assertion                         17
    uncons_endpoint          Unconstrained signal arriving at end point 2001
    -------------------------------------------------------------------------------
@@file 59: time_design -pre_place -report_prefix preplace -report_dir reports/STA
Info: The option -ignoreNetLoad is different with the value of internal variable, sync the option -ignoreNetLoad to true based on the value of internal variable.
*** time_design #1 [begin] : totSession cpu/real = 0:00:33.6/0:00:33.4 (1.0), mem = 1665.0M
Setting timing_disable_library_data_to_data_checks to 'true'.
Setting timing_disable_user_data_to_data_checks to 'true'.
**WARN: (IMPOPT-7319):	set_db delaycal_ignore_net_load true detected, reverting to false for non PrePlace flow
Set Using Default Delay Limit as 101.
**WARN: (IMPDC-1629):	The default delay limit was set to 101. This is less than the default of 1000 and may result in inaccurate delay calculation for nets with a fanout higher than the setting.  If needed, the default delay limit may be adjusted by running the command 'set delaycal_use_default_delay_limit'.
Setting High Fanout Nets ( > 100 ) as ideal temporarily for -prePlace option
Set Default Net Delay as 0 ps.
Set Default Net Load as 0 pF. 
Set Default Input Pin Transition as 1 ps.
Starting delay calculation for Setup views
AAE_INFO: opIsDesignInPostRouteState() is 0
AAE DB initialization (MEM=1766.96 CPU=0:00:00.0 REAL=0:00:00.0) 
#################################################################################
# Design Stage: PreRoute
# Design Name: filter_top
# Design Mode: 45nm
# Analysis Mode: MMMC Non-OCV 
# Parasitics Mode: No SPEF/RCDB 
# Signoff Settings: SI Off 
#################################################################################
Calculate delays in Single mode...
Start delay calculation (fullDC) (1 T). (MEM=1766.96)
siFlow : Timing analysis mode is single, using late cdB files
Total number of fetched objects 31921
AAE_INFO: Total number of nets for which stage creation was skipped for all views 0
End delay calculation. (MEM=1870.8 CPU=0:00:03.5 REAL=0:00:03.0)
End delay calculation (fullDC). (MEM=1834.18 CPU=0:00:04.1 REAL=0:00:04.0)
*** Done Building Timing Graph (cpu=0:00:04.7 real=0:00:05.0 totSessionCpu=0:00:39.3 mem=1834.2M)

------------------------------------------------------------------
         time_design Summary
------------------------------------------------------------------

Setup views included:
 func_default 

+--------------------+---------+---------+---------+
|     Setup mode     |   all   | reg2reg | default |
+--------------------+---------+---------+---------+
|           WNS (ns):|  0.927  |  0.927  |  1.959  |
|           TNS (ns):|  0.000  |  0.000  |  0.000  |
|    Violating Paths:|    0    |    0    |    0    |
|          All Paths:|  1189   |  1165   |   24    |
+--------------------+---------+---------+---------+

Density: 69.978%
------------------------------------------------------------------
Set Using Default Delay Limit as 1000.
Resetting back High Fanout Nets as non-ideal
Set Default Net Delay as 1000 ps.
Set Default Input Pin Transition as 0.1 ps.
Set Default Net Load as 0.5 pF. 
Reported timing to dir reports/STA
Total CPU time: 6.34 sec
Total Real time: 6.0 sec
Total Memory Usage: 1778.683594 Mbytes
*** time_design #1 [finish] : cpu/real = 0:00:06.2/0:00:06.2 (1.0), totSession cpu/real = 0:00:39.8/0:00:39.6 (1.0), mem = 1778.7M
@file 60:
@file 61: #-----------------------------------------------------------------------
@file 62: ## Placement and Pre CTS optimization
@file 63: #-----------------------------------------------------------------------
@file 64:
@@file 65: place_opt_design -report_dir reports/STA
**INFO: User settings:
delaycal_default_net_delay                     1000ps
delaycal_default_net_load                      0.5pf
delaycal_enable_high_fanout                    true
delaycal_ignore_net_load                       false
delaycal_input_transition_delay                0.1ps
delaycal_socv_accuracy_mode                    low
delaycal_use_default_delay_limit               1000
setAnalysisMode -cts                           preCTS
setDelayCalMode -engine                        aae
design_bottom_routing_layer                    Metal2
design_process_node                            45
extract_rc_coupling_cap_threshold              0.1
extract_rc_layer_independent                   1
extract_rc_relative_cap_threshold              1.0
extract_rc_total_cap_threshold                 0.0
place_global_reorder_scan                      false
getAnalysisMode -cts                           preCTS
getDelayCalMode -engine                        aae
get_power_analysis_mode -report_power_quiet    false
getAnalysisMode -cts                           preCTS
*** place_opt_design #1 [begin] : totSession cpu/real = 0:00:49.3/0:00:49.2 (1.0), mem = 1778.7M
No user sequential activity specified, applying default sequential activity of "0.2" for Dynamic Power reporting.
'set_default_switching_activity' finished successfully.
*** Starting GigaPlace ***
#optDebug: fT-E <X 2 3 1 0>
*** GlobalPlace #1 [begin] (place_opt_design #1) : totSession cpu/real = 0:00:49.5/0:00:49.3 (1.0), mem = 1794.7M
**ERROR: (IMPSP-9099):	Scan chains exist in this design but are not defined for 14.86% flops. Placement and timing QoR can be severely impacted in this case!
It is highly recommend to define scan chains either through input scan def (preferred) or create_scan_chain.
Extracting standard cell pins and blockage ...... 
Pin and blockage extraction finished
*** Start delete_buffer_trees ***
Info: Detect buffers to remove automatically.
Analyzing netlist ...
Updating netlist

*summary: 55 instances (buffers/inverters) removed
*** Finish delete_buffer_trees (0:00:01.1) ***
Effort level <high> specified for tdgp_reg2reg_default path_group
Deleted 0 physical inst  (cell - / prefix -).
INFO: #ExclusiveGroups=0
INFO: There are no Exclusive Groups.
No user-set net weight.
Net fanout histogram:
2		: 27042 (85.1%) nets
3		: 2182 (6.9%) nets
4     -	14	: 2237 (7.0%) nets
15    -	39	: 294 (0.9%) nets
40    -	79	: 3 (0.0%) nets
80    -	159	: 4 (0.0%) nets
160   -	319	: 1 (0.0%) nets
320   -	639	: 5 (0.0%) nets
640   -	1279	: 9 (0.0%) nets
1280  -	2559	: 0 (0.0%) nets
2560  -	5119	: 0 (0.0%) nets
5120+		: 0 (0.0%) nets
Options: timingDriven clkGateAware ignoreScan pinGuide congEffort=auto gpeffort=medium 
Scan chains were not defined.
#std cell=23516 (0 fixed + 23516 movable) #buf cell=0 #inv cell=691 #block=0 (0 floating + 0 preplaced)
#ioInst=0 #net=31777 #term=91625 #term/net=2.88, #fixedIo=30, #floatIo=0, #fixedPin=30, #floatPin=0
stdCell: 23516 single + 0 double + 0 multi
Total standard cell length = 40.1672 (mm), area = 0.0687 (mm^2)
Average module density = 0.699.
Density for the design = 0.699.
       = stdcell_area 200836 sites (68686 um^2) / alloc_area 287493 sites (98323 um^2).
Pin Density = 0.3187.
            = total # of pins 91625 / total area 287493.
=== lastAutoLevel = 9 
Clock gating cells determined by native netlist tracing.
Iteration  1: Total net bbox = 2.314e+04 (8.77e+03 1.44e+04)
              Est.  stn bbox = 2.797e+04 (1.12e+04 1.68e+04)
              cpu = 0:00:00.1 real = 0:00:00.0 mem = 1884.9M
Iteration  2: Total net bbox = 2.314e+04 (8.77e+03 1.44e+04)
              Est.  stn bbox = 2.797e+04 (1.12e+04 1.68e+04)
              cpu = 0:00:00.0 real = 0:00:00.0 mem = 1884.9M
*** Finished SKP initialization (cpu=0:00:03.6, real=0:00:04.0)***
Iteration  3: Total net bbox = 2.286e+04 (1.11e+04 1.18e+04)
              Est.  stn bbox = 2.911e+04 (1.43e+04 1.48e+04)
              cpu = 0:00:04.9 real = 0:00:05.0 mem = 2094.7M
Iteration  4: Total net bbox = 1.598e+05 (7.78e+04 8.20e+04)
              Est.  stn bbox = 2.165e+05 (1.06e+05 1.10e+05)
              cpu = 0:00:07.1 real = 0:00:07.0 mem = 2150.8M
Iteration  5: Total net bbox = 1.598e+05 (7.78e+04 8.20e+04)
              Est.  stn bbox = 2.165e+05 (1.06e+05 1.10e+05)
              cpu = 0:00:00.0 real = 0:00:00.0 mem = 2150.8M
Iteration  6: Total net bbox = 2.170e+05 (1.07e+05 1.10e+05)
              Est.  stn bbox = 2.843e+05 (1.41e+05 1.43e+05)
              cpu = 0:00:05.9 real = 0:00:06.0 mem = 2097.8M

Iteration  7: Total net bbox = 2.311e+05 (1.20e+05 1.11e+05)
              Est.  stn bbox = 2.990e+05 (1.55e+05 1.44e+05)
              cpu = 0:00:00.6 real = 0:00:01.0 mem = 2100.1M
Iteration  8: Total net bbox = 2.311e+05 (1.20e+05 1.11e+05)
              Est.  stn bbox = 2.990e+05 (1.55e+05 1.44e+05)
              cpu = 0:00:00.0 real = 0:00:00.0 mem = 2100.1M
Iteration  9: Total net bbox = 2.538e+05 (1.31e+05 1.23e+05)
              Est.  stn bbox = 3.260e+05 (1.68e+05 1.58e+05)
              cpu = 0:00:06.6 real = 0:00:06.0 mem = 2092.8M
Iteration 10: Total net bbox = 2.538e+05 (1.31e+05 1.23e+05)
              Est.  stn bbox = 3.260e+05 (1.68e+05 1.58e+05)
              cpu = 0:00:00.0 real = 0:00:01.0 mem = 2092.8M
Iteration 11: Total net bbox = 2.599e+05 (1.34e+05 1.26e+05)
              Est.  stn bbox = 3.321e+05 (1.71e+05 1.61e+05)
              cpu = 0:00:03.3 real = 0:00:03.0 mem = 2098.6M
Iteration 12: Total net bbox = 2.599e+05 (1.34e+05 1.26e+05)
              Est.  stn bbox = 3.321e+05 (1.71e+05 1.61e+05)
              cpu = 0:00:00.0 real = 0:00:00.0 mem = 2098.6M
Iteration 13: Total net bbox = 2.680e+05 (1.37e+05 1.31e+05)
              Est.  stn bbox = 3.371e+05 (1.72e+05 1.65e+05)
              cpu = 0:00:10.5 real = 0:00:10.0 mem = 2109.6M
Iteration 14: Total net bbox = 2.680e+05 (1.37e+05 1.31e+05)
              Est.  stn bbox = 3.371e+05 (1.72e+05 1.65e+05)
              cpu = 0:00:00.0 real = 0:00:00.0 mem = 2109.6M
Finished Global Placement (cpu=0:00:39.3, real=0:00:40.0, mem=2109.6M)
Keep Tdgp Graph and DB for later use
Info: 0 clock gating cells identified, 0 (on average) moved 0/7
*** Starting place_detail (0:01:31 mem=2109.6M) ***
Total net bbox length = 2.680e+05 (1.371e+05 1.309e+05) (ext = 2.246e+03)
Move report: Detail placement moves 23516 insts, mean move: 0.87 um, max move: 18.28 um 
	Max move on inst (fir_filter/g877101): (59.21, 150.10) --> (51.20, 139.84)
	Runtime: CPU: 0:00:03.1 REAL: 0:00:03.0 MEM: 2077.6MB
Summary Report:
Instances move: 23516 (out of 23516 movable)
Instances flipped: 0
Mean displacement: 0.87 um
Max displacement: 18.28 um (Instance: fir_filter/g877101) (59.2145, 150.101) -> (51.2, 139.84)
	Length: 3 sites, height: 1 rows, site name: CoreSite, cell type: NOR2X1
Total net bbox length = 2.664e+05 (1.359e+05 1.305e+05) (ext = 2.241e+03)
Runtime: CPU: 0:00:03.1 REAL: 0:00:03.0 MEM: 2077.6MB
*** Finished place_detail (0:01:34 mem=2077.6M) ***
*** Finished Initial Placement (cpu=0:00:42.8, real=0:00:44.0, mem=2029.6M) ***
UM:   flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:*                                                                   final
      flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:*                                                                   global_place
Effort level <high> specified for tdgp_reg2reg_default path_group

*** Start incrementalPlace ***
No Views given, use default active views for adaptive view pruning
SKP will enable view:
  func_default
[NR-eGR] Track table information for default rule: 
[NR-eGR] Metal1 has single uniform track structure
[NR-eGR] Metal2 has single uniform track structure
[NR-eGR] Metal3 has single uniform track structure
[NR-eGR] Metal4 has single uniform track structure
[NR-eGR] Metal5 has single uniform track structure
[NR-eGR] Metal6 has single uniform track structure
[NR-eGR] Metal7 has single uniform track structure
[NR-eGR] Metal8 has single uniform track structure
[NR-eGR] Metal9 has single uniform track structure
[NR-eGR] Metal10 has single uniform track structure
[NR-eGR] Metal11 has single uniform track structure
[NR-eGR] Read 43156 PG shapes
[NR-eGR] Read 0 clock shapes
[NR-eGR] Read 0 other shapes
[NR-eGR] #Routing Blockages  : 0
[NR-eGR] #Instance Blockages : 0
[NR-eGR] #PG Blockages       : 43156
[NR-eGR] #Halo Blockages     : 0
[NR-eGR] #Boundary Blockages : 0
[NR-eGR] #Clock Blockages    : 0
[NR-eGR] #Other Blockages    : 0
[NR-eGR] Num Prerouted Nets = 0  Num Prerouted Wires = 0
[NR-eGR] Read 31777 nets ( ignored 0 )
[NR-eGR] There are 1 clock nets ( 0 with NDR ).
[NR-eGR] ============ Routing rule table ============
[NR-eGR] Rule id: 0  Nets: 31777
[NR-eGR] ========================================
[NR-eGR] 
[NR-eGR] Layer group 1: route 31777 net(s) in layer range [2, 11]
[NR-eGR] Early Global Route overflow of layer group 1: 0.00% H + 0.00% V. EstWL: 3.411330e+05um
[NR-eGR] Congestion Analysis By layer: (blocked Gcells are excluded) 
[NR-eGR]                        OverCon            
[NR-eGR]                         #Gcell     %Gcell
[NR-eGR]        Layer               (1)    OverCon
[NR-eGR] ----------------------------------------------
[NR-eGR]  Metal1 ( 1)         0( 0.00%)   ( 0.00%) 
[NR-eGR]  Metal2 ( 2)         5( 0.01%)   ( 0.01%) 
[NR-eGR]  Metal3 ( 3)         0( 0.00%)   ( 0.00%) 
[NR-eGR]  Metal4 ( 4)         0( 0.00%)   ( 0.00%) 
[NR-eGR]  Metal5 ( 5)         0( 0.00%)   ( 0.00%) 
[NR-eGR]  Metal6 ( 6)         0( 0.00%)   ( 0.00%) 
[NR-eGR]  Metal7 ( 7)         0( 0.00%)   ( 0.00%) 
[NR-eGR]  Metal8 ( 8)         0( 0.00%)   ( 0.00%) 
[NR-eGR]  Metal9 ( 9)         0( 0.00%)   ( 0.00%) 
[NR-eGR] Metal10 (10)         0( 0.00%)   ( 0.00%) 
[NR-eGR] Metal11 (11)         0( 0.00%)   ( 0.00%) 
[NR-eGR] ----------------------------------------------
[NR-eGR]        Total         5( 0.00%)   ( 0.00%) 
[NR-eGR] 
[NR-eGR] Overflow after Early Global Route 0.00% H + 0.00% V
Early Global Route congestion estimation runtime: 0.80 seconds, mem = 2074.3M
Local HotSpot Analysis: normalized max congestion hotspot area = 0.00, normalized total congestion hotspot area = 0.00 (area is in unit of 4 std-cell row bins)
Skipped repairing congestion.
[NR-eGR]                  Length (um)    Vias 
[NR-eGR] -------------------------------------
[NR-eGR]  Metal1   (1H)             0   91595 
[NR-eGR]  Metal2   (2V)        135088  130004 
[NR-eGR]  Metal3   (3H)        163850    9933 
[NR-eGR]  Metal4   (4V)         47401    1896 
[NR-eGR]  Metal5   (5H)         16561      87 
[NR-eGR]  Metal6   (6V)          1979       2 
[NR-eGR]  Metal7   (7H)           124       0 
[NR-eGR]  Metal8   (8V)             0       0 
[NR-eGR]  Metal9   (9H)             0       0 
[NR-eGR]  Metal10  (10V)            0       0 
[NR-eGR]  Metal11  (11H)            0       0 
[NR-eGR] -------------------------------------
[NR-eGR]           Total       365003  233517 
[NR-eGR] --------------------------------------------------------------------------
[NR-eGR] Total half perimeter of net bounding box: 266450um
[NR-eGR] Total length: 365003um, number of vias: 233517
[NR-eGR] --------------------------------------------------------------------------
[NR-eGR] Total eGR-routed clock nets wire length: 4325um, number of vias: 3200
[NR-eGR] --------------------------------------------------------------------------
Early Global Route wiring runtime: 0.50 seconds, mem = 2091.3M
0 delay mode for cte disabled.

*** Finished incrementalPlace (cpu=0:00:01.1, real=0:00:01.0)***
**ERROR: (IMPSP-9099):	Scan chains exist in this design but are not defined for 14.86% flops. Placement and timing QoR can be severely impacted in this case!
It is highly recommend to define scan chains either through input scan def (preferred) or create_scan_chain.
***** Total cpu  0:0:46
***** Total real time  0:0:47
Tdgp not successfully inited but do clear! skip clearing
**place_design ... cpu = 0: 0:46, real = 0: 0:47, mem = 2007.3M **
      flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:*                                                                   final
UM: Running design category ...
------------------------------------------------------------
	Current design flip-flop statistics

Single-Bit FF Count          :         1198
Multi-Bit FF Count           :            0
Total Bit Count              :         1198
Total FF Count               :         1198
Bits Per Flop                :        1.000
Total Clock Pin Cap(FF)      :      352.216
Multibit Conversion Ratio(%) :         0.00
------------------------------------------------------------
------------------------------------------------------------
            Multi-bit cell usage statistics

------------------------------------------------------------
============================================================
Sequential Multibit cells usage statistics
------------------------------------------------------------
            Not Merged-bits         Merged-bits     Multibit Conversion %     Bits Per Flop
------------------------------------------------------------
-FlipFlops             1198                    0        0.00                    1.00
------------------------------------------------------------

------------------------------------------------------------
Seq_Mbit libcell              Bitwidth        Count
------------------------------------------------------------
Total 0
============================================================
------------------------------------------------------------
Category            Num of Insts Rejected     Reasons
------------------------------------------------------------
------------------------------------------------------------
      flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:           96.1             99                                      place_design
*** GlobalPlace #1 [finish] (place_opt_design #1) : cpu/real = 0:00:46.7/0:00:48.3 (1.0), totSession cpu/real = 0:01:36.1/0:01:37.6 (1.0), mem = 2007.3M
Enable CTE adjustment.
**opt_design ... cpu = 0:00:00, real = 0:00:00, mem = 1435.5M, totSessionCpu=0:01:36 **
GigaOpt running with 1 threads.
*** InitOpt #1 [begin] (place_opt_design #1) : totSession cpu/real = 0:01:36.2/0:01:37.6 (1.0), mem = 2007.3M
**INFO: set_db design_flow_effort standard -> setting 'set_db opt_all_end_points true' for the duration of this command.
Updating RC grid for preRoute extraction ...
Initializing multi-corner resistance tables ...
**opt_design ... cpu = 0:00:01, real = 0:00:01, mem = 1443.9M, totSessionCpu=0:01:37 **
*** opt_design -pre_cts ***
DRC Margin: user margin 0.0; extra margin 0.2
Setup Target Slack: user slack 0; extra slack 0.0
Hold Target Slack: user slack 0
Multi-VT timing optimization disabled based on library information.
[NR-eGR] Started Early Global Route kernel ( Curr Mem: 2015.31 MB )
[NR-eGR] Track table information for default rule: 
[NR-eGR] Metal1 has single uniform track structure
[NR-eGR] Metal2 has single uniform track structure
[NR-eGR] Metal3 has single uniform track structure
[NR-eGR] Metal4 has single uniform track structure
[NR-eGR] Metal5 has single uniform track structure
[NR-eGR] Metal6 has single uniform track structure
[NR-eGR] Metal7 has single uniform track structure
[NR-eGR] Metal8 has single uniform track structure
[NR-eGR] Metal9 has single uniform track structure
[NR-eGR] Metal10 has single uniform track structure
[NR-eGR] Metal11 has single uniform track structure
[NR-eGR] Read 43156 PG shapes
[NR-eGR] Read 0 clock shapes
[NR-eGR] Read 0 other shapes
[NR-eGR] #Routing Blockages  : 0
[NR-eGR] #Instance Blockages : 0
[NR-eGR] #PG Blockages       : 43156
[NR-eGR] #Halo Blockages     : 0
[NR-eGR] #Boundary Blockages : 0
[NR-eGR] #Clock Blockages    : 0
[NR-eGR] #Other Blockages    : 0
[NR-eGR] Num Prerouted Nets = 0  Num Prerouted Wires = 0
[NR-eGR] Read 31777 nets ( ignored 0 )
[NR-eGR] There are 1 clock nets ( 0 with NDR ).
[NR-eGR] ============ Routing rule table ============
[NR-eGR] Rule id: 0  Nets: 31777
[NR-eGR] ========================================
[NR-eGR] 
[NR-eGR] Layer group 1: route 31777 net(s) in layer range [2, 11]
[NR-eGR] Early Global Route overflow of layer group 1: 0.00% H + 0.00% V. EstWL: 3.467333e+05um
[NR-eGR] Congestion Analysis By layer: (blocked Gcells are excluded) 
[NR-eGR]                        OverCon            
[NR-eGR]                         #Gcell     %Gcell
[NR-eGR]        Layer               (1)    OverCon
[NR-eGR] ----------------------------------------------
[NR-eGR]  Metal1 ( 1)         0( 0.00%)   ( 0.00%) 
[NR-eGR]  Metal2 ( 2)        10( 0.02%)   ( 0.02%) 
[NR-eGR]  Metal3 ( 3)         0( 0.00%)   ( 0.00%) 
[NR-eGR]  Metal4 ( 4)         0( 0.00%)   ( 0.00%) 
[NR-eGR]  Metal5 ( 5)         0( 0.00%)   ( 0.00%) 
[NR-eGR]  Metal6 ( 6)         0( 0.00%)   ( 0.00%) 
[NR-eGR]  Metal7 ( 7)         0( 0.00%)   ( 0.00%) 
[NR-eGR]  Metal8 ( 8)         0( 0.00%)   ( 0.00%) 
[NR-eGR]  Metal9 ( 9)         0( 0.00%)   ( 0.00%) 
[NR-eGR] Metal10 (10)         0( 0.00%)   ( 0.00%) 
[NR-eGR] Metal11 (11)         0( 0.00%)   ( 0.00%) 
[NR-eGR] ----------------------------------------------
[NR-eGR]        Total        10( 0.00%)   ( 0.00%) 
[NR-eGR] 
[NR-eGR] Overflow after Early Global Route 0.00% H + 0.00% V
[NR-eGR]                  Length (um)    Vias 
[NR-eGR] -------------------------------------
[NR-eGR]  Metal1   (1H)             0   91595 
[NR-eGR]  Metal2   (2V)        136095  129725 
[NR-eGR]  Metal3   (3H)        166104    9965 
[NR-eGR]  Metal4   (4V)         48826    2017 
[NR-eGR]  Metal5   (5H)         17294     104 
[NR-eGR]  Metal6   (6V)          2442       0 
[NR-eGR]  Metal7   (7H)             0       0 
[NR-eGR]  Metal8   (8V)             0       0 
[NR-eGR]  Metal9   (9H)             0       0 
[NR-eGR]  Metal10  (10V)            0       0 
[NR-eGR]  Metal11  (11H)            0       0 
[NR-eGR] -------------------------------------
[NR-eGR]           Total       370761  233406 
[NR-eGR] --------------------------------------------------------------------------
[NR-eGR] Total half perimeter of net bounding box: 266450um
[NR-eGR] Total length: 370761um, number of vias: 233406
[NR-eGR] --------------------------------------------------------------------------
[NR-eGR] Total eGR-routed clock nets wire length: 4519um, number of vias: 3226
[NR-eGR] --------------------------------------------------------------------------
[NR-eGR] Finished Early Global Route kernel ( CPU: 1.01 sec, Real: 1.32 sec, Curr Mem: 2027.95 MB )
Extraction called for design 'filter_top' of instances=23516 and nets=31941 using extraction engine 'pre_route' .
pre_route RC Extraction called for design filter_top.
RC Extraction called in multi-corner(1) mode.
RCMode: PreRoute
      RC Corner Indexes            0   
Capacitance Scaling Factor   : 1.00000 
Resistance Scaling Factor    : 1.00000 
Clock Cap. Scaling Factor    : 1.00000 
Clock Res. Scaling Factor    : 1.00000 
Shrink Factor                : 1.00000
PreRoute extraction is honoring NDR/Shielding/ExtraSpace for clock nets.
Using Quantus QRC technology file ...
Updating RC grid for preRoute extraction ...
Initializing multi-corner resistance tables ...
PreRoute RC Extraction DONE (CPU Time: 0:00:00.2  Real Time: 0:00:00.0  MEM: 2012.953M)
Starting delay calculation for Setup views
AAE_INFO: opIsDesignInPostRouteState() is 0
#################################################################################
# Design Stage: PreRoute
# Design Name: filter_top
# Design Mode: 45nm
# Analysis Mode: MMMC Non-OCV 
# Parasitics Mode: No SPEF/RCDB 
# Signoff Settings: SI Off 
#################################################################################
Calculate delays in Single mode...
Start delay calculation (fullDC) (1 T). (MEM=2023.25)
Total number of fetched objects 31871
AAE_INFO: Total number of nets for which stage creation was skipped for all views 0
End delay calculation. (MEM=2054.98 CPU=0:00:03.6 REAL=0:00:03.0)
End delay calculation (fullDC). (MEM=2054.98 CPU=0:00:04.3 REAL=0:00:04.0)
*** Done Building Timing Graph (cpu=0:00:05.4 real=0:00:06.0 totSessionCpu=0:01:44 mem=2055.0M)

------------------------------------------------------------------
             Initial Summary
------------------------------------------------------------------

Setup views included:
 func_default 

+--------------------+---------+
|     Setup mode     |   all   |
+--------------------+---------+
|           WNS (ns):| -2.272  |
|           TNS (ns):| -1054.1 |
|    Violating Paths:|   621   |
|          All Paths:|  1189   |
+--------------------+---------+

+----------------+-------------------------------+------------------+
|                |              Real             |       Total      |
|    DRVs        +------------------+------------+------------------|
|                |  Nr nets(terms)  | Worst Vio  |  Nr nets(terms)  |
+----------------+------------------+------------+------------------+
|   max_cap      |     14 (14)      |   -1.053   |     14 (14)      |
|   max_tran     |   2093 (11867)   |   -3.871   |   2093 (13093)   |
|   max_fanout   |      0 (0)       |     0      |      0 (0)       |
|   max_length   |      0 (0)       |     0      |      0 (0)       |
+----------------+------------------+------------+------------------+

Density: 69.858%
------------------------------------------------------------------
**opt_design ... cpu = 0:00:09, real = 0:00:09, mem = 1483.1M, totSessionCpu=0:01:45 **
*** InitOpt #1 [finish] (place_opt_design #1) : cpu/real = 0:00:08.6/0:00:09.0 (1.0), totSession cpu/real = 0:01:44.8/0:01:46.6 (1.0), mem = 2024.0M
** INFO : this run is activating medium effort placeOptDesign flow
*** Starting optimizing excluded clock nets MEM= 2024.0M) ***
*info: No excluded clock nets to be optimized.
*** Finished optimizing excluded clock nets (CPU Time= 0:00:00.0  MEM= 2024.0M) ***
GigaOpt Checkpoint: Internal congRefineRouteType -preCTS -congThreshold 0.001 -rescheduleForCongestion  -aggressiveCongestionMode  -resetVeryShortNets -resetShortNets -useSpineBased -rescheduleForAdherence 
Begin: GigaOpt Route Type Constraints Refinement
*** CongRefineRouteType #1 [begin] (place_opt_design #1) : totSession cpu/real = 0:01:45.1/0:01:46.9 (1.0), mem = 2024.0M
Updated routing constraints on 0 nets.
Bottom Preferred Layer:
    None
Via Pillar Rule:
    None
*** CongRefineRouteType #1 [finish] (place_opt_design #1) : cpu/real = 0:00:00.2/0:00:00.2 (1.0), totSession cpu/real = 0:01:45.3/0:01:47.1 (1.0), mem = 2220.9M
End: GigaOpt Route Type Constraints Refinement
The useful skew maximum allowed delay is: 0.3
*** SimplifyNetlist #1 [begin] (place_opt_design #1) : totSession cpu/real = 0:01:45.9/0:01:47.7 (1.0), mem = 2220.9M
Info: 1 clock net  excluded from IPO operation.

Footprint cell information for calculating maxBufDist
*info: There are 14 candidate Buffer cells
*info: There are 14 candidate Inverter cells


Netlist preparation processing... 
Removed 0 instance
*info: Marking 0 isolation instances dont touch
*info: Marking 0 level shifter instances dont touch
*** SimplifyNetlist #1 [finish] (place_opt_design #1) : cpu/real = 0:00:01.6/0:00:01.6 (1.0), totSession cpu/real = 0:01:47.4/0:01:49.2 (1.0), mem = 2143.9M
Begin: GigaOpt high fanout net optimization
GigaOpt HFN: use maxLocalDensity 1.2
GigaOpt Checkpoint: Internal optDRV -useLevelizedBufferTreeOnly -auxMaxFanoutCountLimit 500 -largeScaleFixing -maxIter 1 -maxLocalDensity 1.2 -numThreads 1 -preCTS -preRouteDontEndWithRefinePlaceIncrSteinerRouteDC
*** DrvOpt #1 [begin] (place_opt_design #1) : totSession cpu/real = 0:01:47.7/0:01:49.5 (1.0), mem = 2143.9M
Info: 1 clock net  excluded from IPO operation.
+---------+---------+--------+---------+------------+--------+
| Density | Commits |  WNS   |   TNS   |    Real    |  Mem   |
+---------+---------+--------+---------+------------+--------+
|   69.86%|        -|  -2.272|-1054.081|   0:00:00.0| 2201.2M|
|   70.68%|      264|   0.000|    0.000|   0:00:03.0| 2249.8M|
+---------+---------+--------+---------+------------+--------+

*** Finish pre-CTS High Fanout Net Fixing (cpu=0:00:03.3 real=0:00:03.0 mem=2249.8M) ***
Bottom Preferred Layer:
    None
Via Pillar Rule:
    None
*** DrvOpt #1 [finish] (place_opt_design #1) : cpu/real = 0:00:05.0/0:00:05.0 (1.0), totSession cpu/real = 0:01:52.7/0:01:54.5 (1.0), mem = 2164.7M
GigaOpt HFN: restore maxLocalDensity to 0.98
End: GigaOpt high fanout net optimization
Begin: GigaOpt DRV Optimization
GigaOpt Checkpoint: Internal optDRV -max_tran -max_cap -maxLocalDensity 1.2 -numThreads 1 -largeScaleFixing -maxIter 2 -preCTS -preRouteDontEndWithRefinePlaceIncrSteinerRouteDC
*** DrvOpt #2 [begin] (place_opt_design #1) : totSession cpu/real = 0:01:52.7/0:01:54.5 (1.0), mem = 2164.7M
Info: 1 clock net  excluded from IPO operation.
+-------------------------------------------------------------------------------------------------------------------------------------------------------+
|        max-tran       |        max-cap        |  max-fanout |  max-length |       setup       |        |        |        |       |          |         |
+-------------------------------------------------------------------------------------------------------------------------------------------------------+
| nets | terms|  wViol  | nets | terms|  wViol  | nets | terms| nets | terms|   WNS   |   TNS   |  #Buf  |  #Inv  | #Resize|Density|   Real   |   Mem   |
+-------------------------------------------------------------------------------------------------------------------------------------------------------+
|   166|  2371|    -1.11|     3|     3|    -0.11|     0|     0|     0|     0|     0.22|     0.00|       0|       0|       0| 70.68%|          |         |
|     0|     0|     0.00|     0|     0|     0.00|     0|     0|     0|     0|     0.60|     0.00|      41|       6|      12| 70.77%| 0:00:02.0|  2261.6M|
|     0|     0|     0.00|     0|     0|     0.00|     0|     0|     0|     0|     0.60|     0.00|       0|       0|       0| 70.77%| 0:00:00.0|  2261.6M|
+-------------------------------------------------------------------------------------------------------------------------------------------------------+
Bottom Preferred Layer:
    None
Via Pillar Rule:
    None

*** Finish DRV Fixing (cpu=0:00:02.2 real=0:00:02.0 mem=2261.6M) ***

*** DrvOpt #2 [finish] (place_opt_design #1) : cpu/real = 0:00:03.2/0:00:03.2 (1.0), totSession cpu/real = 0:01:55.8/0:01:57.7 (1.0), mem = 2168.6M
End: GigaOpt DRV Optimization
GigaOpt DRV: restore maxLocalDensity to 0.98
**opt_design ... cpu = 0:00:20, real = 0:00:20, mem = 1608.9M, totSessionCpu=0:01:56 **

Active setup views:
 func_default
  Dominating endpoints: 0
  Dominating TNS: -0.000

Begin: GigaOpt Global Optimization
*info: use new DP (enabled)
GigaOpt Checkpoint: Internal globalOpt -maxLocalDensity 1.2 -numThreads 1 -preCTS -rebufferAll -preRouteDontEndWithRefinePlaceIncrSteinerRouteDC -enableHighLayerOpt -maxIter 50 -maxIterForLEPG 50
Info: 1 clock net  excluded from IPO operation.
*** GlobalOpt #1 [begin] (place_opt_design #1) : totSession cpu/real = 0:01:56.1/0:01:57.9 (1.0), mem = 2206.7M
*info: 1 clock net excluded
*info: 68 no-driver nets excluded.
** GigaOpt Global Opt WNS Slack 0.000  TNS Slack 0.000 
+--------+--------+---------+------------+--------+------------+---------+------------------------------------------+
|  WNS   |  TNS   | Density |    Real    |  Mem   | Worst View |Pathgroup|                End Point                 |
+--------+--------+---------+------------+--------+------------+---------+------------------------------------------+
|   0.000|   0.000|   70.77%|   0:00:00.0| 2225.8M|func_default|       NA| NA                                       |
+--------+--------+---------+------------+--------+------------+---------+------------------------------------------+

*** Finish pre-CTS Global Setup Fixing (cpu=0:00:00.0 real=0:00:00.0 mem=2225.8M) ***

*** Finish pre-CTS Setup Fixing (cpu=0:00:00.0 real=0:00:00.0 mem=2225.8M) ***
Bottom Preferred Layer:
    None
Via Pillar Rule:
    None
** GigaOpt Global Opt End WNS Slack 0.000  TNS Slack 0.000 
*** GlobalOpt #1 [finish] (place_opt_design #1) : cpu/real = 0:00:01.6/0:00:01.5 (1.0), totSession cpu/real = 0:01:57.7/0:01:59.5 (1.0), mem = 2166.7M
End: GigaOpt Global Optimization
*** Timing Is met
*** Check timing (0:00:00.0)
GigaOpt Checkpoint: Internal reclaim -numThreads 1 -preCTS -force -doRemoveUselessTerm -tgtSlackMult 3 -routeType -noRouteTypeResizePolish -noViewPrune -weedwhack -nonLegal -nativePathGroupFlow
Info: 1 clock net  excluded from IPO operation.
Begin: Area Reclaim Optimization
*** AreaOpt #1 [begin] (place_opt_design #1) : totSession cpu/real = 0:01:57.9/0:01:59.7 (1.0), mem = 2224.0M
Reclaim Optimization WNS Slack 0.000  TNS Slack 0.000 Density 70.77
+---------+---------+--------+--------+------------+--------+
| Density | Commits |  WNS   |  TNS   |    Real    |  Mem   |
+---------+---------+--------+--------+------------+--------+
|   70.77%|        -|   0.000|   0.000|   0:00:00.0| 2226.0M|
|   70.77%|        0|   0.000|   0.000|   0:00:01.0| 2227.0M|
|   70.77%|        0|   0.000|   0.000|   0:00:00.0| 2227.0M|
|   70.73%|        5|   0.000|   0.000|   0:00:01.0| 2251.6M|
|   70.18%|      266|   0.000|   0.000|   0:00:05.0| 2258.6M|
|   70.17%|       28|   0.000|   0.000|   0:00:01.0| 2258.6M|
|   70.17%|        0|   0.000|   0.000|   0:00:00.0| 2258.6M|
|   70.17%|        0|   0.000|   0.000|   0:00:00.0| 2258.6M|
+---------+---------+--------+--------+------------+--------+
Reclaim Optimization End WNS Slack 0.000  TNS Slack 0.000 Density 70.17
Bottom Preferred Layer:
    None
Via Pillar Rule:
    None

Number of times islegalLocAvaiable called = 0 skipped = 0, called in commitmove = 0, skipped in commitmove = 0
End: Core Area Reclaim Optimization (cpu = 0:00:09.1) (real = 0:00:09.0) **
*** AreaOpt #1 [finish] (place_opt_design #1) : cpu/real = 0:00:09.1/0:00:09.1 (1.0), totSession cpu/real = 0:02:07.0/0:02:08.8 (1.0), mem = 2258.6M
Executing incremental physical updates
Executing incremental physical updates
End: Area Reclaim Optimization (cpu=0:00:09, real=0:00:09, mem=2172.49M, totSessionCpu=0:02:07).
*** IncrReplace #1 [begin] (place_opt_design #1) : totSession cpu/real = 0:02:07.5/0:02:09.2 (1.0), mem = 2172.5M

*** Start incrementalPlace ***
No Views given, use default active views for adaptive view pruning
SKP will enable view:
  func_default
[NR-eGR] Track table information for default rule: 
[NR-eGR] Metal1 has single uniform track structure
[NR-eGR] Metal2 has single uniform track structure
[NR-eGR] Metal3 has single uniform track structure
[NR-eGR] Metal4 has single uniform track structure
[NR-eGR] Metal5 has single uniform track structure
[NR-eGR] Metal6 has single uniform track structure
[NR-eGR] Metal7 has single uniform track structure
[NR-eGR] Metal8 has single uniform track structure
[NR-eGR] Metal9 has single uniform track structure
[NR-eGR] Metal10 has single uniform track structure
[NR-eGR] Metal11 has single uniform track structure
[NR-eGR] Read 43156 PG shapes
[NR-eGR] Read 0 clock shapes
[NR-eGR] Read 0 other shapes
[NR-eGR] #Routing Blockages  : 0
[NR-eGR] #Instance Blockages : 0
[NR-eGR] #PG Blockages       : 43156
[NR-eGR] #Halo Blockages     : 0
[NR-eGR] #Boundary Blockages : 0
[NR-eGR] #Clock Blockages    : 0
[NR-eGR] #Other Blockages    : 0
[NR-eGR] Num Prerouted Nets = 0  Num Prerouted Wires = 0
[NR-eGR] Read 32075 nets ( ignored 0 )
[NR-eGR] There are 1 clock nets ( 0 with NDR ).
[NR-eGR] ============ Routing rule table ============
[NR-eGR] Rule id: 0  Nets: 32075
[NR-eGR] ========================================
[NR-eGR] 
[NR-eGR] Layer group 1: route 32075 net(s) in layer range [2, 11]
[NR-eGR] Early Global Route overflow of layer group 1: 0.00% H + 0.00% V. EstWL: 3.570856e+05um
[NR-eGR] Congestion Analysis By layer: (blocked Gcells are excluded) 
[NR-eGR]                        OverCon            
[NR-eGR]                         #Gcell     %Gcell
[NR-eGR]        Layer             (1-2)    OverCon
[NR-eGR] ----------------------------------------------
[NR-eGR]  Metal1 ( 1)         0( 0.00%)   ( 0.00%) 
[NR-eGR]  Metal2 ( 2)        11( 0.03%)   ( 0.03%) 
[NR-eGR]  Metal3 ( 3)         0( 0.00%)   ( 0.00%) 
[NR-eGR]  Metal4 ( 4)         0( 0.00%)   ( 0.00%) 
[NR-eGR]  Metal5 ( 5)         0( 0.00%)   ( 0.00%) 
[NR-eGR]  Metal6 ( 6)         0( 0.00%)   ( 0.00%) 
[NR-eGR]  Metal7 ( 7)         0( 0.00%)   ( 0.00%) 
[NR-eGR]  Metal8 ( 8)         0( 0.00%)   ( 0.00%) 
[NR-eGR]  Metal9 ( 9)         0( 0.00%)   ( 0.00%) 
[NR-eGR] Metal10 (10)         0( 0.00%)   ( 0.00%) 
[NR-eGR] Metal11 (11)         0( 0.00%)   ( 0.00%) 
[NR-eGR] ----------------------------------------------
[NR-eGR]        Total        11( 0.00%)   ( 0.00%) 
[NR-eGR] 
[NR-eGR] Overflow after Early Global Route 0.00% H + 0.00% V
Early Global Route congestion estimation runtime: 0.78 seconds, mem = 2203.5M
Local HotSpot Analysis: normalized max congestion hotspot area = 0.00, normalized total congestion hotspot area = 0.00 (area is in unit of 4 std-cell row bins)

=== incrementalPlace Internal Loop 1 ===
*** Finished SKP initialization (cpu=0:00:02.0, real=0:00:02.0)***
Iteration  7: Total net bbox = 2.618e+05 (1.31e+05 1.31e+05)
              Est.  stn bbox = 3.473e+05 (1.74e+05 1.74e+05)
              cpu = 0:00:05.7 real = 0:00:06.0 mem = 2341.4M
Iteration  8: Total net bbox = 2.752e+05 (1.36e+05 1.39e+05)
              Est.  stn bbox = 3.608e+05 (1.79e+05 1.82e+05)
              cpu = 0:00:07.1 real = 0:00:07.0 mem = 2316.5M
Iteration  9: Total net bbox = 2.731e+05 (1.34e+05 1.39e+05)
              Est.  stn bbox = 3.574e+05 (1.77e+05 1.81e+05)
              cpu = 0:00:08.3 real = 0:00:09.0 mem = 2319.3M
Iteration 10: Total net bbox = 2.933e+05 (1.45e+05 1.48e+05)
              Est.  stn bbox = 3.771e+05 (1.87e+05 1.90e+05)
              cpu = 0:00:18.3 real = 0:00:18.0 mem = 2349.0M
Iteration 11: Total net bbox = 2.904e+05 (1.44e+05 1.46e+05)
              Est.  stn bbox = 3.737e+05 (1.86e+05 1.87e+05)
              cpu = 0:00:04.7 real = 0:00:04.0 mem = 2351.0M
Move report: Timing Driven Placement moves 23814 insts, mean move: 5.29 um, max move: 152.25 um 
	Max move on inst (fir_filter/FE_OFC31_FE_DBTN0_n_32): (32.20, 124.45) --> (104.07, 204.82)

Finished Incremental Placement (cpu=0:00:48.4, real=0:00:49.0, mem=2335.0M)
*** Starting place_detail (0:02:57 mem=2335.0M) ***
Total net bbox length = 3.027e+05 (1.546e+05 1.481e+05) (ext = 2.369e+03)
Move report: Detail placement moves 23814 insts, mean move: 0.50 um, max move: 49.53 um 
	Max move on inst (fir_filter/FE_OFC89_din_r_8): (164.42, 102.57) --> (213.60, 102.22)
	Runtime: CPU: 0:00:02.4 REAL: 0:00:02.0 MEM: 2314.2MB
Summary Report:
Instances move: 23814 (out of 23814 movable)
Instances flipped: 0
Mean displacement: 0.50 um
Max displacement: 49.53 um (Instance: fir_filter/FE_OFC89_din_r_8) (164.424, 102.575) -> (213.6, 102.22)
	Length: 2 sites, height: 1 rows, site name: CoreSite, cell type: INVX1
Total net bbox length = 3.010e+05 (1.529e+05 1.481e+05) (ext = 2.366e+03)
Runtime: CPU: 0:00:02.5 REAL: 0:00:02.0 MEM: 2314.2MB
*** Finished place_detail (0:02:59 mem=2314.2M) ***
[NR-eGR] Track table information for default rule: 
[NR-eGR] Metal1 has single uniform track structure
[NR-eGR] Metal2 has single uniform track structure
[NR-eGR] Metal3 has single uniform track structure
[NR-eGR] Metal4 has single uniform track structure
[NR-eGR] Metal5 has single uniform track structure
[NR-eGR] Metal6 has single uniform track structure
[NR-eGR] Metal7 has single uniform track structure
[NR-eGR] Metal8 has single uniform track structure
[NR-eGR] Metal9 has single uniform track structure
[NR-eGR] Metal10 has single uniform track structure
[NR-eGR] Metal11 has single uniform track structure
[NR-eGR] Read 43156 PG shapes
[NR-eGR] Read 0 clock shapes
[NR-eGR] Read 0 other shapes
[NR-eGR] #Routing Blockages  : 0
[NR-eGR] #Instance Blockages : 0
[NR-eGR] #PG Blockages       : 43156
[NR-eGR] #Halo Blockages     : 0
[NR-eGR] #Boundary Blockages : 0
[NR-eGR] #Clock Blockages    : 0
[NR-eGR] #Other Blockages    : 0
[NR-eGR] Num Prerouted Nets = 0  Num Prerouted Wires = 0
[NR-eGR] Read 32075 nets ( ignored 0 )
[NR-eGR] There are 1 clock nets ( 0 with NDR ).
[NR-eGR] ============ Routing rule table ============
[NR-eGR] Rule id: 0  Nets: 32075
[NR-eGR] ========================================
[NR-eGR] 
[NR-eGR] Layer group 1: route 32075 net(s) in layer range [2, 11]
[NR-eGR] Early Global Route overflow of layer group 1: 0.00% H + 0.00% V. EstWL: 3.584485e+05um
[NR-eGR] Congestion Analysis By layer: (blocked Gcells are excluded) 
[NR-eGR]                        OverCon            
[NR-eGR]                         #Gcell     %Gcell
[NR-eGR]        Layer               (1)    OverCon
[NR-eGR] ----------------------------------------------
[NR-eGR]  Metal1 ( 1)         0( 0.00%)   ( 0.00%) 
[NR-eGR]  Metal2 ( 2)         7( 0.02%)   ( 0.02%) 
[NR-eGR]  Metal3 ( 3)         0( 0.00%)   ( 0.00%) 
[NR-eGR]  Metal4 ( 4)         0( 0.00%)   ( 0.00%) 
[NR-eGR]  Metal5 ( 5)         0( 0.00%)   ( 0.00%) 
[NR-eGR]  Metal6 ( 6)         0( 0.00%)   ( 0.00%) 
[NR-eGR]  Metal7 ( 7)         0( 0.00%)   ( 0.00%) 
[NR-eGR]  Metal8 ( 8)         0( 0.00%)   ( 0.00%) 
[NR-eGR]  Metal9 ( 9)         0( 0.00%)   ( 0.00%) 
[NR-eGR] Metal10 (10)         0( 0.00%)   ( 0.00%) 
[NR-eGR] Metal11 (11)         0( 0.00%)   ( 0.00%) 
[NR-eGR] ----------------------------------------------
[NR-eGR]        Total         7( 0.00%)   ( 0.00%) 
[NR-eGR] 
[NR-eGR] Overflow after Early Global Route 0.00% H + 0.00% V
Early Global Route congestion estimation runtime: 0.79 seconds, mem = 2284.1M
Local HotSpot Analysis: normalized max congestion hotspot area = 0.00, normalized total congestion hotspot area = 0.00 (area is in unit of 4 std-cell row bins)
[NR-eGR]                  Length (um)    Vias 
[NR-eGR] -------------------------------------
[NR-eGR]  Metal1   (1H)             0   92191 
[NR-eGR]  Metal2   (2V)        140353  131910 
[NR-eGR]  Metal3   (3H)        171211    9224 
[NR-eGR]  Metal4   (4V)         51104    1821 
[NR-eGR]  Metal5   (5H)         18591      67 
[NR-eGR]  Metal6   (6V)          1430       2 
[NR-eGR]  Metal7   (7H)             1       0 
[NR-eGR]  Metal8   (8V)             0       0 
[NR-eGR]  Metal9   (9H)             0       0 
[NR-eGR]  Metal10  (10V)            0       0 
[NR-eGR]  Metal11  (11H)            0       0 
[NR-eGR] -------------------------------------
[NR-eGR]           Total       382689  235215 
[NR-eGR] --------------------------------------------------------------------------
[NR-eGR] Total half perimeter of net bounding box: 300988um
[NR-eGR] Total length: 382689um, number of vias: 235215
[NR-eGR] --------------------------------------------------------------------------
[NR-eGR] Total eGR-routed clock nets wire length: 4262um, number of vias: 3221
[NR-eGR] --------------------------------------------------------------------------
Early Global Route wiring runtime: 0.54 seconds, mem = 2292.1M
0 delay mode for cte disabled.

*** Finished incrementalPlace (cpu=0:00:52.9, real=0:00:54.0)***
Start to check current routing status for nets...
All nets are already routed correctly.
End to check current routing status for nets (mem=2208.1M)
Extraction called for design 'filter_top' of instances=23814 and nets=32239 using extraction engine 'pre_route' .
pre_route RC Extraction called for design filter_top.
RC Extraction called in multi-corner(1) mode.
RCMode: PreRoute
      RC Corner Indexes            0   
Capacitance Scaling Factor   : 1.00000 
Resistance Scaling Factor    : 1.00000 
Clock Cap. Scaling Factor    : 1.00000 
Clock Res. Scaling Factor    : 1.00000 
Shrink Factor                : 1.00000
PreRoute extraction is honoring NDR/Shielding/ExtraSpace for clock nets.
Using Quantus QRC technology file ...
Updating RC grid for preRoute extraction ...
Initializing multi-corner resistance tables ...
PreRoute RC Extraction DONE (CPU Time: 0:00:00.2  Real Time: 0:00:00.0  MEM: 2208.109M)
Compute RC Scale Done ...
**opt_design ... cpu = 0:01:25, real = 0:01:26, mem = 1624.1M, totSessionCpu=0:03:01 **
AAE_INFO: opIsDesignInPostRouteState() is 0
#################################################################################
# Design Stage: PreRoute
# Design Name: filter_top
# Design Mode: 45nm
# Analysis Mode: MMMC Non-OCV 
# Parasitics Mode: No SPEF/RCDB 
# Signoff Settings: SI Off 
#################################################################################
Calculate delays in Single mode...
Start delay calculation (fullDC) (1 T). (MEM=2202.2)
Total number of fetched objects 32169
AAE_INFO: Total number of nets for which stage creation was skipped for all views 0
End delay calculation. (MEM=2237.41 CPU=0:00:03.7 REAL=0:00:04.0)
End delay calculation (fullDC). (MEM=2237.41 CPU=0:00:04.4 REAL=0:00:05.0)
*** IncrReplace #1 [finish] (place_opt_design #1) : cpu/real = 0:00:59.5/0:01:00.3 (1.0), totSession cpu/real = 0:03:06.9/0:03:09.6 (1.0), mem = 2237.4M
*** Timing Is met
*** Check timing (0:00:00.0)
*** Timing Is met
*** Check timing (0:00:00.0)
GigaOpt Checkpoint: Internal reclaim -noViewPrune -rebufferOnly -costCleanup -preRouteDontEndWithRefinePlaceIncrSteinerRouteDC -force -numThreads 1 -preCTS
Info: 1 clock net  excluded from IPO operation.
Begin: Area Reclaim Optimization
*** AreaOpt #2 [begin] (place_opt_design #1) : totSession cpu/real = 0:03:08.0/0:03:10.7 (1.0), mem = 2288.5M
Reclaim Optimization WNS Slack 0.000  TNS Slack 0.000 Density 70.17
+---------+---------+--------+--------+------------+--------+
| Density | Commits |  WNS   |  TNS   |    Real    |  Mem   |
+---------+---------+--------+--------+------------+--------+
|   70.17%|        -|   0.000|   0.000|   0:00:00.0| 2288.5M|
|   70.14%|       35|   0.000|   0.000|   0:00:24.0| 2640.7M|
+---------+---------+--------+--------+------------+--------+
Reclaim Optimization End WNS Slack 0.000  TNS Slack 0.000 Density 70.14
Bottom Preferred Layer:
    None
Via Pillar Rule:
    None

Number of times islegalLocAvaiable called = 0 skipped = 0, called in commitmove = 0, skipped in commitmove = 0
End: Core Area Reclaim Optimization (cpu = 0:00:24.4) (real = 0:00:25.0) **
*** AreaOpt #2 [finish] (place_opt_design #1) : cpu/real = 0:00:24.4/0:00:24.4 (1.0), totSession cpu/real = 0:03:32.5/0:03:35.1 (1.0), mem = 2640.7M
End: Area Reclaim Optimization (cpu=0:00:25, real=0:00:25, mem=2295.66M, totSessionCpu=0:03:33).
GigaOpt Checkpoint: Internal reclaim -numThreads 1 -customPhyUpdate -noGCompAndPhase -ensureOneAreaReclaim -force -svrReclaim -rtrShortNets -allowDegradingShortNetRemoval -preCTS -tgtSlackMult 2 -wtns -noRouteTypeResizePolish -noViewPrune -nativePathGroupFlow
Info: 1 clock net  excluded from IPO operation.
Begin: Area Reclaim Optimization
*** AreaOpt #3 [begin] (place_opt_design #1) : totSession cpu/real = 0:03:32.8/0:03:35.5 (1.0), mem = 2352.9M
Reclaim Optimization WNS Slack 0.000  TNS Slack 0.000 Density 70.14
+---------+---------+--------+--------+------------+--------+
| Density | Commits |  WNS   |  TNS   |    Real    |  Mem   |
+---------+---------+--------+--------+------------+--------+
|   70.14%|        -|   0.000|   0.000|   0:00:00.0| 2352.9M|
|   70.14%|        0|   0.000|   0.000|   0:00:01.0| 2352.9M|
|   70.13%|        1|   0.000|   0.000|   0:00:00.0| 2376.5M|
|   70.13%|        9|   0.000|   0.000|   0:00:01.0| 2376.5M|
|   70.13%|        0|   0.000|   0.000|   0:00:00.0| 2376.5M|
|   70.13%|        0|   0.000|   0.000|   0:00:00.0| 2376.5M|
+---------+---------+--------+--------+------------+--------+
Reclaim Optimization End WNS Slack 0.000  TNS Slack 0.000 Density 70.13
Bottom Preferred Layer:
    None
Via Pillar Rule:
    None

Number of times islegalLocAvaiable called = 9 skipped = 0, called in commitmove = 9, skipped in commitmove = 0
End: Core Area Reclaim Optimization (cpu = 0:00:02.1) (real = 0:00:02.0) **
*** Starting place_detail (0:03:35 mem=2376.5M) ***
Total net bbox length = 3.009e+05 (1.533e+05 1.476e+05) (ext = 2.365e+03)
Move report: Detail placement moves 108 insts, mean move: 0.79 um, max move: 3.11 um 
	Max move on inst (fir_filter/FE_OFC465_din_r_7): (276.80, 117.61) --> (278.20, 119.32)
	Runtime: CPU: 0:00:00.6 REAL: 0:00:01.0 MEM: 2363.6MB
Summary Report:
Instances move: 108 (out of 23764 movable)
Instances flipped: 0
Mean displacement: 0.79 um
Max displacement: 3.11 um (Instance: fir_filter/FE_OFC465_din_r_7) (276.8, 117.61) -> (278.2, 119.32)
	Length: 3 sites, height: 1 rows, site name: CoreSite, cell type: INVX2
Total net bbox length = 3.009e+05 (1.533e+05 1.477e+05) (ext = 2.365e+03)
Runtime: CPU: 0:00:00.7 REAL: 0:00:01.0 MEM: 2363.6MB
*** Finished place_detail (0:03:36 mem=2363.6M) ***
*** maximum move = 3.11 um ***
*** Finished re-routing un-routed nets (2360.6M) ***

*** Finish Physical Update (cpu=0:00:01.2 real=0:00:01.0 mem=2376.6M) ***
*** AreaOpt #3 [finish] (place_opt_design #1) : cpu/real = 0:00:03.3/0:00:03.3 (1.0), totSession cpu/real = 0:03:36.1/0:03:38.8 (1.0), mem = 2376.6M
End: Area Reclaim Optimization (cpu=0:00:03, real=0:00:03, mem=2293.48M, totSessionCpu=0:03:36).
OPTC: user 20.0
Begin: GigaOpt postEco DRV Optimization
GigaOpt Checkpoint: Internal optDRV -inPostEcoStage -smallScaleFixing -maxIter 3 -max_tran -max_cap -maxLocalDensity 0.98 -numThreads 1 -preRouteDontEndWithRefinePlaceIncrSteinerRouteDC -preCTS
*** DrvOpt #3 [begin] (place_opt_design #1) : totSession cpu/real = 0:03:36.4/0:03:39.0 (1.0), mem = 2293.5M
Info: 1 clock net  excluded from IPO operation.
+-------------------------------------------------------------------------------------------------------------------------------------------------------+
|        max-tran       |        max-cap        |  max-fanout |  max-length |       setup       |        |        |        |       |          |         |
+-------------------------------------------------------------------------------------------------------------------------------------------------------+
| nets | terms|  wViol  | nets | terms|  wViol  | nets | terms| nets | terms|   WNS   |   TNS   |  #Buf  |  #Inv  | #Resize|Density|   Real   |   Mem   |
+-------------------------------------------------------------------------------------------------------------------------------------------------------+
|     2|    89|    -0.02|     0|     0|     0.00|     0|     0|     0|     0|     0.37|     0.00|       0|       0|       0| 70.13%|          |         |
|     0|     0|     0.00|     0|     0|     0.00|     0|     0|     0|     0|     0.37|     0.00|       3|       0|       1| 70.13%| 0:00:00.0|  2453.7M|
|     0|     0|     0.00|     0|     0|     0.00|     0|     0|     0|     0|     0.37|     0.00|       0|       0|       0| 70.13%| 0:00:00.0|  2453.7M|
+-------------------------------------------------------------------------------------------------------------------------------------------------------+
Bottom Preferred Layer:
    None
Via Pillar Rule:
    None

*** Finish DRV Fixing (cpu=0:00:00.7 real=0:00:01.0 mem=2453.7M) ***

*** DrvOpt #3 [finish] (place_opt_design #1) : cpu/real = 0:00:01.8/0:00:01.8 (1.0), totSession cpu/real = 0:03:38.1/0:03:40.8 (1.0), mem = 2293.6M
End: GigaOpt postEco DRV Optimization
Running refinePlace -preserveRouting true -hardFence false
*** Starting place_detail (0:03:38 mem=2293.6M) ***

Starting Small incrNP...
Skipped incrNP (cpu=0:00:00.0, real=0:00:00.0, mem=2293.6M)
End of Small incrNP (cpu=0:00:00.0, real=0:00:00.0)
Move report: Detail placement moves 3 insts, mean move: 0.53 um, max move: 0.60 um 
	Max move on inst (fir_filter/g870801): (176.20, 52.63) --> (176.80, 52.63)
	Runtime: CPU: 0:00:00.7 REAL: 0:00:01.0 MEM: 2266.5MB
Summary Report:
Instances move: 3 (out of 23767 movable)
Instances flipped: 0
Mean displacement: 0.53 um
Max displacement: 0.60 um (Instance: fir_filter/g870801) (176.2, 52.63) -> (176.8, 52.63)
	Length: 4 sites, height: 1 rows, site name: CoreSite, cell type: NOR2BX1
Runtime: CPU: 0:00:00.8 REAL: 0:00:01.0 MEM: 2266.5MB
*** Finished place_detail (0:03:39 mem=2266.5M) ***
Register exp ratio and priority group on 0 nets on 32122 nets : 

Active setup views:
 func_default
  Dominating endpoints: 0
  Dominating TNS: -0.000

Extraction called for design 'filter_top' of instances=23767 and nets=32192 using extraction engine 'pre_route' .
pre_route RC Extraction called for design filter_top.
RC Extraction called in multi-corner(1) mode.
RCMode: PreRoute
      RC Corner Indexes            0   
Capacitance Scaling Factor   : 1.00000 
Resistance Scaling Factor    : 1.00000 
Clock Cap. Scaling Factor    : 1.00000 
Clock Res. Scaling Factor    : 1.00000 
Shrink Factor                : 1.00000
PreRoute extraction is honoring NDR/Shielding/ExtraSpace for clock nets.
Using Quantus QRC technology file ...
Skipped RC grid update for preRoute extraction.
Initializing multi-corner resistance tables ...
PreRoute RC Extraction DONE (CPU Time: 0:00:00.2  Real Time: 0:00:00.0  MEM: 2281.141M)
Skewing Data Summary (End_of_FINAL)
--------------------------------------------------
 Total skewed count:0
--------------------------------------------------
Starting delay calculation for Setup views
AAE_INFO: opIsDesignInPostRouteState() is 0
#################################################################################
# Design Stage: PreRoute
# Design Name: filter_top
# Design Mode: 45nm
# Analysis Mode: MMMC Non-OCV 
# Parasitics Mode: No SPEF/RCDB 
# Signoff Settings: SI Off 
#################################################################################
Calculate delays in Single mode...
Start delay calculation (fullDC) (1 T). (MEM=2275.16)
Total number of fetched objects 32122
AAE_INFO: Total number of nets for which stage creation was skipped for all views 0
End delay calculation. (MEM=2302.36 CPU=0:00:03.7 REAL=0:00:04.0)
End delay calculation (fullDC). (MEM=2302.36 CPU=0:00:04.4 REAL=0:00:04.0)
*** Done Building Timing Graph (cpu=0:00:05.2 real=0:00:05.0 totSessionCpu=0:03:45 mem=2302.4M)
OPTC: user 20.0
[NR-eGR] Track table information for default rule: 
[NR-eGR] Metal1 has single uniform track structure
[NR-eGR] Metal2 has single uniform track structure
[NR-eGR] Metal3 has single uniform track structure
[NR-eGR] Metal4 has single uniform track structure
[NR-eGR] Metal5 has single uniform track structure
[NR-eGR] Metal6 has single uniform track structure
[NR-eGR] Metal7 has single uniform track structure
[NR-eGR] Metal8 has single uniform track structure
[NR-eGR] Metal9 has single uniform track structure
[NR-eGR] Metal10 has single uniform track structure
[NR-eGR] Metal11 has single uniform track structure
[NR-eGR] Read 43156 PG shapes
[NR-eGR] Read 0 clock shapes
[NR-eGR] Read 0 other shapes
[NR-eGR] #Routing Blockages  : 0
[NR-eGR] #Instance Blockages : 0
[NR-eGR] #PG Blockages       : 43156
[NR-eGR] #Halo Blockages     : 0
[NR-eGR] #Boundary Blockages : 0
[NR-eGR] #Clock Blockages    : 0
[NR-eGR] #Other Blockages    : 0
[NR-eGR] Num Prerouted Nets = 0  Num Prerouted Wires = 0
[NR-eGR] Read 32028 nets ( ignored 0 )
[NR-eGR] There are 1 clock nets ( 0 with NDR ).
[NR-eGR] ============ Routing rule table ============
[NR-eGR] Rule id: 0  Nets: 32028
[NR-eGR] ========================================
[NR-eGR] 
[NR-eGR] Layer group 1: route 32028 net(s) in layer range [2, 11]
[NR-eGR] Early Global Route overflow of layer group 1: 0.00% H + 0.00% V. EstWL: 3.574516e+05um
[NR-eGR] Congestion Analysis By layer: (blocked Gcells are excluded) 
[NR-eGR]                        OverCon            
[NR-eGR]                         #Gcell     %Gcell
[NR-eGR]        Layer               (1)    OverCon
[NR-eGR] ----------------------------------------------
[NR-eGR]  Metal1 ( 1)         0( 0.00%)   ( 0.00%) 
[NR-eGR]  Metal2 ( 2)         6( 0.01%)   ( 0.01%) 
[NR-eGR]  Metal3 ( 3)         1( 0.00%)   ( 0.00%) 
[NR-eGR]  Metal4 ( 4)         0( 0.00%)   ( 0.00%) 
[NR-eGR]  Metal5 ( 5)         0( 0.00%)   ( 0.00%) 
[NR-eGR]  Metal6 ( 6)         0( 0.00%)   ( 0.00%) 
[NR-eGR]  Metal7 ( 7)         0( 0.00%)   ( 0.00%) 
[NR-eGR]  Metal8 ( 8)         0( 0.00%)   ( 0.00%) 
[NR-eGR]  Metal9 ( 9)         0( 0.00%)   ( 0.00%) 
[NR-eGR] Metal10 (10)         0( 0.00%)   ( 0.00%) 
[NR-eGR] Metal11 (11)         0( 0.00%)   ( 0.00%) 
[NR-eGR] ----------------------------------------------
[NR-eGR]        Total         7( 0.00%)   ( 0.00%) 
[NR-eGR] 
[NR-eGR] Overflow after Early Global Route 0.00% H + 0.00% V
[NR-eGR] Finished Early Global Route kernel ( CPU: 0.47 sec, Real: 0.82 sec, Curr Mem: 2310.36 MB )
[hotspot] +------------+---------------+---------------+
[hotspot] |            |   max hotspot | total hotspot |
[hotspot] +------------+---------------+---------------+
[hotspot] | normalized |          0.00 |          0.00 |
[hotspot] +------------+---------------+---------------+
Local HotSpot Analysis: normalized max congestion hotspot area = 0.00, normalized total congestion hotspot area = 0.00 (area is in unit of 4 std-cell row bins)
[hotspot] Hotspot report including placement blocked areas
[hotspot] +------------+---------------+---------------+
[hotspot] |            |   max hotspot | total hotspot |
[hotspot] +------------+---------------+---------------+
[hotspot] | normalized |          0.00 |          0.00 |
[hotspot] +------------+---------------+---------------+
Local HotSpot Analysis (blockage included): normalized max congestion hotspot area = 0.00, normalized total congestion hotspot area = 0.00 (area is in unit of 4 std-cell row bins)
Reported timing to dir reports/STA
**opt_design ... cpu = 0:02:10, real = 0:02:11, mem = 1694.6M, totSessionCpu=0:03:46 **

------------------------------------------------------------------
     opt_design Final Summary
------------------------------------------------------------------

Setup views included:
 func_default 

+--------------------+---------+---------+---------+
|     Setup mode     |   all   | reg2reg | default |
+--------------------+---------+---------+---------+
|           WNS (ns):|  0.375  |  0.375  |  1.951  |
|           TNS (ns):|  0.000  |  0.000  |  0.000  |
|    Violating Paths:|    0    |    0    |    0    |
|          All Paths:|  1189   |  1165   |   24    |
+--------------------+---------+---------+---------+

+----------------+-------------------------------+------------------+
|                |              Real             |       Total      |
|    DRVs        +------------------+------------+------------------|
|                |  Nr nets(terms)  | Worst Vio  |  Nr nets(terms)  |
+----------------+------------------+------------+------------------+
|   max_cap      |      0 (0)       |   0.000    |      0 (0)       |
|   max_tran     |      0 (0)       |   0.000    |      0 (0)       |
|   max_fanout   |      0 (0)       |     0      |      0 (0)       |
|   max_length   |      0 (0)       |     0      |      0 (0)       |
+----------------+------------------+------------+------------------+

Density: 70.134%
Routing Overflow: 0.00% H and 0.00% V
------------------------------------------------------------------
**opt_design ... cpu = 0:02:11, real = 0:02:13, mem = 1695.0M, totSessionCpu=0:03:47 **
*** Finished opt_design ***
      flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:*                                       0.000 ns          0.375 ns  final
UM: Running design category ...
------------------------------------------------------------
	Current design flip-flop statistics

Single-Bit FF Count          :         1198
Multi-Bit FF Count           :            0
Total Bit Count              :         1198
Total FF Count               :         1198
Bits Per Flop                :        1.000
Total Clock Pin Cap(FF)      :      352.216
Multibit Conversion Ratio(%) :         0.00
------------------------------------------------------------
------------------------------------------------------------
            Multi-bit cell usage statistics

------------------------------------------------------------
============================================================
Sequential Multibit cells usage statistics
------------------------------------------------------------
            Not Merged-bits         Merged-bits     Multibit Conversion %     Bits Per Flop
------------------------------------------------------------
-FlipFlops             1198                    0        0.00                    1.00
------------------------------------------------------------

------------------------------------------------------------
Seq_Mbit libcell              Bitwidth        Count
------------------------------------------------------------
Total 0
============================================================
------------------------------------------------------------
Category            Num of Insts Rejected     Reasons
------------------------------------------------------------
------------------------------------------------------------
      flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:         131.51            134          0.000 ns          0.375 ns  opt_design_prects
Disable CTE adjustment.
#optDebug: fT-D <X 1 0 0 0>
**place_opt_design ... cpu = 0:02:58, real = 0:03:02, mem = 2181.6M **
*** Finished GigaPlace ***

*** Summary of all messages that are not suppressed in this session:
Severity  ID               Count  Summary                                  
ERROR     IMPSP-9099           2  Scan chains exist in this design but are...
*** Message Summary: 0 warning(s), 2 error(s)

*** place_opt_design #1 [finish] : cpu/real = 0:02:58.4/0:03:02.0 (1.0), totSession cpu/real = 0:03:47.7/0:03:51.2 (1.0), mem = 2181.6M
@file 66: #place_opt_design -incremental_timing -report_dir reports/STA
@file 67:
@@file 68: set_db add_tieoffs_cells { TIEHI TIELO }
@@file 69: add_tieoffs
Options: No distance constraint, No Fan-out constraint.
Re-routed 1 nets
INFO: Total Number of Tie Cells (TIEHI) placed: 1  
INFO: Total Number of Tie Cells (TIELO) placed: 0  
@file 70:
@file 71: #-----------------------------------------------------------------------
@file 72: ## Pre Clock tree timing analysis
@file 73: #-----------------------------------------------------------------------
@file 74:
@@file 75: time_design -pre_cts -report_dir reports/STA
*** time_design #2 [begin] : totSession cpu/real = 0:03:48.7/0:03:52.1 (1.0), mem = 2272.6M
Start to check current routing status for nets...
All nets are already routed correctly.
End to check current routing status for nets (mem=2272.6M)
Extraction called for design 'filter_top' of instances=23768 and nets=32193 using extraction engine 'pre_route' .
pre_route RC Extraction called for design filter_top.
RC Extraction called in multi-corner(1) mode.
RCMode: PreRoute
      RC Corner Indexes            0   
Capacitance Scaling Factor   : 1.00000 
Resistance Scaling Factor    : 1.00000 
Clock Cap. Scaling Factor    : 1.00000 
Clock Res. Scaling Factor    : 1.00000 
Shrink Factor                : 1.00000
PreRoute extraction is honoring NDR/Shielding/ExtraSpace for clock nets.
Using Quantus QRC technology file ...
Skipped RC grid update for preRoute extraction.
Initializing multi-corner resistance tables ...
PreRoute RC Extraction DONE (CPU Time: 0:00:00.2  Real Time: 0:00:00.0  MEM: 2272.633M)
Starting delay calculation for Setup views
AAE_INFO: opIsDesignInPostRouteState() is 0
#################################################################################
# Design Stage: PreRoute
# Design Name: filter_top
# Design Mode: 45nm
# Analysis Mode: MMMC Non-OCV 
# Parasitics Mode: No SPEF/RCDB 
# Signoff Settings: SI Off 
#################################################################################
Calculate delays in Single mode...
Start delay calculation (fullDC) (1 T). (MEM=2262.89)
Total number of fetched objects 32123
AAE_INFO: Total number of nets for which stage creation was skipped for all views 0
End delay calculation. (MEM=2298.1 CPU=0:00:03.7 REAL=0:00:03.0)
End delay calculation (fullDC). (MEM=2298.1 CPU=0:00:04.4 REAL=0:00:04.0)
*** Done Building Timing Graph (cpu=0:00:04.9 real=0:00:05.0 totSessionCpu=0:03:55 mem=2298.1M)

------------------------------------------------------------------
         time_design Summary
------------------------------------------------------------------

Setup views included:
 func_default 

+--------------------+---------+---------+---------+
|     Setup mode     |   all   | reg2reg | default |
+--------------------+---------+---------+---------+
|           WNS (ns):|  0.375  |  0.375  |  1.951  |
|           TNS (ns):|  0.000  |  0.000  |  0.000  |
|    Violating Paths:|    0    |    0    |    0    |
|          All Paths:|  1189   |  1165   |   24    |
+--------------------+---------+---------+---------+

+----------------+-------------------------------+------------------+
|                |              Real             |       Total      |
|    DRVs        +------------------+------------+------------------|
|                |  Nr nets(terms)  | Worst Vio  |  Nr nets(terms)  |
+----------------+------------------+------------+------------------+
|   max_cap      |      0 (0)       |   0.000    |      0 (0)       |
|   max_tran     |      0 (0)       |   0.000    |      0 (0)       |
|   max_fanout   |      0 (0)       |     0      |      0 (0)       |
|   max_length   |      0 (0)       |     0      |      0 (0)       |
+----------------+------------------+------------+------------------+

Density: 70.135%
Routing Overflow: 0.00% H and 0.00% V
------------------------------------------------------------------
Reported timing to dir reports/STA
Total CPU time: 7.13 sec
Total Real time: 7.0 sec
Total Memory Usage: 2265.277344 Mbytes
*** time_design #2 [finish] : cpu/real = 0:00:07.1/0:00:07.6 (0.9), totSession cpu/real = 0:03:55.8/0:03:59.7 (1.0), mem = 2265.3M
@file 76:
@file 77: #-----------------------------------------------------------------------
@file 78: ## Clock Tree Synthesis
@file 79: #-----------------------------------------------------------------------
@@file 80: set_db cts_inverter_cells {CLKINVX12 CLKINVX16 CLKINVX4}
@@file 81: set_db cts_buffer_cells {CLKBUFX16 CLKBUFX12 CLKBUFX4}
@@file 82: set_db cts_update_io_latency false
**WARN: (IMPDBTCL-299):	The attribute 'cts_update_io_latency' still works but will be obsolete in a future major release. You should remove it from your script before the next major release to avoid errors. It should be changed to the new name of 'cts_update_clock_latency'.
@file 83:
@@file 84: clock_design
Turning off fast DC mode.
*** ccopt_design #1 [begin] : totSession cpu/real = 0:03:55.9/0:03:59.8 (1.0), mem = 2255.8M
Runtime...
**INFO: User's settings:
delaycal_default_net_delay                                     1000ps
delaycal_default_net_load                                      0.5pf
delaycal_enable_high_fanout                                    true
delaycal_ignore_net_load                                       false
delaycal_input_transition_delay                                0.1ps
delaycal_socv_accuracy_mode                                    low
delaycal_use_default_delay_limit                               1000
setAnalysisMode -cts                                           preCTS
setDelayCalMode -engine                                        aae
design_bottom_routing_layer                                    Metal2
design_process_node                                            45
extract_rc_coupling_cap_threshold                              0.1
extract_rc_engine                                              pre_route
extract_rc_layer_independent                                   1
extract_rc_relative_cap_threshold                              1.0
extract_rc_total_cap_threshold                                 0.0
opt_drv_margin                                                 0.0
opt_fix_drv                                                    true
opt_preserve_all_sequential                                    true
opt_resize_flip_flops                                          true
opt_setup_target_slack                                         0.0
opt_view_pruning_hold_views_active_list                        { func_default }
opt_view_pruning_setup_views_active_list                       { func_default }
opt_view_pruning_setup_views_persistent_list                   { func_default}
opt_view_pruning_tdgr_setup_views_persistent_list              { func_default}
place_global_reorder_scan                                      false
route_design_extract_third_party_compatible                    false
route_design_global_exp_timing_driven_std_delay                9.9
getAnalysisMode -cts                                           preCTS
getDelayCalMode -engine                                        aae
get_power_analysis_mode -report_power_quiet                    false
getAnalysisMode -cts                                           preCTS
(ccopt_design): CTS Engine: auto. Used Spec: CCOPT spec from create_ccopt_clock_tree_spec.
(ccopt_design): create_ccopt_clock_tree_spec
Creating clock tree spec for modes (timing configs): default_const
cts_spec_config_create_generator_skew_groups=true: create_clock_tree_spec will generate skew groups with a name prefix of "_clock_gen" to balance clock generator connected flops with the clock generator they drive.
Reset timing graph...
Ignoring AAE DB Resetting ...
Reset timing graph done.
Ignoring AAE DB Resetting ...
Analyzing clock structure...
Analyzing clock structure done.
Reset timing graph...
Ignoring AAE DB Resetting ...
Reset timing graph done.
Extracting original clock gating for Clk...
  clock_tree Clk contains 1133 sinks and 0 clock gates.
Extracting original clock gating for Clk done.
The skew group Clk/default_const was created. It contains 1133 sinks and 1 sources.
Checking clock tree convergence...
Checking clock tree convergence done.
Placement constraints of type 'region' or 'fence' will not be downgraded to 'guide' because the attribute cts_change_fences_to_guides has been set to false.
Set place::cacheFPlanSiteMark to 1
CCOpt::Phase::Initialization...
Check Prerequisites...
Leaving CCOpt scope - CheckPlace...
Begin checking placement ... (start mem=2255.8M, init mem=2255.8M)
*info: Placed = 23768         
*info: Unplaced = 0           
Placement Density:70.13%(68958/98323)
Placement Density (including fixed std cells):70.13%(68958/98323)
Finished check_place (total: cpu=0:00:00.3, real=0:00:00.0; vio checks: cpu=0:00:00.2, real=0:00:00.0; mem=2255.8M)
Leaving CCOpt scope - CheckPlace done. (took cpu=0:00:00.3 real=0:00:00.3)
**WARN: (IMPCCOPT-2015):	Innovus will not update I/O latencies for the following reason(s):
 * CCOpt property cts_update_clock_latency is false

Found 0 ideal nets, 0 pins with transition annotations, 0 instances with delay annotations, 0 nets with delay annotations, refer to logv for details.

Check Prerequisites done. (took cpu=0:00:00.3 real=0:00:00.3)
      flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:*                                                                   Check Prerequisites
CCOpt::Phase::Initialization done. (took cpu=0:00:00.3 real=0:00:00.3)
      flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:*                                                                   CCOpt::Phase::Initialization
Executing ccopt post-processing.
Synthesizing clock trees with CCOpt...
*** CTS #1 [begin] (ccopt_design #1) : totSession cpu/real = 0:04:06.1/0:04:10.0 (1.0), mem = 2255.8M
CCOpt::Phase::PreparingToBalance...
Leaving CCOpt scope - Initializing power interface...
Leaving CCOpt scope - Initializing power interface done. (took cpu=0:00:00.0 real=0:00:00.0)
Found 0 advancing pin insertion delay (0.000% of 1133 clock tree sinks)
Found 0 delaying pin insertion delay (0.000% of 1133 clock tree sinks)
Leaving CCOpt scope - optDesignGlobalRouteStep...
[NR-eGR] Started Early Global Route kernel ( Curr Mem: 2249.76 MB )
[NR-eGR] Track table information for default rule: 
[NR-eGR] Metal1 has single uniform track structure
[NR-eGR] Metal2 has single uniform track structure
[NR-eGR] Metal3 has single uniform track structure
[NR-eGR] Metal4 has single uniform track structure
[NR-eGR] Metal5 has single uniform track structure
[NR-eGR] Metal6 has single uniform track structure
[NR-eGR] Metal7 has single uniform track structure
[NR-eGR] Metal8 has single uniform track structure
[NR-eGR] Metal9 has single uniform track structure
[NR-eGR] Metal10 has single uniform track structure
[NR-eGR] Metal11 has single uniform track structure
[NR-eGR] Read 43156 PG shapes
[NR-eGR] Read 0 clock shapes
[NR-eGR] Read 0 other shapes
[NR-eGR] #Routing Blockages  : 0
[NR-eGR] #Instance Blockages : 0
[NR-eGR] #PG Blockages       : 43156
[NR-eGR] #Halo Blockages     : 0
[NR-eGR] #Boundary Blockages : 0
[NR-eGR] #Clock Blockages    : 0
[NR-eGR] #Other Blockages    : 0
[NR-eGR] Num Prerouted Nets = 0  Num Prerouted Wires = 0
[NR-eGR] Read 32029 nets ( ignored 0 )
[NR-eGR] There are 1 clock nets ( 0 with NDR ).
[NR-eGR] ============ Routing rule table ============
[NR-eGR] Rule id: 0  Nets: 32029
[NR-eGR] ========================================
[NR-eGR] 
[NR-eGR] Layer group 1: route 32029 net(s) in layer range [2, 11]
[NR-eGR] Early Global Route overflow of layer group 1: 0.00% H + 0.00% V. EstWL: 3.577491e+05um
[NR-eGR] Congestion Analysis By layer: (blocked Gcells are excluded) 
[NR-eGR]                        OverCon            
[NR-eGR]                         #Gcell     %Gcell
[NR-eGR]        Layer               (1)    OverCon
[NR-eGR] ----------------------------------------------
[NR-eGR]  Metal1 ( 1)         0( 0.00%)   ( 0.00%) 
[NR-eGR]  Metal2 ( 2)         9( 0.02%)   ( 0.02%) 
[NR-eGR]  Metal3 ( 3)         1( 0.00%)   ( 0.00%) 
[NR-eGR]  Metal4 ( 4)         0( 0.00%)   ( 0.00%) 
[NR-eGR]  Metal5 ( 5)         0( 0.00%)   ( 0.00%) 
[NR-eGR]  Metal6 ( 6)         0( 0.00%)   ( 0.00%) 
[NR-eGR]  Metal7 ( 7)         0( 0.00%)   ( 0.00%) 
[NR-eGR]  Metal8 ( 8)         0( 0.00%)   ( 0.00%) 
[NR-eGR]  Metal9 ( 9)         0( 0.00%)   ( 0.00%) 
[NR-eGR] Metal10 (10)         0( 0.00%)   ( 0.00%) 
[NR-eGR] Metal11 (11)         0( 0.00%)   ( 0.00%) 
[NR-eGR] ----------------------------------------------
[NR-eGR]        Total        10( 0.00%)   ( 0.00%) 
[NR-eGR] 
[NR-eGR] Overflow after Early Global Route 0.00% H + 0.00% V
[NR-eGR]                  Length (um)    Vias 
[NR-eGR] -------------------------------------
[NR-eGR]  Metal1   (1H)             0   92194 
[NR-eGR]  Metal2   (2V)        139775  131749 
[NR-eGR]  Metal3   (3H)        170999    9301 
[NR-eGR]  Metal4   (4V)         51226    1879 
[NR-eGR]  Metal5   (5H)         18349      63 
[NR-eGR]  Metal6   (6V)          1650       2 
[NR-eGR]  Metal7   (7H)             1       0 
[NR-eGR]  Metal8   (8V)             0       0 
[NR-eGR]  Metal9   (9H)             0       0 
[NR-eGR]  Metal10  (10V)            0       0 
[NR-eGR]  Metal11  (11H)            0       0 
[NR-eGR] -------------------------------------
[NR-eGR]           Total       381999  235188 
[NR-eGR] --------------------------------------------------------------------------
[NR-eGR] Total half perimeter of net bounding box: 301743um
[NR-eGR] Total length: 381999um, number of vias: 235188
[NR-eGR] --------------------------------------------------------------------------
[NR-eGR] Total eGR-routed clock nets wire length: 4253um, number of vias: 3182
[NR-eGR] --------------------------------------------------------------------------
[NR-eGR] Finished Early Global Route kernel ( CPU: 0.98 sec, Real: 1.32 sec, Curr Mem: 2261.46 MB )
Leaving CCOpt scope - optDesignGlobalRouteStep done. (took cpu=0:00:01.0 real=0:00:01.4)
Legalization setup...
Using cell based legalization.
Initializing placement interface...
  Use check_library -place or consult logv if problems occur.
  Leaving CCOpt scope - Initializing placement interface...
  Leaving CCOpt scope - Initializing placement interface done. (took cpu=0:00:00.1 real=0:00:00.1)
Initializing placement interface done.
Leaving CCOpt scope - Cleaning up placement interface...
Leaving CCOpt scope - Cleaning up placement interface done. (took cpu=0:00:00.1 real=0:00:00.1)
Leaving CCOpt scope - Initializing placement interface...
Leaving CCOpt scope - Initializing placement interface done. (took cpu=0:00:00.1 real=0:00:00.1)
Legalization setup done. (took cpu=0:00:00.2 real=0:00:00.2)
      flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:*                                                                   Legalization setup
Validating CTS configuration...
Checking module port directions...
Checking module port directions done. (took cpu=0:00:00.0 real=0:00:00.0)
Non-default attributes:
  Public non-default attributes:
    cts_buffer_cells is set for at least one object
    cts_inverter_cells is set for at least one object
    cts_route_type is set for at least one object
    cts_update_clock_latency: false (default: true)
  No private non-default attributes
Route type trimming info:
  No route type modifications were made.
Updating RC grid for preRoute extraction ...
Initializing multi-corner resistance tables ...
Clock tree balancer configuration for clock_tree Clk:
Non-default attributes:
  Public non-default attributes:
    cts_route_type (leaf): default_route_type_leaf (default: default)
    cts_route_type (top): default_route_type_nonleaf (default: default)
    cts_route_type (trunk): default_route_type_nonleaf (default: default)
  No private non-default attributes
For power domain auto-default:
  Buffers:     CLKBUFX16 CLKBUFX12 CLKBUFX4 
  Inverters:   CLKINVX16 CLKINVX12 CLKINVX4 
  Clock gates (with test): TLATNTSCAX20 TLATNTSCAX16 TLATNTSCAX12 TLATNTSCAX8 TLATNTSCAX6 TLATNTSCAX4 TLATNTSCAX3 TLATNTSCAX2 
  Clock gates   (no test): TLATNCAX20 TLATNCAX16 TLATNCAX12 TLATNCAX8 TLATNCAX6 TLATNCAX4 TLATNCAX3 TLATNCAX2 
  Unblocked area available for placement of any clock cells in power_domain auto-default: 98322.606um^2
Top Routing info:
  Route-type name: default_route_type_nonleaf; Top/bottom preferred layer name: Metal4/Metal3; 
  Unshielded; Mask Constraint: 0; Source: cts_route_type.
Trunk Routing info:
  Route-type name: default_route_type_nonleaf; Top/bottom preferred layer name: Metal4/Metal3; 
  Unshielded; Preferred extra space: 1; Mask Constraint: 0; Source: cts_route_type.
Leaf Routing info:
  Route-type name: default_route_type_leaf; Top/bottom preferred layer name: Metal4/Metal3; 
  Unshielded; Preferred extra space: 1; Mask Constraint: 0; Source: cts_route_type.
For timing_corner default_dc:both, late and power domain auto-default:
  Slew time target (leaf):    0.030ns
  Slew time target (trunk):   0.030ns
  Slew time target (top):     0.031ns (Note: no nets are considered top nets in this clock tree)
  Buffer unit delay: 0.020ns
  Buffer max distance: 421.333um
Fastest wire driving cells and distances:
  Buffer    : {lib_cell:CLKBUFX16, fastest_considered_half_corner=default_dc:both.late, optimalDrivingDistance=421.333um, saturatedSlew=0.026ns, speed=12392.147um per ns, cellArea=16.234um^2 per 1000um}
  Inverter  : {lib_cell:CLKINVX16, fastest_considered_half_corner=default_dc:both.late, optimalDrivingDistance=358.667um, saturatedSlew=0.026ns, speed=16011.919um per ns, cellArea=15.256um^2 per 1000um}
  Clock gate (with test): {lib_cell:TLATNTSCAX16, fastest_considered_half_corner=default_dc:both.late, optimalDrivingDistance=430.400um, saturatedSlew=0.026ns, speed=6274.052um per ns, cellArea=30.195um^2 per 1000um}
  Clock gate   (no test): {lib_cell:TLATNCAX16, fastest_considered_half_corner=default_dc:both.late, optimalDrivingDistance=430.400um, saturatedSlew=0.026ns, speed=6283.212um per ns, cellArea=28.606um^2 per 1000um}


Logic Sizing Table:

----------------------------------------------------------
Cell    Instance count    Source    Eligible library cells
----------------------------------------------------------
  (empty table)
----------------------------------------------------------


Clock tree balancer configuration for skew_group Clk/default_const:
  Sources:                     pin Clk
  Total number of sinks:       1133
  Delay constrained sinks:     1133
  Constrains:                  default
  Non-leaf sinks:              0
  Ignore pins:                 0
 Timing corner default_dc:both.late:
  Skew target:                 0.020ns
Primary reporting skew groups are:
skew_group Clk/default_const with 1133 clock sinks

Clock DAG stats initial state:
  cell counts      : b=0, i=0, icg=0, dcg=0, l=0, total=0
  sink counts      : regular=1133, enable_latch=0, load_capacitance=0, antenna=0, node_sink=0, total=1133
  misc counts      : r=1, pp=0
  cell areas       : b=0.000um^2, i=0.000um^2, icg=0.000um^2, dcg=0.000um^2, l=0.000um^2, total=0.000um^2
  hp wire lengths  : top=0.000um, trunk=0.000um, leaf=0.000um, total=0.000um
      flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:*                                                                   InitialState
No ideal or dont_touch nets found in the clock tree
No dont_touch hnets found in the clock tree
No dont_touch hpins found in the clock network.
Checking for illegal sizes of clock logic instances...
Checking for illegal sizes of clock logic instances done. (took cpu=0:00:00.0 real=0:00:00.0)
      flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:*                                                                   Checking for illegal sizes of clock logic instances
Validating CTS configuration done. (took cpu=0:00:01.0 real=0:00:01.0)
      flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:*                                                                   Validating CTS configuration
CCOpt configuration status: all checks passed.
Adding exclusion drivers to pins that are cts_sink_type_effective exclude...
    Adding exclusion drivers (these will be instances of the smallest area library cells).
  No exclusion drivers are needed.
Adding exclusion drivers to pins that are cts_sink_type_effective exclude done.
Antenna diode management...
  Found 0 antenna diodes in the clock trees.
  
Antenna diode management done.
Adding driver cells for primary IOs...
  
  ----------------------------------------------------------------------------------------------
  CCOpt reported the following when adding drivers below input ports and above output ports     
  ----------------------------------------------------------------------------------------------
    (empty table)
  ----------------------------------------------------------------------------------------------
  
  
Adding driver cells for primary IOs done.
Adding driver cell for primary IO roots...
Adding driver cell for primary IO roots done.
Maximizing clock DAG abstraction...
  Removing clock DAG drivers
Maximizing clock DAG abstraction done.
CCOpt::Phase::PreparingToBalance done. (took cpu=0:00:02.4 real=0:00:02.8)
      flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:*                                                                   CCOpt::Phase::PreparingToBalance
Synthesizing clock trees...
  Preparing To Balance...
  Leaving CCOpt scope - Cleaning up placement interface...
  Leaving CCOpt scope - Cleaning up placement interface done. (took cpu=0:00:00.1 real=0:00:00.1)
  Leaving CCOpt scope - Initializing placement interface...
  Leaving CCOpt scope - Initializing placement interface done. (took cpu=0:00:00.1 real=0:00:00.1)
  Merging duplicate siblings in DAG...
    Clock DAG stats before merging:
      cell counts      : b=0, i=0, icg=0, dcg=0, l=0, total=0
      sink counts      : regular=1133, enable_latch=0, load_capacitance=0, antenna=0, node_sink=0, total=1133
      misc counts      : r=1, pp=0
      cell areas       : b=0.000um^2, i=0.000um^2, icg=0.000um^2, dcg=0.000um^2, l=0.000um^2, total=0.000um^2
      hp wire lengths  : top=0.000um, trunk=0.000um, leaf=0.000um, total=0.000um
      flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:*                                                                   before merging
    Resynthesising clock tree into netlist...
      Reset timing graph...
Ignoring AAE DB Resetting ...
      Reset timing graph done.
    Resynthesising clock tree into netlist done.
    Merging duplicate clock dag driver clones in DAG...
    Merging duplicate clock dag driver clones in DAG done.
    
    Disconnecting clock tree from netlist...
    Disconnecting clock tree from netlist done.
  Merging duplicate siblings in DAG done.
  Applying movement limits...
  Applying movement limits done.
  Preparing To Balance done. (took cpu=0:00:00.2 real=0:00:00.2)
      flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:*                                                                   Preparing To Balance
  CCOpt::Phase::Construction...
  Stage::Clustering...
  Clustering...
    Initialize for clustering...
    Clock DAG stats before clustering:
      cell counts      : b=0, i=0, icg=0, dcg=0, l=0, total=0
      sink counts      : regular=1133, enable_latch=0, load_capacitance=0, antenna=0, node_sink=0, total=1133
      misc counts      : r=1, pp=0
      cell areas       : b=0.000um^2, i=0.000um^2, icg=0.000um^2, dcg=0.000um^2, l=0.000um^2, total=0.000um^2
      hp wire lengths  : top=0.000um, trunk=0.000um, leaf=0.000um, total=0.000um
      flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:*                                                                   before clustering
    Computing max distances from locked parents...
      Computing distance_from_locked_parent_restrictions for 0 nodes driven by 0 locked parents
    Computing max distances from locked parents done.
    Computing optimal clock node locations...
    : ...20% ...40% ...60% ...80% ...100% 
    Computing optimal clock node locations done. (took cpu=0:00:00.0 real=0:00:00.0)
    Initialize for clustering done. (took cpu=0:00:00.1 real=0:00:00.1)
      flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:*                                                                   Initialize for clustering
    Bottom-up phase...
    Clustering bottom-up starting from leaves...
      Clustering clock_tree Clk...
      Clustering clock_tree Clk done.
    Clustering bottom-up starting from leaves done.
    Rebuilding the clock tree after clustering...
    Rebuilding the clock tree after clustering done.
    Clock DAG stats after bottom-up phase:
      cell counts      : b=13, i=0, icg=0, dcg=0, l=0, total=13
      sink counts      : regular=1133, enable_latch=0, load_capacitance=0, antenna=0, node_sink=0, total=1133
      misc counts      : r=1, pp=0
      cell areas       : b=87.210um^2, i=0.000um^2, icg=0.000um^2, dcg=0.000um^2, l=0.000um^2, total=87.210um^2
      hp wire lengths  : top=0.000um, trunk=0.000um, leaf=1879.290um, total=1879.290um
    Clock DAG library cell distribution after bottom-up phase {count}:
       Bufs: CLKBUFX16: 12 CLKBUFX12: 1 
      flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:*                                                                   after bottom-up phase
    Bottom-up phase done. (took cpu=0:00:00.5 real=0:00:00.5)
      flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:*                                                                   Bottom-up phase
    Legalizing clock trees...
    Resynthesising clock tree into netlist...
      Reset timing graph...
Ignoring AAE DB Resetting ...
      Reset timing graph done.
    Resynthesising clock tree into netlist done.
    Commiting net attributes....
    Commiting net attributes. done.
    Leaving CCOpt scope - ClockRefiner...
    Performing a single pass refine place with checks partially disabled for clock sinks and datapath.
*** Starting place_detail (0:04:10 mem=2256.8M) ***
Total net bbox length = 3.035e+05 (1.547e+05 1.488e+05) (ext = 2.375e+03)
Move report: Detail placement moves 58 insts, mean move: 1.51 um, max move: 4.40 um 
	Max move on inst (fir_filter/g861133): (146.80, 259.54) --> (151.20, 259.54)
	Runtime: CPU: 0:00:00.7 REAL: 0:00:01.0 MEM: 2244.0MB
Summary Report:
Instances move: 58 (out of 23781 movable)
Instances flipped: 0
Mean displacement: 1.51 um
Max displacement: 4.40 um (Instance: fir_filter/g861133) (146.8, 259.54) -> (151.2, 259.54)
	Length: 6 sites, height: 1 rows, site name: CoreSite, cell type: AOI211XL
Total net bbox length = 3.035e+05 (1.547e+05 1.488e+05) (ext = 2.376e+03)
Runtime: CPU: 0:00:00.7 REAL: 0:00:01.0 MEM: 2244.0MB
*** Finished place_detail (0:04:10 mem=2244.0M) ***
    ClockRefiner summary
    All clock instances: Moved 23, flipped 10 and cell swapped 0 (out of a total of 1146).
    The largest move was 3.42 um for fir_filter/coefficients_r_reg[6][4].
    Leaving CCOpt scope - ClockRefiner done. (took cpu=0:00:01.0 real=0:00:01.0)
    Disconnecting clock tree from netlist...
    Disconnecting clock tree from netlist done.
    Leaving CCOpt scope - Cleaning up placement interface...
    Leaving CCOpt scope - Cleaning up placement interface done. (took cpu=0:00:00.1 real=0:00:00.1)
    Leaving CCOpt scope - Initializing placement interface...
    Leaving CCOpt scope - Initializing placement interface done. (took cpu=0:00:00.1 real=0:00:00.1)
    Clock tree timing engine global stage delay update for default_dc:both.late...
    Clock tree timing engine global stage delay update for default_dc:both.late done. (took cpu=0:00:00.0 real=0:00:00.0)
    
    Clock tree legalization - Histogram:
    ====================================
    
    --------------------------------
    Movement (um)    Number of cells
    --------------------------------
      (empty table)
    --------------------------------
    
    
    Clock tree legalization - There are no Movements:
    =================================================
    
    ---------------------------------------------
    Movement (um)    Desired     Achieved    Node
                     location    location    
    ---------------------------------------------
      (empty table)
    ---------------------------------------------
    
    Legalizing clock trees done. (took cpu=0:00:01.1 real=0:00:01.1)
      flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:*                                                                   Legalizing clock trees
    Clock DAG stats after 'Clustering':
      cell counts      : b=13, i=0, icg=0, dcg=0, l=0, total=13
      sink counts      : regular=1133, enable_latch=0, load_capacitance=0, antenna=0, node_sink=0, total=1133
      misc counts      : r=1, pp=0
      cell areas       : b=87.210um^2, i=0.000um^2, icg=0.000um^2, dcg=0.000um^2, l=0.000um^2, total=87.210um^2
      cell capacitance : b=0.026pF, i=0.000pF, icg=0.000pF, dcg=0.000pF, l=0.000pF, total=0.026pF
      sink capacitance : total=0.349pF, avg=0.000pF, sd=0.000pF, min=0.000pF, max=0.000pF
      wire capacitance : top=0.000pF, trunk=0.065pF, leaf=0.331pF, total=0.397pF
      wire lengths     : top=0.000um, trunk=1007.615um, leaf=4206.498um, total=5214.113um
      hp wire lengths  : top=0.000um, trunk=0.000um, leaf=1881.625um, total=1881.625um
    Clock DAG net violations after 'Clustering': none
    Clock DAG primary half-corner transition distribution after 'Clustering':
      Trunk : target=0.030ns count=1 avg=0.024ns sd=0.000ns min=0.024ns max=0.024ns {0 <= 0.018ns, 1 <= 0.024ns, 0 <= 0.027ns, 0 <= 0.029ns, 0 <= 0.030ns}
      Leaf  : target=0.030ns count=13 avg=0.028ns sd=0.001ns min=0.026ns max=0.029ns {0 <= 0.018ns, 0 <= 0.024ns, 5 <= 0.027ns, 7 <= 0.029ns, 1 <= 0.030ns}
    Clock DAG library cell distribution after 'Clustering' {count}:
       Bufs: CLKBUFX16: 12 CLKBUFX12: 1 
    Primary reporting skew groups after 'Clustering':
      skew_group Clk/default_const: insertion delay [min=0.028, max=0.048, avg=0.043, sd=0.003], skew [0.020 vs 0.020], 100% {0.028, 0.048} (wid=0.017 ws=0.015) (gid=0.032 gs=0.005)
    Skew group summary after 'Clustering':
      skew_group Clk/default_const: insertion delay [min=0.028, max=0.048, avg=0.043, sd=0.003], skew [0.020 vs 0.020], 100% {0.028, 0.048} (wid=0.017 ws=0.015) (gid=0.032 gs=0.005)
    Legalizer API calls during this step: 129 succeeded with high effort: 129 succeeded with medium effort: 0 succeeded with low effort: 0 succeeded with basic effort: 0 succeeded with basic unbounded effort: 0
  Clustering done. (took cpu=0:00:01.9 real=0:00:01.9)
      flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:*                                                                   Clustering
  Looking for fanout violations...
  Looking for fanout violations done.
  CongRepair After Initial Clustering...
  Reset timing graph...
Ignoring AAE DB Resetting ...
  Reset timing graph done.
  Leaving CCOpt scope - Early Global Route...
  Clock implementation routing...
Net route status summary:
  Clock:        14 (unrouted=14, trialRouted=0, noStatus=0, routed=0, fixed=0, [crossesIlmBoundary=0, tooFewTerms=0, (crossesIlmBoundary AND tooFewTerms=0)])
  Non-clock: 32192 (unrouted=164, trialRouted=32028, noStatus=0, routed=0, fixed=0, [crossesIlmBoundary=0, tooFewTerms=164, (crossesIlmBoundary AND tooFewTerms=0)])
    Routing using eGR only...
      Early Global Route - eGR only step...
(ccopt eGR): There are 14 nets to be routed. 0 nets have skip routing designation.
(ccopt eGR): There are 14 nets for routing of which 14 have one or more fixed wires.
(ccopt eGR): Start to route 14 all nets
[NR-eGR] Track table information for default rule: 
[NR-eGR] Metal1 has single uniform track structure
[NR-eGR] Metal2 has single uniform track structure
[NR-eGR] Metal3 has single uniform track structure
[NR-eGR] Metal4 has single uniform track structure
[NR-eGR] Metal5 has single uniform track structure
[NR-eGR] Metal6 has single uniform track structure
[NR-eGR] Metal7 has single uniform track structure
[NR-eGR] Metal8 has single uniform track structure
[NR-eGR] Metal9 has single uniform track structure
[NR-eGR] Metal10 has single uniform track structure
[NR-eGR] Metal11 has single uniform track structure
[NR-eGR] Read 44318 PG shapes
[NR-eGR] Read 0 clock shapes
[NR-eGR] Read 0 other shapes
[NR-eGR] #Routing Blockages  : 0
[NR-eGR] #Instance Blockages : 0
[NR-eGR] #PG Blockages       : 44318
[NR-eGR] #Halo Blockages     : 0
[NR-eGR] #Boundary Blockages : 0
[NR-eGR] #Clock Blockages    : 0
[NR-eGR] #Other Blockages    : 0
[NR-eGR] Num Prerouted Nets = 0  Num Prerouted Wires = 0
[NR-eGR] Read 32042 nets ( ignored 32028 )
[NR-eGR] Connected 0 must-join pins/ports
[NR-eGR] There are 14 clock nets ( 14 with NDR ).
[NR-eGR] ============ Routing rule table ============
[NR-eGR] Rule id: 0  Nets: 14
[NR-eGR] ========================================
[NR-eGR] 
[NR-eGR] Layer group 1: route 14 net(s) in layer range [3, 4]
[NR-eGR] Early Global Route overflow of layer group 1: 0.00% H + 0.00% V. EstWL: 5.299290e+03um
[NR-eGR] Create a new net group with 12 nets and layer range [3, 6]
[NR-eGR] Layer group 2: route 12 net(s) in layer range [3, 6]
[NR-eGR] Early Global Route overflow of layer group 2: 0.00% H + 0.00% V. EstWL: 8.772300e+03um
[NR-eGR] Create a new net group with 8 nets and layer range [3, 8]
[NR-eGR] Layer group 3: route 8 net(s) in layer range [3, 8]
[NR-eGR] Early Global Route overflow of layer group 3: 0.00% H + 0.00% V. EstWL: 1.111500e+04um
[NR-eGR] Create a new net group with 8 nets and layer range [3, 10]
[NR-eGR] Layer group 4: route 8 net(s) in layer range [3, 10]
[NR-eGR] Early Global Route overflow of layer group 4: 0.00% H + 0.00% V. EstWL: 1.341837e+04um
[NR-eGR] Create a new net group with 2 nets and layer range [3, 11]
[NR-eGR] Layer group 5: route 2 net(s) in layer range [3, 11]
[NR-eGR] Early Global Route overflow of layer group 5: 0.00% H + 0.00% V. EstWL: 1.401174e+04um
[NR-eGR] Create a new net group with 2 nets and layer range [2, 11]
[NR-eGR] Layer group 6: route 2 net(s) in layer range [2, 11]
[NR-eGR] Early Global Route overflow of layer group 6: 0.00% H + 0.00% V. EstWL: 1.520532e+04um
[NR-eGR] Congestion Analysis By layer: (blocked Gcells are excluded) 
[NR-eGR]                        OverCon            
[NR-eGR]                         #Gcell     %Gcell
[NR-eGR]        Layer               (1)    OverCon
[NR-eGR] ----------------------------------------------
[NR-eGR]  Metal1 ( 1)         0( 0.00%)   ( 0.00%) 
[NR-eGR]  Metal2 ( 2)         0( 0.00%)   ( 0.00%) 
[NR-eGR]  Metal3 ( 3)         0( 0.00%)   ( 0.00%) 
[NR-eGR]  Metal4 ( 4)         0( 0.00%)   ( 0.00%) 
[NR-eGR]  Metal5 ( 5)         0( 0.00%)   ( 0.00%) 
[NR-eGR]  Metal6 ( 6)         0( 0.00%)   ( 0.00%) 
[NR-eGR]  Metal7 ( 7)         0( 0.00%)   ( 0.00%) 
[NR-eGR]  Metal8 ( 8)         0( 0.00%)   ( 0.00%) 
[NR-eGR]  Metal9 ( 9)         0( 0.00%)   ( 0.00%) 
[NR-eGR] Metal10 (10)         0( 0.00%)   ( 0.00%) 
[NR-eGR] Metal11 (11)         0( 0.00%)   ( 0.00%) 
[NR-eGR] ----------------------------------------------
[NR-eGR]        Total         0( 0.00%)   ( 0.00%) 
[NR-eGR] 
[NR-eGR] Overflow after Early Global Route 0.00% H + 0.00% V
[NR-eGR]                  Length (um)    Vias 
[NR-eGR] -------------------------------------
[NR-eGR]  Metal1   (1H)             0   92220 
[NR-eGR]  Metal2   (2V)        138559  131082 
[NR-eGR]  Metal3   (3H)        171447    9895 
[NR-eGR]  Metal4   (4V)         52911    1915 
[NR-eGR]  Metal5   (5H)         18430      88 
[NR-eGR]  Metal6   (6V)          1655      25 
[NR-eGR]  Metal7   (7H)             1      23 
[NR-eGR]  Metal8   (8V)             0      23 
[NR-eGR]  Metal9   (9H)            11      23 
[NR-eGR]  Metal10  (10V)           33       0 
[NR-eGR]  Metal11  (11H)            0       0 
[NR-eGR] -------------------------------------
[NR-eGR]           Total       383046  235294 
[NR-eGR] --------------------------------------------------------------------------
[NR-eGR] Total half perimeter of net bounding box: 303524um
[NR-eGR] Total length: 383046um, number of vias: 235294
[NR-eGR] --------------------------------------------------------------------------
[NR-eGR] Total eGR-routed clock nets wire length: 5300um, number of vias: 3288
[NR-eGR] --------------------------------------------------------------------------
[NR-eGR] Report for selected net(s) only.
[NR-eGR]                  Length (um)  Vias 
[NR-eGR] -----------------------------------
[NR-eGR]  Metal1   (1H)             0  1159 
[NR-eGR]  Metal2   (2V)           928  1362 
[NR-eGR]  Metal3   (3H)          2536   614 
[NR-eGR]  Metal4   (4V)          1706    36 
[NR-eGR]  Metal5   (5H)            81    25 
[NR-eGR]  Metal6   (6V)             5    23 
[NR-eGR]  Metal7   (7H)             0    23 
[NR-eGR]  Metal8   (8V)             0    23 
[NR-eGR]  Metal9   (9H)            11    23 
[NR-eGR]  Metal10  (10V)           33     0 
[NR-eGR]  Metal11  (11H)            0     0 
[NR-eGR] -----------------------------------
[NR-eGR]           Total         5300  3288 
[NR-eGR] --------------------------------------------------------------------------
[NR-eGR] Total half perimeter of net bounding box: 2402um
[NR-eGR] Total length: 5300um, number of vias: 3288
[NR-eGR] --------------------------------------------------------------------------
[NR-eGR] Total routed clock nets wire length: 5300um, number of vias: 3288
[NR-eGR] --------------------------------------------------------------------------
[NR-eGR] Finished Early Global Route kernel ( CPU: 0.46 sec, Real: 0.77 sec, Curr Mem: 2257.06 MB )
      Early Global Route - eGR only step done. (took cpu=0:00:00.5 real=0:00:00.8)
      flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:*                                                                   Early Global Route - eGR only step
    Routing using eGR only done.
Net route status summary:
  Clock:        14 (unrouted=0, trialRouted=0, noStatus=0, routed=14, fixed=0, [crossesIlmBoundary=0, tooFewTerms=0, (crossesIlmBoundary AND tooFewTerms=0)])
  Non-clock: 32192 (unrouted=164, trialRouted=32028, noStatus=0, routed=0, fixed=0, [crossesIlmBoundary=0, tooFewTerms=164, (crossesIlmBoundary AND tooFewTerms=0)])

CCOPT: Done with clock implementation routing.

  Clock implementation routing done.
  CCOpt: Starting congestion repair using flow wrapper...
    Congestion Repair...
*** IncrReplace #1 [begin] (CTS #1 / ccopt_design #1) : totSession cpu/real = 0:04:11.4/0:04:15.9 (1.0), mem = 2257.1M
Info: Disable timing driven in postCTS congRepair.

Starting congRepair ...
[NR-eGR] Track table information for default rule: 
[NR-eGR] Metal1 has single uniform track structure
[NR-eGR] Metal2 has single uniform track structure
[NR-eGR] Metal3 has single uniform track structure
[NR-eGR] Metal4 has single uniform track structure
[NR-eGR] Metal5 has single uniform track structure
[NR-eGR] Metal6 has single uniform track structure
[NR-eGR] Metal7 has single uniform track structure
[NR-eGR] Metal8 has single uniform track structure
[NR-eGR] Metal9 has single uniform track structure
[NR-eGR] Metal10 has single uniform track structure
[NR-eGR] Metal11 has single uniform track structure
[NR-eGR] Read 43156 PG shapes
[NR-eGR] Read 0 clock shapes
[NR-eGR] Read 0 other shapes
[NR-eGR] #Routing Blockages  : 0
[NR-eGR] #Instance Blockages : 0
[NR-eGR] #PG Blockages       : 43156
[NR-eGR] #Halo Blockages     : 0
[NR-eGR] #Boundary Blockages : 0
[NR-eGR] #Clock Blockages    : 0
[NR-eGR] #Other Blockages    : 0
[NR-eGR] Num Prerouted Nets = 14  Num Prerouted Wires = 3291
[NR-eGR] Read 32042 nets ( ignored 14 )
[NR-eGR] ============ Routing rule table ============
[NR-eGR] Rule id: 1  Nets: 32028
[NR-eGR] ========================================
[NR-eGR] 
[NR-eGR] Layer group 1: route 32028 net(s) in layer range [2, 11]
[NR-eGR] Early Global Route overflow of layer group 1: 0.00% H + 0.00% V. EstWL: 3.539050e+05um
[NR-eGR] Congestion Analysis By layer: (blocked Gcells are excluded) 
[NR-eGR]                        OverCon            
[NR-eGR]                         #Gcell     %Gcell
[NR-eGR]        Layer             (1-2)    OverCon
[NR-eGR] ----------------------------------------------
[NR-eGR]  Metal1 ( 1)         0( 0.00%)   ( 0.00%) 
[NR-eGR]  Metal2 ( 2)        10( 0.02%)   ( 0.02%) 
[NR-eGR]  Metal3 ( 3)         1( 0.00%)   ( 0.00%) 
[NR-eGR]  Metal4 ( 4)         0( 0.00%)   ( 0.00%) 
[NR-eGR]  Metal5 ( 5)         0( 0.00%)   ( 0.00%) 
[NR-eGR]  Metal6 ( 6)         0( 0.00%)   ( 0.00%) 
[NR-eGR]  Metal7 ( 7)         0( 0.00%)   ( 0.00%) 
[NR-eGR]  Metal8 ( 8)         0( 0.00%)   ( 0.00%) 
[NR-eGR]  Metal9 ( 9)         0( 0.00%)   ( 0.00%) 
[NR-eGR] Metal10 (10)         0( 0.00%)   ( 0.00%) 
[NR-eGR] Metal11 (11)         0( 0.00%)   ( 0.00%) 
[NR-eGR] ----------------------------------------------
[NR-eGR]        Total        11( 0.00%)   ( 0.00%) 
[NR-eGR] 
[NR-eGR] Overflow after Early Global Route 0.00% H + 0.00% V
Early Global Route congestion estimation runtime: 0.79 seconds, mem = 2283.8M
Local HotSpot Analysis: normalized max congestion hotspot area = 0.00, normalized total congestion hotspot area = 0.00 (area is in unit of 4 std-cell row bins)
Skipped repairing congestion.
[NR-eGR]                  Length (um)    Vias 
[NR-eGR] -------------------------------------
[NR-eGR]  Metal1   (1H)             0   92220 
[NR-eGR]  Metal2   (2V)        137102  130903 
[NR-eGR]  Metal3   (3H)        168751   10225 
[NR-eGR]  Metal4   (4V)         53242    2343 
[NR-eGR]  Metal5   (5H)         21197     168 
[NR-eGR]  Metal6   (6V)          2684      25 
[NR-eGR]  Metal7   (7H)             4      23 
[NR-eGR]  Metal8   (8V)             0      23 
[NR-eGR]  Metal9   (9H)            11      23 
[NR-eGR]  Metal10  (10V)           33       0 
[NR-eGR]  Metal11  (11H)            0       0 
[NR-eGR] -------------------------------------
[NR-eGR]           Total       383024  235953 
[NR-eGR] --------------------------------------------------------------------------
[NR-eGR] Total half perimeter of net bounding box: 303524um
[NR-eGR] Total length: 383024um, number of vias: 235953
[NR-eGR] --------------------------------------------------------------------------
[NR-eGR] Total eGR-routed clock nets wire length: 0um, number of vias: 0
[NR-eGR] --------------------------------------------------------------------------
Early Global Route wiring runtime: 0.51 seconds, mem = 2271.8M
Tdgp not successfully inited but do clear! skip clearing
End of congRepair (cpu=0:00:01.0, real=0:00:02.0)
*** IncrReplace #1 [finish] (CTS #1 / ccopt_design #1) : cpu/real = 0:00:01.0/0:00:01.3 (0.8), totSession cpu/real = 0:04:12.4/0:04:17.3 (1.0), mem = 2271.8M
    Congestion Repair done. (took cpu=0:00:01.0 real=0:00:01.3)
      flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:*                                                                   Congestion Repair
  CCOpt: Starting congestion repair using flow wrapper done.
  Leaving CCOpt scope - Early Global Route done. (took cpu=0:00:01.8 real=0:00:02.4)
  Leaving CCOpt scope - extractRC...
  Updating RC parasitics by calling: "extract_rc -noRouteCheck"...
Extraction called for design 'filter_top' of instances=23781 and nets=32206 using extraction engine 'pre_route' .
pre_route RC Extraction called for design filter_top.
RC Extraction called in multi-corner(1) mode.
RCMode: PreRoute
      RC Corner Indexes            0   
Capacitance Scaling Factor   : 1.00000 
Resistance Scaling Factor    : 1.00000 
Clock Cap. Scaling Factor    : 1.00000 
Clock Res. Scaling Factor    : 1.00000 
Shrink Factor                : 1.00000
PreRoute extraction is honoring NDR/Shielding/ExtraSpace for clock nets.
Using Quantus QRC technology file ...
Updating RC grid for preRoute extraction ...
Initializing multi-corner resistance tables ...
PreRoute RC Extraction DONE (CPU Time: 0:00:00.2  Real Time: 0:00:00.0  MEM: 2271.758M)
  Updating RC parasitics by calling: "extract_rc -noRouteCheck" done.
  Leaving CCOpt scope - extractRC done. (took cpu=0:00:00.2 real=0:00:00.2)
  Clock tree timing engine global stage delay update for default_dc:both.late...
  Clock tree timing engine global stage delay update for default_dc:both.late done. (took cpu=0:00:00.0 real=0:00:00.0)
  Clock DAG stats after clustering cong repair call:
    cell counts      : b=13, i=0, icg=0, dcg=0, l=0, total=13
    sink counts      : regular=1133, enable_latch=0, load_capacitance=0, antenna=0, node_sink=0, total=1133
    misc counts      : r=1, pp=0
    cell areas       : b=87.210um^2, i=0.000um^2, icg=0.000um^2, dcg=0.000um^2, l=0.000um^2, total=87.210um^2
    cell capacitance : b=0.026pF, i=0.000pF, icg=0.000pF, dcg=0.000pF, l=0.000pF, total=0.026pF
    sink capacitance : total=0.349pF, avg=0.000pF, sd=0.000pF, min=0.000pF, max=0.000pF
    wire capacitance : top=0.000pF, trunk=0.065pF, leaf=0.331pF, total=0.397pF
    wire lengths     : top=0.000um, trunk=1007.615um, leaf=4206.498um, total=5214.113um
    hp wire lengths  : top=0.000um, trunk=0.000um, leaf=1881.625um, total=1881.625um
  Clock DAG net violations after clustering cong repair call: none
  Clock DAG primary half-corner transition distribution after clustering cong repair call:
    Trunk : target=0.030ns count=1 avg=0.024ns sd=0.000ns min=0.024ns max=0.024ns {0 <= 0.018ns, 1 <= 0.024ns, 0 <= 0.027ns, 0 <= 0.029ns, 0 <= 0.030ns}
    Leaf  : target=0.030ns count=13 avg=0.028ns sd=0.001ns min=0.026ns max=0.029ns {0 <= 0.018ns, 0 <= 0.024ns, 5 <= 0.027ns, 7 <= 0.029ns, 1 <= 0.030ns}
  Clock DAG library cell distribution after clustering cong repair call {count}:
     Bufs: CLKBUFX16: 12 CLKBUFX12: 1 
  Primary reporting skew groups after clustering cong repair call:
    skew_group Clk/default_const: insertion delay [min=0.028, max=0.048, avg=0.043, sd=0.004], skew [0.020 vs 0.020], 100% {0.028, 0.048} (wid=0.017 ws=0.015) (gid=0.032 gs=0.006)
  Skew group summary after clustering cong repair call:
    skew_group Clk/default_const: insertion delay [min=0.028, max=0.048, avg=0.043, sd=0.004], skew [0.020 vs 0.020], 100% {0.028, 0.048} (wid=0.017 ws=0.015) (gid=0.032 gs=0.006)
  CongRepair After Initial Clustering done. (took cpu=0:00:02.1 real=0:00:02.7)
      flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:*                                                                   CongRepair After Initial Clustering
  Stage::Clustering done. (took cpu=0:00:04.0 real=0:00:04.7)
      flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:*                                                                   Stage::Clustering
  Stage::DRV Fixing...
  Fixing clock tree slew time and max cap violations...
    Fixing clock tree overload: ...20% ...40% ...60% ...80% ...100% 
    Clock DAG stats after 'Fixing clock tree slew time and max cap violations':
      cell counts      : b=13, i=0, icg=0, dcg=0, l=0, total=13
      sink counts      : regular=1133, enable_latch=0, load_capacitance=0, antenna=0, node_sink=0, total=1133
      misc counts      : r=1, pp=0
      cell areas       : b=87.210um^2, i=0.000um^2, icg=0.000um^2, dcg=0.000um^2, l=0.000um^2, total=87.210um^2
      cell capacitance : b=0.026pF, i=0.000pF, icg=0.000pF, dcg=0.000pF, l=0.000pF, total=0.026pF
      sink capacitance : total=0.349pF, avg=0.000pF, sd=0.000pF, min=0.000pF, max=0.000pF
      wire capacitance : top=0.000pF, trunk=0.065pF, leaf=0.331pF, total=0.397pF
      wire lengths     : top=0.000um, trunk=1007.615um, leaf=4206.498um, total=5214.113um
      hp wire lengths  : top=0.000um, trunk=0.000um, leaf=1881.625um, total=1881.625um
    Clock DAG net violations after 'Fixing clock tree slew time and max cap violations': none
    Clock DAG primary half-corner transition distribution after 'Fixing clock tree slew time and max cap violations':
      Trunk : target=0.030ns count=1 avg=0.024ns sd=0.000ns min=0.024ns max=0.024ns {0 <= 0.018ns, 1 <= 0.024ns, 0 <= 0.027ns, 0 <= 0.029ns, 0 <= 0.030ns}
      Leaf  : target=0.030ns count=13 avg=0.028ns sd=0.001ns min=0.026ns max=0.029ns {0 <= 0.018ns, 0 <= 0.024ns, 5 <= 0.027ns, 7 <= 0.029ns, 1 <= 0.030ns}
    Clock DAG library cell distribution after 'Fixing clock tree slew time and max cap violations' {count}:
       Bufs: CLKBUFX16: 12 CLKBUFX12: 1 
    Primary reporting skew groups after 'Fixing clock tree slew time and max cap violations':
      skew_group Clk/default_const: insertion delay [min=0.028, max=0.048], skew [0.020 vs 0.020]
    Skew group summary after 'Fixing clock tree slew time and max cap violations':
      skew_group Clk/default_const: insertion delay [min=0.028, max=0.048], skew [0.020 vs 0.020]
    Legalizer API calls during this step: 0 succeeded with high effort: 0 succeeded with medium effort: 0 succeeded with low effort: 0 succeeded with basic effort: 0 succeeded with basic unbounded effort: 0
  Fixing clock tree slew time and max cap violations done. (took cpu=0:00:00.0 real=0:00:00.0)
      flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:*                                                                   Fixing clock tree slew time and max cap violations
  Fixing clock tree slew time and max cap violations - detailed pass...
    Fixing clock tree overload: ...20% ...40% ...60% ...80% ...100% 
    Clock DAG stats after 'Fixing clock tree slew time and max cap violations - detailed pass':
      cell counts      : b=13, i=0, icg=0, dcg=0, l=0, total=13
      sink counts      : regular=1133, enable_latch=0, load_capacitance=0, antenna=0, node_sink=0, total=1133
      misc counts      : r=1, pp=0
      cell areas       : b=87.210um^2, i=0.000um^2, icg=0.000um^2, dcg=0.000um^2, l=0.000um^2, total=87.210um^2
      cell capacitance : b=0.026pF, i=0.000pF, icg=0.000pF, dcg=0.000pF, l=0.000pF, total=0.026pF
      sink capacitance : total=0.349pF, avg=0.000pF, sd=0.000pF, min=0.000pF, max=0.000pF
      wire capacitance : top=0.000pF, trunk=0.065pF, leaf=0.331pF, total=0.397pF
      wire lengths     : top=0.000um, trunk=1007.615um, leaf=4206.498um, total=5214.113um
      hp wire lengths  : top=0.000um, trunk=0.000um, leaf=1881.625um, total=1881.625um
    Clock DAG net violations after 'Fixing clock tree slew time and max cap violations - detailed pass': none
    Clock DAG primary half-corner transition distribution after 'Fixing clock tree slew time and max cap violations - detailed pass':
      Trunk : target=0.030ns count=1 avg=0.024ns sd=0.000ns min=0.024ns max=0.024ns {0 <= 0.018ns, 1 <= 0.024ns, 0 <= 0.027ns, 0 <= 0.029ns, 0 <= 0.030ns}
      Leaf  : target=0.030ns count=13 avg=0.028ns sd=0.001ns min=0.026ns max=0.029ns {0 <= 0.018ns, 0 <= 0.024ns, 5 <= 0.027ns, 7 <= 0.029ns, 1 <= 0.030ns}
    Clock DAG library cell distribution after 'Fixing clock tree slew time and max cap violations - detailed pass' {count}:
       Bufs: CLKBUFX16: 12 CLKBUFX12: 1 
    Primary reporting skew groups after 'Fixing clock tree slew time and max cap violations - detailed pass':
      skew_group Clk/default_const: insertion delay [min=0.028, max=0.048, avg=0.043, sd=0.004], skew [0.020 vs 0.020], 100% {0.028, 0.048} (wid=0.017 ws=0.015) (gid=0.032 gs=0.006)
    Skew group summary after 'Fixing clock tree slew time and max cap violations - detailed pass':
      skew_group Clk/default_const: insertion delay [min=0.028, max=0.048, avg=0.043, sd=0.004], skew [0.020 vs 0.020], 100% {0.028, 0.048} (wid=0.017 ws=0.015) (gid=0.032 gs=0.006)
    Legalizer API calls during this step: 0 succeeded with high effort: 0 succeeded with medium effort: 0 succeeded with low effort: 0 succeeded with basic effort: 0 succeeded with basic unbounded effort: 0
  Fixing clock tree slew time and max cap violations - detailed pass done. (took cpu=0:00:00.0 real=0:00:00.0)
      flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:*                                                                   Fixing clock tree slew time and max cap violations - detailed pass
  Stage::DRV Fixing done. (took cpu=0:00:00.1 real=0:00:00.1)
      flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:*                                                                   Stage::DRV Fixing
  Stage::Insertion Delay Reduction...
  Removing unnecessary root buffering...
    Clock DAG stats after 'Removing unnecessary root buffering':
      cell counts      : b=13, i=0, icg=0, dcg=0, l=0, total=13
      sink counts      : regular=1133, enable_latch=0, load_capacitance=0, antenna=0, node_sink=0, total=1133
      misc counts      : r=1, pp=0
      cell areas       : b=87.210um^2, i=0.000um^2, icg=0.000um^2, dcg=0.000um^2, l=0.000um^2, total=87.210um^2
      cell capacitance : b=0.026pF, i=0.000pF, icg=0.000pF, dcg=0.000pF, l=0.000pF, total=0.026pF
      sink capacitance : total=0.349pF, avg=0.000pF, sd=0.000pF, min=0.000pF, max=0.000pF
      wire capacitance : top=0.000pF, trunk=0.065pF, leaf=0.331pF, total=0.397pF
      wire lengths     : top=0.000um, trunk=1007.615um, leaf=4206.498um, total=5214.113um
      hp wire lengths  : top=0.000um, trunk=0.000um, leaf=1881.625um, total=1881.625um
    Clock DAG net violations after 'Removing unnecessary root buffering': none
    Clock DAG primary half-corner transition distribution after 'Removing unnecessary root buffering':
      Trunk : target=0.030ns count=1 avg=0.024ns sd=0.000ns min=0.024ns max=0.024ns {0 <= 0.018ns, 1 <= 0.024ns, 0 <= 0.027ns, 0 <= 0.029ns, 0 <= 0.030ns}
      Leaf  : target=0.030ns count=13 avg=0.028ns sd=0.001ns min=0.026ns max=0.029ns {0 <= 0.018ns, 0 <= 0.024ns, 5 <= 0.027ns, 7 <= 0.029ns, 1 <= 0.030ns}
    Clock DAG library cell distribution after 'Removing unnecessary root buffering' {count}:
       Bufs: CLKBUFX16: 12 CLKBUFX12: 1 
    Primary reporting skew groups after 'Removing unnecessary root buffering':
      skew_group Clk/default_const: insertion delay [min=0.028, max=0.048], skew [0.020 vs 0.020]
    Skew group summary after 'Removing unnecessary root buffering':
      skew_group Clk/default_const: insertion delay [min=0.028, max=0.048], skew [0.020 vs 0.020]
    Legalizer API calls during this step: 0 succeeded with high effort: 0 succeeded with medium effort: 0 succeeded with low effort: 0 succeeded with basic effort: 0 succeeded with basic unbounded effort: 0
  Removing unnecessary root buffering done. (took cpu=0:00:00.0 real=0:00:00.0)
      flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:*                                                                   Removing unnecessary root buffering
  Removing unconstrained drivers...
    Clock DAG stats after 'Removing unconstrained drivers':
      cell counts      : b=13, i=0, icg=0, dcg=0, l=0, total=13
      sink counts      : regular=1133, enable_latch=0, load_capacitance=0, antenna=0, node_sink=0, total=1133
      misc counts      : r=1, pp=0
      cell areas       : b=87.210um^2, i=0.000um^2, icg=0.000um^2, dcg=0.000um^2, l=0.000um^2, total=87.210um^2
      cell capacitance : b=0.026pF, i=0.000pF, icg=0.000pF, dcg=0.000pF, l=0.000pF, total=0.026pF
      sink capacitance : total=0.349pF, avg=0.000pF, sd=0.000pF, min=0.000pF, max=0.000pF
      wire capacitance : top=0.000pF, trunk=0.065pF, leaf=0.331pF, total=0.397pF
      wire lengths     : top=0.000um, trunk=1007.615um, leaf=4206.498um, total=5214.113um
      hp wire lengths  : top=0.000um, trunk=0.000um, leaf=1881.625um, total=1881.625um
    Clock DAG net violations after 'Removing unconstrained drivers': none
    Clock DAG primary half-corner transition distribution after 'Removing unconstrained drivers':
      Trunk : target=0.030ns count=1 avg=0.024ns sd=0.000ns min=0.024ns max=0.024ns {0 <= 0.018ns, 1 <= 0.024ns, 0 <= 0.027ns, 0 <= 0.029ns, 0 <= 0.030ns}
      Leaf  : target=0.030ns count=13 avg=0.028ns sd=0.001ns min=0.026ns max=0.029ns {0 <= 0.018ns, 0 <= 0.024ns, 5 <= 0.027ns, 7 <= 0.029ns, 1 <= 0.030ns}
    Clock DAG library cell distribution after 'Removing unconstrained drivers' {count}:
       Bufs: CLKBUFX16: 12 CLKBUFX12: 1 
    Primary reporting skew groups after 'Removing unconstrained drivers':
      skew_group Clk/default_const: insertion delay [min=0.028, max=0.048], skew [0.020 vs 0.020]
    Skew group summary after 'Removing unconstrained drivers':
      skew_group Clk/default_const: insertion delay [min=0.028, max=0.048], skew [0.020 vs 0.020]
    Legalizer API calls during this step: 0 succeeded with high effort: 0 succeeded with medium effort: 0 succeeded with low effort: 0 succeeded with basic effort: 0 succeeded with basic unbounded effort: 0
  Removing unconstrained drivers done. (took cpu=0:00:00.0 real=0:00:00.0)
      flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:*                                                                   Removing unconstrained drivers
  Reducing insertion delay 1...
    Clock DAG stats after 'Reducing insertion delay 1':
      cell counts      : b=13, i=0, icg=0, dcg=0, l=0, total=13
      sink counts      : regular=1133, enable_latch=0, load_capacitance=0, antenna=0, node_sink=0, total=1133
      misc counts      : r=1, pp=0
      cell areas       : b=87.210um^2, i=0.000um^2, icg=0.000um^2, dcg=0.000um^2, l=0.000um^2, total=87.210um^2
      cell capacitance : b=0.026pF, i=0.000pF, icg=0.000pF, dcg=0.000pF, l=0.000pF, total=0.026pF
      sink capacitance : total=0.349pF, avg=0.000pF, sd=0.000pF, min=0.000pF, max=0.000pF
      wire capacitance : top=0.000pF, trunk=0.065pF, leaf=0.331pF, total=0.397pF
      wire lengths     : top=0.000um, trunk=1007.615um, leaf=4206.498um, total=5214.113um
      hp wire lengths  : top=0.000um, trunk=0.000um, leaf=1881.625um, total=1881.625um
    Clock DAG net violations after 'Reducing insertion delay 1': none
    Clock DAG primary half-corner transition distribution after 'Reducing insertion delay 1':
      Trunk : target=0.030ns count=1 avg=0.024ns sd=0.000ns min=0.024ns max=0.024ns {0 <= 0.018ns, 1 <= 0.024ns, 0 <= 0.027ns, 0 <= 0.029ns, 0 <= 0.030ns}
      Leaf  : target=0.030ns count=13 avg=0.028ns sd=0.001ns min=0.026ns max=0.029ns {0 <= 0.018ns, 0 <= 0.024ns, 5 <= 0.027ns, 7 <= 0.029ns, 1 <= 0.030ns}
    Clock DAG library cell distribution after 'Reducing insertion delay 1' {count}:
       Bufs: CLKBUFX16: 12 CLKBUFX12: 1 
    Primary reporting skew groups after 'Reducing insertion delay 1':
      skew_group Clk/default_const: insertion delay [min=0.028, max=0.048], skew [0.020 vs 0.020]
    Skew group summary after 'Reducing insertion delay 1':
      skew_group Clk/default_const: insertion delay [min=0.028, max=0.048], skew [0.020 vs 0.020]
    Legalizer API calls during this step: 3 succeeded with high effort: 3 succeeded with medium effort: 0 succeeded with low effort: 0 succeeded with basic effort: 0 succeeded with basic unbounded effort: 0
  Reducing insertion delay 1 done. (took cpu=0:00:00.1 real=0:00:00.1)
      flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:*                                                                   Reducing insertion delay 1
  Removing longest path buffering...
    Clock DAG stats after 'Removing longest path buffering':
      cell counts      : b=13, i=0, icg=0, dcg=0, l=0, total=13
      sink counts      : regular=1133, enable_latch=0, load_capacitance=0, antenna=0, node_sink=0, total=1133
      misc counts      : r=1, pp=0
      cell areas       : b=87.210um^2, i=0.000um^2, icg=0.000um^2, dcg=0.000um^2, l=0.000um^2, total=87.210um^2
      cell capacitance : b=0.026pF, i=0.000pF, icg=0.000pF, dcg=0.000pF, l=0.000pF, total=0.026pF
      sink capacitance : total=0.349pF, avg=0.000pF, sd=0.000pF, min=0.000pF, max=0.000pF
      wire capacitance : top=0.000pF, trunk=0.065pF, leaf=0.331pF, total=0.397pF
      wire lengths     : top=0.000um, trunk=1007.615um, leaf=4206.498um, total=5214.113um
      hp wire lengths  : top=0.000um, trunk=0.000um, leaf=1881.625um, total=1881.625um
    Clock DAG net violations after 'Removing longest path buffering': none
    Clock DAG primary half-corner transition distribution after 'Removing longest path buffering':
      Trunk : target=0.030ns count=1 avg=0.024ns sd=0.000ns min=0.024ns max=0.024ns {0 <= 0.018ns, 1 <= 0.024ns, 0 <= 0.027ns, 0 <= 0.029ns, 0 <= 0.030ns}
      Leaf  : target=0.030ns count=13 avg=0.028ns sd=0.001ns min=0.026ns max=0.029ns {0 <= 0.018ns, 0 <= 0.024ns, 5 <= 0.027ns, 7 <= 0.029ns, 1 <= 0.030ns}
    Clock DAG library cell distribution after 'Removing longest path buffering' {count}:
       Bufs: CLKBUFX16: 12 CLKBUFX12: 1 
    Primary reporting skew groups after 'Removing longest path buffering':
      skew_group Clk/default_const: insertion delay [min=0.028, max=0.048], skew [0.020 vs 0.020]
    Skew group summary after 'Removing longest path buffering':
      skew_group Clk/default_const: insertion delay [min=0.028, max=0.048], skew [0.020 vs 0.020]
    Legalizer API calls during this step: 0 succeeded with high effort: 0 succeeded with medium effort: 0 succeeded with low effort: 0 succeeded with basic effort: 0 succeeded with basic unbounded effort: 0
  Removing longest path buffering done. (took cpu=0:00:00.0 real=0:00:00.0)
      flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:*                                                                   Removing longest path buffering
  Reducing insertion delay 2...
    Clock DAG stats after 'Reducing insertion delay 2':
      cell counts      : b=13, i=0, icg=0, dcg=0, l=0, total=13
      sink counts      : regular=1133, enable_latch=0, load_capacitance=0, antenna=0, node_sink=0, total=1133
      misc counts      : r=1, pp=0
      cell areas       : b=87.210um^2, i=0.000um^2, icg=0.000um^2, dcg=0.000um^2, l=0.000um^2, total=87.210um^2
      cell capacitance : b=0.026pF, i=0.000pF, icg=0.000pF, dcg=0.000pF, l=0.000pF, total=0.026pF
      sink capacitance : total=0.349pF, avg=0.000pF, sd=0.000pF, min=0.000pF, max=0.000pF
      wire capacitance : top=0.000pF, trunk=0.062pF, leaf=0.333pF, total=0.395pF
      wire lengths     : top=0.000um, trunk=958.576um, leaf=4224.381um, total=5182.956um
      hp wire lengths  : top=0.000um, trunk=0.000um, leaf=1902.125um, total=1902.125um
    Clock DAG net violations after 'Reducing insertion delay 2': none
    Clock DAG primary half-corner transition distribution after 'Reducing insertion delay 2':
      Trunk : target=0.030ns count=1 avg=0.022ns sd=0.000ns min=0.022ns max=0.022ns {0 <= 0.018ns, 1 <= 0.024ns, 0 <= 0.027ns, 0 <= 0.029ns, 0 <= 0.030ns}
      Leaf  : target=0.030ns count=13 avg=0.028ns sd=0.001ns min=0.026ns max=0.029ns {0 <= 0.018ns, 0 <= 0.024ns, 5 <= 0.027ns, 8 <= 0.029ns, 0 <= 0.030ns}
    Clock DAG library cell distribution after 'Reducing insertion delay 2' {count}:
       Bufs: CLKBUFX16: 12 CLKBUFX12: 1 
    Primary reporting skew groups after 'Reducing insertion delay 2':
      skew_group Clk/default_const: insertion delay [min=0.028, max=0.046, avg=0.042, sd=0.003], skew [0.018 vs 0.020], 100% {0.028, 0.046} (wid=0.016 ws=0.014) (gid=0.031 gs=0.005)
    Skew group summary after 'Reducing insertion delay 2':
      skew_group Clk/default_const: insertion delay [min=0.028, max=0.046, avg=0.042, sd=0.003], skew [0.018 vs 0.020], 100% {0.028, 0.046} (wid=0.016 ws=0.014) (gid=0.031 gs=0.005)
    Legalizer API calls during this step: 40 succeeded with high effort: 40 succeeded with medium effort: 0 succeeded with low effort: 0 succeeded with basic effort: 0 succeeded with basic unbounded effort: 0
  Reducing insertion delay 2 done. (took cpu=0:00:00.4 real=0:00:00.4)
      flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:*                                                                   Reducing insertion delay 2
  Stage::Insertion Delay Reduction done. (took cpu=0:00:00.7 real=0:00:00.7)
      flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:*                                                                   Stage::Insertion Delay Reduction
  CCOpt::Phase::Construction done. (took cpu=0:00:05.0 real=0:00:05.6)
      flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:*                                                                   CCOpt::Phase::Construction
  CCOpt::Phase::Implementation...
  Stage::Reducing Power...
  Improving clock tree routing...
    Iteration 1...
    Iteration 1 done.
    Clock DAG stats after 'Improving clock tree routing':
      cell counts      : b=13, i=0, icg=0, dcg=0, l=0, total=13
      sink counts      : regular=1133, enable_latch=0, load_capacitance=0, antenna=0, node_sink=0, total=1133
      misc counts      : r=1, pp=0
      cell areas       : b=87.210um^2, i=0.000um^2, icg=0.000um^2, dcg=0.000um^2, l=0.000um^2, total=87.210um^2
      cell capacitance : b=0.026pF, i=0.000pF, icg=0.000pF, dcg=0.000pF, l=0.000pF, total=0.026pF
      sink capacitance : total=0.349pF, avg=0.000pF, sd=0.000pF, min=0.000pF, max=0.000pF
      wire capacitance : top=0.000pF, trunk=0.062pF, leaf=0.333pF, total=0.395pF
      wire lengths     : top=0.000um, trunk=958.576um, leaf=4224.381um, total=5182.956um
      hp wire lengths  : top=0.000um, trunk=0.000um, leaf=1902.125um, total=1902.125um
    Clock DAG net violations after 'Improving clock tree routing': none
    Clock DAG primary half-corner transition distribution after 'Improving clock tree routing':
      Trunk : target=0.030ns count=1 avg=0.022ns sd=0.000ns min=0.022ns max=0.022ns {0 <= 0.018ns, 1 <= 0.024ns, 0 <= 0.027ns, 0 <= 0.029ns, 0 <= 0.030ns}
      Leaf  : target=0.030ns count=13 avg=0.028ns sd=0.001ns min=0.026ns max=0.029ns {0 <= 0.018ns, 0 <= 0.024ns, 5 <= 0.027ns, 8 <= 0.029ns, 0 <= 0.030ns}
    Clock DAG library cell distribution after 'Improving clock tree routing' {count}:
       Bufs: CLKBUFX16: 12 CLKBUFX12: 1 
    Primary reporting skew groups after 'Improving clock tree routing':
      skew_group Clk/default_const: insertion delay [min=0.028, max=0.046], skew [0.018 vs 0.020]
    Skew group summary after 'Improving clock tree routing':
      skew_group Clk/default_const: insertion delay [min=0.028, max=0.046], skew [0.018 vs 0.020]
    Legalizer API calls during this step: 0 succeeded with high effort: 0 succeeded with medium effort: 0 succeeded with low effort: 0 succeeded with basic effort: 0 succeeded with basic unbounded effort: 0
  Improving clock tree routing done. (took cpu=0:00:00.0 real=0:00:00.0)
      flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:*                                                                   Improving clock tree routing
  Reducing clock tree power 1...
    Resizing gates:     ...20% ...40% ...60% ...80% ...Legalizing clock trees...
    Legalizing clock trees done. (took cpu=0:00:00.0 real=0:00:00.0)
      flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:*                                                                   Legalizing clock trees
    100% 
    Clock DAG stats after 'Reducing clock tree power 1':
      cell counts      : b=13, i=0, icg=0, dcg=0, l=0, total=13
      sink counts      : regular=1133, enable_latch=0, load_capacitance=0, antenna=0, node_sink=0, total=1133
      misc counts      : r=1, pp=0
      cell areas       : b=87.210um^2, i=0.000um^2, icg=0.000um^2, dcg=0.000um^2, l=0.000um^2, total=87.210um^2
      cell capacitance : b=0.026pF, i=0.000pF, icg=0.000pF, dcg=0.000pF, l=0.000pF, total=0.026pF
      sink capacitance : total=0.349pF, avg=0.000pF, sd=0.000pF, min=0.000pF, max=0.000pF
      wire capacitance : top=0.000pF, trunk=0.062pF, leaf=0.333pF, total=0.395pF
      wire lengths     : top=0.000um, trunk=958.576um, leaf=4224.381um, total=5182.956um
      hp wire lengths  : top=0.000um, trunk=0.000um, leaf=1902.125um, total=1902.125um
    Clock DAG net violations after 'Reducing clock tree power 1': none
    Clock DAG primary half-corner transition distribution after 'Reducing clock tree power 1':
      Trunk : target=0.030ns count=1 avg=0.022ns sd=0.000ns min=0.022ns max=0.022ns {0 <= 0.018ns, 1 <= 0.024ns, 0 <= 0.027ns, 0 <= 0.029ns, 0 <= 0.030ns}
      Leaf  : target=0.030ns count=13 avg=0.028ns sd=0.001ns min=0.026ns max=0.029ns {0 <= 0.018ns, 0 <= 0.024ns, 5 <= 0.027ns, 8 <= 0.029ns, 0 <= 0.030ns}
    Clock DAG library cell distribution after 'Reducing clock tree power 1' {count}:
       Bufs: CLKBUFX16: 12 CLKBUFX12: 1 
    Primary reporting skew groups after 'Reducing clock tree power 1':
      skew_group Clk/default_const: insertion delay [min=0.028, max=0.046], skew [0.018 vs 0.020]
    Skew group summary after 'Reducing clock tree power 1':
      skew_group Clk/default_const: insertion delay [min=0.028, max=0.046], skew [0.018 vs 0.020]
    Legalizer API calls during this step: 26 succeeded with high effort: 26 succeeded with medium effort: 0 succeeded with low effort: 0 succeeded with basic effort: 0 succeeded with basic unbounded effort: 0
  Reducing clock tree power 1 done. (took cpu=0:00:00.1 real=0:00:00.1)
      flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:*                                                                   Reducing clock tree power 1
  Reducing clock tree power 2...
    Clock DAG stats after 'Reducing clock tree power 2':
      cell counts      : b=13, i=0, icg=0, dcg=0, l=0, total=13
      sink counts      : regular=1133, enable_latch=0, load_capacitance=0, antenna=0, node_sink=0, total=1133
      misc counts      : r=1, pp=0
      cell areas       : b=87.210um^2, i=0.000um^2, icg=0.000um^2, dcg=0.000um^2, l=0.000um^2, total=87.210um^2
      cell capacitance : b=0.026pF, i=0.000pF, icg=0.000pF, dcg=0.000pF, l=0.000pF, total=0.026pF
      sink capacitance : total=0.349pF, avg=0.000pF, sd=0.000pF, min=0.000pF, max=0.000pF
      wire capacitance : top=0.000pF, trunk=0.062pF, leaf=0.333pF, total=0.395pF
      wire lengths     : top=0.000um, trunk=958.576um, leaf=4224.381um, total=5182.956um
      hp wire lengths  : top=0.000um, trunk=0.000um, leaf=1902.125um, total=1902.125um
    Clock DAG net violations after 'Reducing clock tree power 2': none
    Clock DAG primary half-corner transition distribution after 'Reducing clock tree power 2':
      Trunk : target=0.030ns count=1 avg=0.022ns sd=0.000ns min=0.022ns max=0.022ns {0 <= 0.018ns, 1 <= 0.024ns, 0 <= 0.027ns, 0 <= 0.029ns, 0 <= 0.030ns}
      Leaf  : target=0.030ns count=13 avg=0.028ns sd=0.001ns min=0.026ns max=0.029ns {0 <= 0.018ns, 0 <= 0.024ns, 5 <= 0.027ns, 8 <= 0.029ns, 0 <= 0.030ns}
    Clock DAG library cell distribution after 'Reducing clock tree power 2' {count}:
       Bufs: CLKBUFX16: 12 CLKBUFX12: 1 
    Primary reporting skew groups after 'Reducing clock tree power 2':
      skew_group Clk/default_const: insertion delay [min=0.028, max=0.046, avg=0.042, sd=0.003], skew [0.018 vs 0.020], 100% {0.028, 0.046} (wid=0.016 ws=0.014) (gid=0.031 gs=0.005)
    Skew group summary after 'Reducing clock tree power 2':
      skew_group Clk/default_const: insertion delay [min=0.028, max=0.046, avg=0.042, sd=0.003], skew [0.018 vs 0.020], 100% {0.028, 0.046} (wid=0.016 ws=0.014) (gid=0.031 gs=0.005)
    Legalizer API calls during this step: 0 succeeded with high effort: 0 succeeded with medium effort: 0 succeeded with low effort: 0 succeeded with basic effort: 0 succeeded with basic unbounded effort: 0
  Reducing clock tree power 2 done. (took cpu=0:00:00.0 real=0:00:00.0)
      flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:*                                                                   Reducing clock tree power 2
  Stage::Reducing Power done. (took cpu=0:00:00.3 real=0:00:00.3)
      flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:*                                                                   Stage::Reducing Power
  Stage::Balancing...
  Approximately balancing fragments step...
    Resolve constraints - Approximately balancing fragments...
    Resolving skew group constraints...
      Solving LP: 1 skew groups; 2 fragments, 2 fraglets and 3 vertices; 25 variables and 66 constraints; tolerance 1
    Resolving skew group constraints done.
    Resolve constraints - Approximately balancing fragments done. (took cpu=0:00:00.1 real=0:00:00.1)
      flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:*                                                                   Resolve constraints - Approximately balancing fragments
    Estimate delay to be added in balancing - Approximately balancing fragments...
    Trial balancer estimated the amount of delay to be added in balancing: 0.000ns
    Estimate delay to be added in balancing - Approximately balancing fragments done. (took cpu=0:00:00.0 real=0:00:00.0)
      flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:*                                                                   Estimate delay to be added in balancing - Approximately balancing fragments
    Approximately balancing fragments...
      Moving gates to improve sub-tree skew...
        Tried: 15 Succeeded: 0
        Topology Tried: 0 Succeeded: 0
        0 Succeeded with SS ratio
        0 Succeeded with Lollipop: 0 with tier one, 0 with tier two. 
        Total reducing skew: 0 Average reducing skew for 0 nets : 0
        Clock DAG stats after 'Moving gates to improve sub-tree skew':
          cell counts      : b=13, i=0, icg=0, dcg=0, l=0, total=13
          sink counts      : regular=1133, enable_latch=0, load_capacitance=0, antenna=0, node_sink=0, total=1133
          misc counts      : r=1, pp=0
          cell areas       : b=87.210um^2, i=0.000um^2, icg=0.000um^2, dcg=0.000um^2, l=0.000um^2, total=87.210um^2
          cell capacitance : b=0.026pF, i=0.000pF, icg=0.000pF, dcg=0.000pF, l=0.000pF, total=0.026pF
          sink capacitance : total=0.349pF, avg=0.000pF, sd=0.000pF, min=0.000pF, max=0.000pF
          wire capacitance : top=0.000pF, trunk=0.062pF, leaf=0.333pF, total=0.395pF
          wire lengths     : top=0.000um, trunk=958.576um, leaf=4224.381um, total=5182.956um
          hp wire lengths  : top=0.000um, trunk=0.000um, leaf=1902.125um, total=1902.125um
        Clock DAG net violations after 'Moving gates to improve sub-tree skew': none
        Clock DAG primary half-corner transition distribution after 'Moving gates to improve sub-tree skew':
          Trunk : target=0.030ns count=1 avg=0.022ns sd=0.000ns min=0.022ns max=0.022ns {0 <= 0.018ns, 1 <= 0.024ns, 0 <= 0.027ns, 0 <= 0.029ns, 0 <= 0.030ns}
          Leaf  : target=0.030ns count=13 avg=0.028ns sd=0.001ns min=0.026ns max=0.029ns {0 <= 0.018ns, 0 <= 0.024ns, 5 <= 0.027ns, 8 <= 0.029ns, 0 <= 0.030ns}
        Clock DAG library cell distribution after 'Moving gates to improve sub-tree skew' {count}:
           Bufs: CLKBUFX16: 12 CLKBUFX12: 1 
        Legalizer API calls during this step: 0 succeeded with high effort: 0 succeeded with medium effort: 0 succeeded with low effort: 0 succeeded with basic effort: 0 succeeded with basic unbounded effort: 0
      Moving gates to improve sub-tree skew done. (took cpu=0:00:00.0 real=0:00:00.0)
      flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:*                                                                   Moving gates to improve sub-tree skew
      Approximately balancing fragments bottom up...
        bottom up balancing: ...20% ...40% ...60% ...80% ...100% 
        Clock DAG stats after 'Approximately balancing fragments bottom up':
          cell counts      : b=13, i=0, icg=0, dcg=0, l=0, total=13
          sink counts      : regular=1133, enable_latch=0, load_capacitance=0, antenna=0, node_sink=0, total=1133
          misc counts      : r=1, pp=0
          cell areas       : b=87.210um^2, i=0.000um^2, icg=0.000um^2, dcg=0.000um^2, l=0.000um^2, total=87.210um^2
          cell capacitance : b=0.026pF, i=0.000pF, icg=0.000pF, dcg=0.000pF, l=0.000pF, total=0.026pF
          sink capacitance : total=0.349pF, avg=0.000pF, sd=0.000pF, min=0.000pF, max=0.000pF
          wire capacitance : top=0.000pF, trunk=0.062pF, leaf=0.333pF, total=0.395pF
          wire lengths     : top=0.000um, trunk=958.576um, leaf=4224.381um, total=5182.956um
          hp wire lengths  : top=0.000um, trunk=0.000um, leaf=1902.125um, total=1902.125um
        Clock DAG net violations after 'Approximately balancing fragments bottom up': none
        Clock DAG primary half-corner transition distribution after 'Approximately balancing fragments bottom up':
          Trunk : target=0.030ns count=1 avg=0.022ns sd=0.000ns min=0.022ns max=0.022ns {0 <= 0.018ns, 1 <= 0.024ns, 0 <= 0.027ns, 0 <= 0.029ns, 0 <= 0.030ns}
          Leaf  : target=0.030ns count=13 avg=0.028ns sd=0.001ns min=0.026ns max=0.029ns {0 <= 0.018ns, 0 <= 0.024ns, 5 <= 0.027ns, 8 <= 0.029ns, 0 <= 0.030ns}
        Clock DAG library cell distribution after 'Approximately balancing fragments bottom up' {count}:
           Bufs: CLKBUFX16: 12 CLKBUFX12: 1 
        Legalizer API calls during this step: 0 succeeded with high effort: 0 succeeded with medium effort: 0 succeeded with low effort: 0 succeeded with basic effort: 0 succeeded with basic unbounded effort: 0
      Approximately balancing fragments bottom up done. (took cpu=0:00:00.1 real=0:00:00.1)
      flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:*                                                                   Approximately balancing fragments bottom up
      Approximately balancing fragments, wire and cell delays...
      Approximately balancing fragments, wire and cell delays, iteration 1...
        Clock DAG stats after Approximately balancing fragments, wire and cell delays, iteration 1:
          cell counts      : b=13, i=0, icg=0, dcg=0, l=0, total=13
          sink counts      : regular=1133, enable_latch=0, load_capacitance=0, antenna=0, node_sink=0, total=1133
          misc counts      : r=1, pp=0
          cell areas       : b=87.210um^2, i=0.000um^2, icg=0.000um^2, dcg=0.000um^2, l=0.000um^2, total=87.210um^2
          cell capacitance : b=0.026pF, i=0.000pF, icg=0.000pF, dcg=0.000pF, l=0.000pF, total=0.026pF
          sink capacitance : total=0.349pF, avg=0.000pF, sd=0.000pF, min=0.000pF, max=0.000pF
          wire capacitance : top=0.000pF, trunk=0.062pF, leaf=0.333pF, total=0.395pF
          wire lengths     : top=0.000um, trunk=958.576um, leaf=4224.381um, total=5182.956um
          hp wire lengths  : top=0.000um, trunk=0.000um, leaf=1902.125um, total=1902.125um
        Clock DAG net violations after Approximately balancing fragments, wire and cell delays, iteration 1: none
        Clock DAG primary half-corner transition distribution after Approximately balancing fragments, wire and cell delays, iteration 1:
          Trunk : target=0.030ns count=1 avg=0.022ns sd=0.000ns min=0.022ns max=0.022ns {0 <= 0.018ns, 1 <= 0.024ns, 0 <= 0.027ns, 0 <= 0.029ns, 0 <= 0.030ns}
          Leaf  : target=0.030ns count=13 avg=0.028ns sd=0.001ns min=0.026ns max=0.029ns {0 <= 0.018ns, 0 <= 0.024ns, 5 <= 0.027ns, 8 <= 0.029ns, 0 <= 0.030ns}
        Clock DAG library cell distribution after Approximately balancing fragments, wire and cell delays, iteration 1 {count}:
           Bufs: CLKBUFX16: 12 CLKBUFX12: 1 
      Approximately balancing fragments, wire and cell delays, iteration 1 done.
      Approximately balancing fragments, wire and cell delays done. (took cpu=0:00:00.0 real=0:00:00.0)
      flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:*                                                                   Approximately balancing fragments, wire and cell delays
    Approximately balancing fragments done.
    Clock DAG stats after 'Approximately balancing fragments step':
      cell counts      : b=13, i=0, icg=0, dcg=0, l=0, total=13
      sink counts      : regular=1133, enable_latch=0, load_capacitance=0, antenna=0, node_sink=0, total=1133
      misc counts      : r=1, pp=0
      cell areas       : b=87.210um^2, i=0.000um^2, icg=0.000um^2, dcg=0.000um^2, l=0.000um^2, total=87.210um^2
      cell capacitance : b=0.026pF, i=0.000pF, icg=0.000pF, dcg=0.000pF, l=0.000pF, total=0.026pF
      sink capacitance : total=0.349pF, avg=0.000pF, sd=0.000pF, min=0.000pF, max=0.000pF
      wire capacitance : top=0.000pF, trunk=0.062pF, leaf=0.333pF, total=0.395pF
      wire lengths     : top=0.000um, trunk=958.576um, leaf=4224.381um, total=5182.956um
      hp wire lengths  : top=0.000um, trunk=0.000um, leaf=1902.125um, total=1902.125um
    Clock DAG net violations after 'Approximately balancing fragments step': none
    Clock DAG primary half-corner transition distribution after 'Approximately balancing fragments step':
      Trunk : target=0.030ns count=1 avg=0.022ns sd=0.000ns min=0.022ns max=0.022ns {0 <= 0.018ns, 1 <= 0.024ns, 0 <= 0.027ns, 0 <= 0.029ns, 0 <= 0.030ns}
      Leaf  : target=0.030ns count=13 avg=0.028ns sd=0.001ns min=0.026ns max=0.029ns {0 <= 0.018ns, 0 <= 0.024ns, 5 <= 0.027ns, 8 <= 0.029ns, 0 <= 0.030ns}
    Clock DAG library cell distribution after 'Approximately balancing fragments step' {count}:
       Bufs: CLKBUFX16: 12 CLKBUFX12: 1 
    Legalizer API calls during this step: 0 succeeded with high effort: 0 succeeded with medium effort: 0 succeeded with low effort: 0 succeeded with basic effort: 0 succeeded with basic unbounded effort: 0
  Approximately balancing fragments step done. (took cpu=0:00:00.4 real=0:00:00.4)
      flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:*                                                                   Approximately balancing fragments step
  Clock DAG stats after Approximately balancing fragments:
    cell counts      : b=13, i=0, icg=0, dcg=0, l=0, total=13
    sink counts      : regular=1133, enable_latch=0, load_capacitance=0, antenna=0, node_sink=0, total=1133
    misc counts      : r=1, pp=0
    cell areas       : b=87.210um^2, i=0.000um^2, icg=0.000um^2, dcg=0.000um^2, l=0.000um^2, total=87.210um^2
    cell capacitance : b=0.026pF, i=0.000pF, icg=0.000pF, dcg=0.000pF, l=0.000pF, total=0.026pF
    sink capacitance : total=0.349pF, avg=0.000pF, sd=0.000pF, min=0.000pF, max=0.000pF
    wire capacitance : top=0.000pF, trunk=0.062pF, leaf=0.333pF, total=0.395pF
    wire lengths     : top=0.000um, trunk=958.576um, leaf=4224.381um, total=5182.956um
    hp wire lengths  : top=0.000um, trunk=0.000um, leaf=1902.125um, total=1902.125um
  Clock DAG net violations after Approximately balancing fragments: none
  Clock DAG primary half-corner transition distribution after Approximately balancing fragments:
    Trunk : target=0.030ns count=1 avg=0.022ns sd=0.000ns min=0.022ns max=0.022ns {0 <= 0.018ns, 1 <= 0.024ns, 0 <= 0.027ns, 0 <= 0.029ns, 0 <= 0.030ns}
    Leaf  : target=0.030ns count=13 avg=0.028ns sd=0.001ns min=0.026ns max=0.029ns {0 <= 0.018ns, 0 <= 0.024ns, 5 <= 0.027ns, 8 <= 0.029ns, 0 <= 0.030ns}
  Clock DAG library cell distribution after Approximately balancing fragments {count}:
     Bufs: CLKBUFX16: 12 CLKBUFX12: 1 
  Primary reporting skew groups after Approximately balancing fragments:
    skew_group Clk/default_const: insertion delay [min=0.028, max=0.046], skew [0.018 vs 0.020]
  Skew group summary after Approximately balancing fragments:
    skew_group Clk/default_const: insertion delay [min=0.028, max=0.046], skew [0.018 vs 0.020]
  Improving fragments clock skew...
    Clock DAG stats after 'Improving fragments clock skew':
      cell counts      : b=13, i=0, icg=0, dcg=0, l=0, total=13
      sink counts      : regular=1133, enable_latch=0, load_capacitance=0, antenna=0, node_sink=0, total=1133
      misc counts      : r=1, pp=0
      cell areas       : b=87.210um^2, i=0.000um^2, icg=0.000um^2, dcg=0.000um^2, l=0.000um^2, total=87.210um^2
      cell capacitance : b=0.026pF, i=0.000pF, icg=0.000pF, dcg=0.000pF, l=0.000pF, total=0.026pF
      sink capacitance : total=0.349pF, avg=0.000pF, sd=0.000pF, min=0.000pF, max=0.000pF
      wire capacitance : top=0.000pF, trunk=0.062pF, leaf=0.333pF, total=0.395pF
      wire lengths     : top=0.000um, trunk=958.576um, leaf=4224.381um, total=5182.956um
      hp wire lengths  : top=0.000um, trunk=0.000um, leaf=1902.125um, total=1902.125um
    Clock DAG net violations after 'Improving fragments clock skew': none
    Clock DAG primary half-corner transition distribution after 'Improving fragments clock skew':
      Trunk : target=0.030ns count=1 avg=0.022ns sd=0.000ns min=0.022ns max=0.022ns {0 <= 0.018ns, 1 <= 0.024ns, 0 <= 0.027ns, 0 <= 0.029ns, 0 <= 0.030ns}
      Leaf  : target=0.030ns count=13 avg=0.028ns sd=0.001ns min=0.026ns max=0.029ns {0 <= 0.018ns, 0 <= 0.024ns, 5 <= 0.027ns, 8 <= 0.029ns, 0 <= 0.030ns}
    Clock DAG library cell distribution after 'Improving fragments clock skew' {count}:
       Bufs: CLKBUFX16: 12 CLKBUFX12: 1 
    Primary reporting skew groups after 'Improving fragments clock skew':
      skew_group Clk/default_const: insertion delay [min=0.028, max=0.046], skew [0.018 vs 0.020]
    Skew group summary after 'Improving fragments clock skew':
      skew_group Clk/default_const: insertion delay [min=0.028, max=0.046], skew [0.018 vs 0.020]
    Legalizer API calls during this step: 0 succeeded with high effort: 0 succeeded with medium effort: 0 succeeded with low effort: 0 succeeded with basic effort: 0 succeeded with basic unbounded effort: 0
  Improving fragments clock skew done. (took cpu=0:00:00.0 real=0:00:00.0)
      flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:*                                                                   Improving fragments clock skew
  Approximately balancing step...
    Resolve constraints - Approximately balancing...
    Resolving skew group constraints...
      Solving LP: 1 skew groups; 2 fragments, 2 fraglets and 3 vertices; 25 variables and 66 constraints; tolerance 1
    Resolving skew group constraints done.
    Resolve constraints - Approximately balancing done. (took cpu=0:00:00.0 real=0:00:00.0)
      flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:*                                                                   Resolve constraints - Approximately balancing
    Approximately balancing...
      Approximately balancing, wire and cell delays...
      Approximately balancing, wire and cell delays, iteration 1...
        Clock DAG stats after Approximately balancing, wire and cell delays, iteration 1:
          cell counts      : b=13, i=0, icg=0, dcg=0, l=0, total=13
          sink counts      : regular=1133, enable_latch=0, load_capacitance=0, antenna=0, node_sink=0, total=1133
          misc counts      : r=1, pp=0
          cell areas       : b=87.210um^2, i=0.000um^2, icg=0.000um^2, dcg=0.000um^2, l=0.000um^2, total=87.210um^2
          cell capacitance : b=0.026pF, i=0.000pF, icg=0.000pF, dcg=0.000pF, l=0.000pF, total=0.026pF
          sink capacitance : total=0.349pF, avg=0.000pF, sd=0.000pF, min=0.000pF, max=0.000pF
          wire capacitance : top=0.000pF, trunk=0.062pF, leaf=0.333pF, total=0.395pF
          wire lengths     : top=0.000um, trunk=958.576um, leaf=4224.381um, total=5182.956um
          hp wire lengths  : top=0.000um, trunk=0.000um, leaf=1902.125um, total=1902.125um
        Clock DAG net violations after Approximately balancing, wire and cell delays, iteration 1: none
        Clock DAG primary half-corner transition distribution after Approximately balancing, wire and cell delays, iteration 1:
          Trunk : target=0.030ns count=1 avg=0.022ns sd=0.000ns min=0.022ns max=0.022ns {0 <= 0.018ns, 1 <= 0.024ns, 0 <= 0.027ns, 0 <= 0.029ns, 0 <= 0.030ns}
          Leaf  : target=0.030ns count=13 avg=0.028ns sd=0.001ns min=0.026ns max=0.029ns {0 <= 0.018ns, 0 <= 0.024ns, 5 <= 0.027ns, 8 <= 0.029ns, 0 <= 0.030ns}
        Clock DAG library cell distribution after Approximately balancing, wire and cell delays, iteration 1 {count}:
           Bufs: CLKBUFX16: 12 CLKBUFX12: 1 
      Approximately balancing, wire and cell delays, iteration 1 done.
      Approximately balancing, wire and cell delays done. (took cpu=0:00:00.0 real=0:00:00.0)
      flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:*                                                                   Approximately balancing, wire and cell delays
    Approximately balancing done.
    Clock DAG stats after 'Approximately balancing step':
      cell counts      : b=13, i=0, icg=0, dcg=0, l=0, total=13
      sink counts      : regular=1133, enable_latch=0, load_capacitance=0, antenna=0, node_sink=0, total=1133
      misc counts      : r=1, pp=0
      cell areas       : b=87.210um^2, i=0.000um^2, icg=0.000um^2, dcg=0.000um^2, l=0.000um^2, total=87.210um^2
      cell capacitance : b=0.026pF, i=0.000pF, icg=0.000pF, dcg=0.000pF, l=0.000pF, total=0.026pF
      sink capacitance : total=0.349pF, avg=0.000pF, sd=0.000pF, min=0.000pF, max=0.000pF
      wire capacitance : top=0.000pF, trunk=0.062pF, leaf=0.333pF, total=0.395pF
      wire lengths     : top=0.000um, trunk=958.576um, leaf=4224.381um, total=5182.956um
      hp wire lengths  : top=0.000um, trunk=0.000um, leaf=1902.125um, total=1902.125um
    Clock DAG net violations after 'Approximately balancing step': none
    Clock DAG primary half-corner transition distribution after 'Approximately balancing step':
      Trunk : target=0.030ns count=1 avg=0.022ns sd=0.000ns min=0.022ns max=0.022ns {0 <= 0.018ns, 1 <= 0.024ns, 0 <= 0.027ns, 0 <= 0.029ns, 0 <= 0.030ns}
      Leaf  : target=0.030ns count=13 avg=0.028ns sd=0.001ns min=0.026ns max=0.029ns {0 <= 0.018ns, 0 <= 0.024ns, 5 <= 0.027ns, 8 <= 0.029ns, 0 <= 0.030ns}
    Clock DAG library cell distribution after 'Approximately balancing step' {count}:
       Bufs: CLKBUFX16: 12 CLKBUFX12: 1 
    Primary reporting skew groups after 'Approximately balancing step':
      skew_group Clk/default_const: insertion delay [min=0.028, max=0.046], skew [0.018 vs 0.020]
    Skew group summary after 'Approximately balancing step':
      skew_group Clk/default_const: insertion delay [min=0.028, max=0.046], skew [0.018 vs 0.020]
    Legalizer API calls during this step: 0 succeeded with high effort: 0 succeeded with medium effort: 0 succeeded with low effort: 0 succeeded with basic effort: 0 succeeded with basic unbounded effort: 0
  Approximately balancing step done. (took cpu=0:00:00.1 real=0:00:00.1)
      flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:*                                                                   Approximately balancing step
  Fixing clock tree overload...
    Fixing clock tree overload: ...20% ...40% ...60% ...80% ...100% 
    Clock DAG stats after 'Fixing clock tree overload':
      cell counts      : b=13, i=0, icg=0, dcg=0, l=0, total=13
      sink counts      : regular=1133, enable_latch=0, load_capacitance=0, antenna=0, node_sink=0, total=1133
      misc counts      : r=1, pp=0
      cell areas       : b=87.210um^2, i=0.000um^2, icg=0.000um^2, dcg=0.000um^2, l=0.000um^2, total=87.210um^2
      cell capacitance : b=0.026pF, i=0.000pF, icg=0.000pF, dcg=0.000pF, l=0.000pF, total=0.026pF
      sink capacitance : total=0.349pF, avg=0.000pF, sd=0.000pF, min=0.000pF, max=0.000pF
      wire capacitance : top=0.000pF, trunk=0.062pF, leaf=0.333pF, total=0.395pF
      wire lengths     : top=0.000um, trunk=958.576um, leaf=4224.381um, total=5182.956um
      hp wire lengths  : top=0.000um, trunk=0.000um, leaf=1902.125um, total=1902.125um
    Clock DAG net violations after 'Fixing clock tree overload': none
    Clock DAG primary half-corner transition distribution after 'Fixing clock tree overload':
      Trunk : target=0.030ns count=1 avg=0.022ns sd=0.000ns min=0.022ns max=0.022ns {0 <= 0.018ns, 1 <= 0.024ns, 0 <= 0.027ns, 0 <= 0.029ns, 0 <= 0.030ns}
      Leaf  : target=0.030ns count=13 avg=0.028ns sd=0.001ns min=0.026ns max=0.029ns {0 <= 0.018ns, 0 <= 0.024ns, 5 <= 0.027ns, 8 <= 0.029ns, 0 <= 0.030ns}
    Clock DAG library cell distribution after 'Fixing clock tree overload' {count}:
       Bufs: CLKBUFX16: 12 CLKBUFX12: 1 
    Primary reporting skew groups after 'Fixing clock tree overload':
      skew_group Clk/default_const: insertion delay [min=0.028, max=0.046], skew [0.018 vs 0.020]
    Skew group summary after 'Fixing clock tree overload':
      skew_group Clk/default_const: insertion delay [min=0.028, max=0.046], skew [0.018 vs 0.020]
    Legalizer API calls during this step: 0 succeeded with high effort: 0 succeeded with medium effort: 0 succeeded with low effort: 0 succeeded with basic effort: 0 succeeded with basic unbounded effort: 0
  Fixing clock tree overload done. (took cpu=0:00:00.0 real=0:00:00.0)
      flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:*                                                                   Fixing clock tree overload
  Approximately balancing paths...
    Added 0 buffers.
    Clock DAG stats after 'Approximately balancing paths':
      cell counts      : b=13, i=0, icg=0, dcg=0, l=0, total=13
      sink counts      : regular=1133, enable_latch=0, load_capacitance=0, antenna=0, node_sink=0, total=1133
      misc counts      : r=1, pp=0
      cell areas       : b=87.210um^2, i=0.000um^2, icg=0.000um^2, dcg=0.000um^2, l=0.000um^2, total=87.210um^2
      cell capacitance : b=0.026pF, i=0.000pF, icg=0.000pF, dcg=0.000pF, l=0.000pF, total=0.026pF
      sink capacitance : total=0.349pF, avg=0.000pF, sd=0.000pF, min=0.000pF, max=0.000pF
      wire capacitance : top=0.000pF, trunk=0.062pF, leaf=0.333pF, total=0.395pF
      wire lengths     : top=0.000um, trunk=958.576um, leaf=4224.381um, total=5182.956um
      hp wire lengths  : top=0.000um, trunk=0.000um, leaf=1902.125um, total=1902.125um
    Clock DAG net violations after 'Approximately balancing paths': none
    Clock DAG primary half-corner transition distribution after 'Approximately balancing paths':
      Trunk : target=0.030ns count=1 avg=0.022ns sd=0.000ns min=0.022ns max=0.022ns {0 <= 0.018ns, 1 <= 0.024ns, 0 <= 0.027ns, 0 <= 0.029ns, 0 <= 0.030ns}
      Leaf  : target=0.030ns count=13 avg=0.028ns sd=0.001ns min=0.026ns max=0.029ns {0 <= 0.018ns, 0 <= 0.024ns, 5 <= 0.027ns, 8 <= 0.029ns, 0 <= 0.030ns}
    Clock DAG library cell distribution after 'Approximately balancing paths' {count}:
       Bufs: CLKBUFX16: 12 CLKBUFX12: 1 
    Primary reporting skew groups after 'Approximately balancing paths':
      skew_group Clk/default_const: insertion delay [min=0.028, max=0.046, avg=0.042, sd=0.003], skew [0.018 vs 0.020], 100% {0.028, 0.046} (wid=0.016 ws=0.014) (gid=0.031 gs=0.005)
    Skew group summary after 'Approximately balancing paths':
      skew_group Clk/default_const: insertion delay [min=0.028, max=0.046, avg=0.042, sd=0.003], skew [0.018 vs 0.020], 100% {0.028, 0.046} (wid=0.016 ws=0.014) (gid=0.031 gs=0.005)
    Legalizer API calls during this step: 0 succeeded with high effort: 0 succeeded with medium effort: 0 succeeded with low effort: 0 succeeded with basic effort: 0 succeeded with basic unbounded effort: 0
  Approximately balancing paths done. (took cpu=0:00:00.0 real=0:00:00.0)
      flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:*                                                                   Approximately balancing paths
  Stage::Balancing done. (took cpu=0:00:00.8 real=0:00:00.8)
      flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:*                                                                   Stage::Balancing
  Stage::Polishing...
  Clock tree timing engine global stage delay update for default_dc:both.late...
  Clock tree timing engine global stage delay update for default_dc:both.late done. (took cpu=0:00:00.0 real=0:00:00.0)
  Clock DAG stats before polishing:
    cell counts      : b=13, i=0, icg=0, dcg=0, l=0, total=13
    sink counts      : regular=1133, enable_latch=0, load_capacitance=0, antenna=0, node_sink=0, total=1133
    misc counts      : r=1, pp=0
    cell areas       : b=87.210um^2, i=0.000um^2, icg=0.000um^2, dcg=0.000um^2, l=0.000um^2, total=87.210um^2
    cell capacitance : b=0.026pF, i=0.000pF, icg=0.000pF, dcg=0.000pF, l=0.000pF, total=0.026pF
    sink capacitance : total=0.349pF, avg=0.000pF, sd=0.000pF, min=0.000pF, max=0.000pF
    wire capacitance : top=0.000pF, trunk=0.062pF, leaf=0.333pF, total=0.395pF
    wire lengths     : top=0.000um, trunk=958.576um, leaf=4224.381um, total=5182.956um
    hp wire lengths  : top=0.000um, trunk=0.000um, leaf=1902.125um, total=1902.125um
  Clock DAG net violations before polishing: none
  Clock DAG primary half-corner transition distribution before polishing:
    Trunk : target=0.030ns count=1 avg=0.022ns sd=0.000ns min=0.022ns max=0.022ns {0 <= 0.018ns, 1 <= 0.024ns, 0 <= 0.027ns, 0 <= 0.029ns, 0 <= 0.030ns}
    Leaf  : target=0.030ns count=13 avg=0.028ns sd=0.001ns min=0.026ns max=0.029ns {0 <= 0.018ns, 0 <= 0.024ns, 5 <= 0.027ns, 8 <= 0.029ns, 0 <= 0.030ns}
  Clock DAG library cell distribution before polishing {count}:
     Bufs: CLKBUFX16: 12 CLKBUFX12: 1 
  Primary reporting skew groups before polishing:
    skew_group Clk/default_const: insertion delay [min=0.028, max=0.046], skew [0.018 vs 0.020]
  Skew group summary before polishing:
    skew_group Clk/default_const: insertion delay [min=0.028, max=0.046], skew [0.018 vs 0.020]
  Merging balancing drivers for power...
    Tried: 15 Succeeded: 0
    Clock DAG stats after 'Merging balancing drivers for power':
      cell counts      : b=13, i=0, icg=0, dcg=0, l=0, total=13
      sink counts      : regular=1133, enable_latch=0, load_capacitance=0, antenna=0, node_sink=0, total=1133
      misc counts      : r=1, pp=0
      cell areas       : b=87.210um^2, i=0.000um^2, icg=0.000um^2, dcg=0.000um^2, l=0.000um^2, total=87.210um^2
      cell capacitance : b=0.026pF, i=0.000pF, icg=0.000pF, dcg=0.000pF, l=0.000pF, total=0.026pF
      sink capacitance : total=0.349pF, avg=0.000pF, sd=0.000pF, min=0.000pF, max=0.000pF
      wire capacitance : top=0.000pF, trunk=0.062pF, leaf=0.333pF, total=0.395pF
      wire lengths     : top=0.000um, trunk=958.576um, leaf=4224.381um, total=5182.956um
      hp wire lengths  : top=0.000um, trunk=0.000um, leaf=1902.125um, total=1902.125um
    Clock DAG net violations after 'Merging balancing drivers for power': none
    Clock DAG primary half-corner transition distribution after 'Merging balancing drivers for power':
      Trunk : target=0.030ns count=1 avg=0.022ns sd=0.000ns min=0.022ns max=0.022ns {0 <= 0.018ns, 1 <= 0.024ns, 0 <= 0.027ns, 0 <= 0.029ns, 0 <= 0.030ns}
      Leaf  : target=0.030ns count=13 avg=0.028ns sd=0.001ns min=0.026ns max=0.029ns {0 <= 0.018ns, 0 <= 0.024ns, 5 <= 0.027ns, 8 <= 0.029ns, 0 <= 0.030ns}
    Clock DAG library cell distribution after 'Merging balancing drivers for power' {count}:
       Bufs: CLKBUFX16: 12 CLKBUFX12: 1 
    Primary reporting skew groups after 'Merging balancing drivers for power':
      skew_group Clk/default_const: insertion delay [min=0.028, max=0.046], skew [0.018 vs 0.020]
    Skew group summary after 'Merging balancing drivers for power':
      skew_group Clk/default_const: insertion delay [min=0.028, max=0.046], skew [0.018 vs 0.020]
    Legalizer API calls during this step: 0 succeeded with high effort: 0 succeeded with medium effort: 0 succeeded with low effort: 0 succeeded with basic effort: 0 succeeded with basic unbounded effort: 0
  Merging balancing drivers for power done. (took cpu=0:00:00.0 real=0:00:00.0)
      flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:*                                                                   Merging balancing drivers for power
  Improving clock skew...
    Clock DAG stats after 'Improving clock skew':
      cell counts      : b=13, i=0, icg=0, dcg=0, l=0, total=13
      sink counts      : regular=1133, enable_latch=0, load_capacitance=0, antenna=0, node_sink=0, total=1133
      misc counts      : r=1, pp=0
      cell areas       : b=87.210um^2, i=0.000um^2, icg=0.000um^2, dcg=0.000um^2, l=0.000um^2, total=87.210um^2
      cell capacitance : b=0.026pF, i=0.000pF, icg=0.000pF, dcg=0.000pF, l=0.000pF, total=0.026pF
      sink capacitance : total=0.349pF, avg=0.000pF, sd=0.000pF, min=0.000pF, max=0.000pF
      wire capacitance : top=0.000pF, trunk=0.062pF, leaf=0.333pF, total=0.395pF
      wire lengths     : top=0.000um, trunk=958.576um, leaf=4224.381um, total=5182.956um
      hp wire lengths  : top=0.000um, trunk=0.000um, leaf=1902.125um, total=1902.125um
    Clock DAG net violations after 'Improving clock skew': none
    Clock DAG primary half-corner transition distribution after 'Improving clock skew':
      Trunk : target=0.030ns count=1 avg=0.022ns sd=0.000ns min=0.022ns max=0.022ns {0 <= 0.018ns, 1 <= 0.024ns, 0 <= 0.027ns, 0 <= 0.029ns, 0 <= 0.030ns}
      Leaf  : target=0.030ns count=13 avg=0.028ns sd=0.001ns min=0.026ns max=0.029ns {0 <= 0.018ns, 0 <= 0.024ns, 5 <= 0.027ns, 8 <= 0.029ns, 0 <= 0.030ns}
    Clock DAG library cell distribution after 'Improving clock skew' {count}:
       Bufs: CLKBUFX16: 12 CLKBUFX12: 1 
    Primary reporting skew groups after 'Improving clock skew':
      skew_group Clk/default_const: insertion delay [min=0.028, max=0.046, avg=0.042, sd=0.003], skew [0.018 vs 0.020], 100% {0.028, 0.046} (wid=0.016 ws=0.014) (gid=0.031 gs=0.005)
    Skew group summary after 'Improving clock skew':
      skew_group Clk/default_const: insertion delay [min=0.028, max=0.046, avg=0.042, sd=0.003], skew [0.018 vs 0.020], 100% {0.028, 0.046} (wid=0.016 ws=0.014) (gid=0.031 gs=0.005)
    Legalizer API calls during this step: 0 succeeded with high effort: 0 succeeded with medium effort: 0 succeeded with low effort: 0 succeeded with basic effort: 0 succeeded with basic unbounded effort: 0
  Improving clock skew done. (took cpu=0:00:00.0 real=0:00:00.0)
      flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:*                                                                   Improving clock skew
  Moving gates to reduce wire capacitance...
    Modified slew target multipliers. Leaf=(1 to 0.9) Trunk=(1 to 0.95) Top=(1 to 0.95)
    Iteration 1...
      Artificially removing short and long paths...
        Legalizer API calls during this step: 0 succeeded with high effort: 0 succeeded with medium effort: 0 succeeded with low effort: 0 succeeded with basic effort: 0 succeeded with basic unbounded effort: 0
      Artificially removing short and long paths done. (took cpu=0:00:00.0 real=0:00:00.0)
      Moving gates to reduce wire capacitance - iteration 1: WireCapReduction...
        Legalizing clock trees...
        Legalizing clock trees done. (took cpu=0:00:00.0 real=0:00:00.0)
      flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:*                                                                   Legalizing clock trees
        Legalizer API calls during this step: 86 succeeded with high effort: 86 succeeded with medium effort: 0 succeeded with low effort: 0 succeeded with basic effort: 0 succeeded with basic unbounded effort: 0
      Moving gates to reduce wire capacitance - iteration 1: WireCapReduction done. (took cpu=0:00:00.2 real=0:00:00.2)
      Moving gates to reduce wire capacitance - iteration 1: MoveGates...
        Moving gates:         ...20% ...40% ...60% ...80% ...Legalizing clock trees...
        Legalizing clock trees done. (took cpu=0:00:00.0 real=0:00:00.0)
      flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:*                                                                   Legalizing clock trees
        100% 
        Legalizer API calls during this step: 182 succeeded with high effort: 182 succeeded with medium effort: 0 succeeded with low effort: 0 succeeded with basic effort: 0 succeeded with basic unbounded effort: 0
      Moving gates to reduce wire capacitance - iteration 1: MoveGates done. (took cpu=0:00:00.8 real=0:00:00.8)
    Iteration 1 done.
    Iteration 2...
      Artificially removing short and long paths...
        Legalizer API calls during this step: 0 succeeded with high effort: 0 succeeded with medium effort: 0 succeeded with low effort: 0 succeeded with basic effort: 0 succeeded with basic unbounded effort: 0
      Artificially removing short and long paths done. (took cpu=0:00:00.0 real=0:00:00.0)
      Moving gates to reduce wire capacitance - iteration 2: WireCapReduction...
        Legalizing clock trees...
        Legalizing clock trees done. (took cpu=0:00:00.0 real=0:00:00.0)
      flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:*                                                                   Legalizing clock trees
        Legalizer API calls during this step: 67 succeeded with high effort: 67 succeeded with medium effort: 0 succeeded with low effort: 0 succeeded with basic effort: 0 succeeded with basic unbounded effort: 0
      Moving gates to reduce wire capacitance - iteration 2: WireCapReduction done. (took cpu=0:00:00.2 real=0:00:00.2)
      Moving gates to reduce wire capacitance - iteration 2: MoveGates...
        Moving gates:         ...20% ...40% ...60% ...80% ...Legalizing clock trees...
        Legalizing clock trees done. (took cpu=0:00:00.0 real=0:00:00.0)
      flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:*                                                                   Legalizing clock trees
        100% 
        Legalizer API calls during this step: 182 succeeded with high effort: 182 succeeded with medium effort: 0 succeeded with low effort: 0 succeeded with basic effort: 0 succeeded with basic unbounded effort: 0
      Moving gates to reduce wire capacitance - iteration 2: MoveGates done. (took cpu=0:00:00.7 real=0:00:00.7)
    Iteration 2 done.
    Reverted slew target multipliers. Leaf=(0.9 to 1) Trunk=(0.95 to 1) Top=(0.95 to 1)
    Clock DAG stats after 'Moving gates to reduce wire capacitance':
      cell counts      : b=13, i=0, icg=0, dcg=0, l=0, total=13
      sink counts      : regular=1133, enable_latch=0, load_capacitance=0, antenna=0, node_sink=0, total=1133
      misc counts      : r=1, pp=0
      cell areas       : b=87.210um^2, i=0.000um^2, icg=0.000um^2, dcg=0.000um^2, l=0.000um^2, total=87.210um^2
      cell capacitance : b=0.026pF, i=0.000pF, icg=0.000pF, dcg=0.000pF, l=0.000pF, total=0.026pF
      sink capacitance : total=0.349pF, avg=0.000pF, sd=0.000pF, min=0.000pF, max=0.000pF
      wire capacitance : top=0.000pF, trunk=0.059pF, leaf=0.328pF, total=0.386pF
      wire lengths     : top=0.000um, trunk=902.625um, leaf=4174.361um, total=5076.987um
      hp wire lengths  : top=0.000um, trunk=0.000um, leaf=1893.290um, total=1893.290um
    Clock DAG net violations after 'Moving gates to reduce wire capacitance': none
    Clock DAG primary half-corner transition distribution after 'Moving gates to reduce wire capacitance':
      Trunk : target=0.030ns count=1 avg=0.022ns sd=0.000ns min=0.022ns max=0.022ns {0 <= 0.018ns, 1 <= 0.024ns, 0 <= 0.027ns, 0 <= 0.029ns, 0 <= 0.030ns}
      Leaf  : target=0.030ns count=13 avg=0.027ns sd=0.001ns min=0.026ns max=0.028ns {0 <= 0.018ns, 0 <= 0.024ns, 6 <= 0.027ns, 7 <= 0.029ns, 0 <= 0.030ns}
    Clock DAG library cell distribution after 'Moving gates to reduce wire capacitance' {count}:
       Bufs: CLKBUFX16: 12 CLKBUFX12: 1 
    Primary reporting skew groups after 'Moving gates to reduce wire capacitance':
      skew_group Clk/default_const: insertion delay [min=0.029, max=0.046, avg=0.042, sd=0.003], skew [0.017 vs 0.020], 100% {0.029, 0.046} (wid=0.016 ws=0.014) (gid=0.032 gs=0.006)
    Skew group summary after 'Moving gates to reduce wire capacitance':
      skew_group Clk/default_const: insertion delay [min=0.029, max=0.046, avg=0.042, sd=0.003], skew [0.017 vs 0.020], 100% {0.029, 0.046} (wid=0.016 ws=0.014) (gid=0.032 gs=0.006)
    Legalizer API calls during this step: 517 succeeded with high effort: 517 succeeded with medium effort: 0 succeeded with low effort: 0 succeeded with basic effort: 0 succeeded with basic unbounded effort: 0
  Moving gates to reduce wire capacitance done. (took cpu=0:00:01.9 real=0:00:01.9)
      flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:*                                                                   Moving gates to reduce wire capacitance
  Reducing clock tree power 3...
    Artificially removing short and long paths...
      Legalizer API calls during this step: 0 succeeded with high effort: 0 succeeded with medium effort: 0 succeeded with low effort: 0 succeeded with basic effort: 0 succeeded with basic unbounded effort: 0
    Artificially removing short and long paths done. (took cpu=0:00:00.0 real=0:00:00.0)
    Initial gate capacitance is (rise=0.375pF fall=0.334pF).
    Resizing gates:     ...20% ...40% ...60% ...80% ...Legalizing clock trees...
    Legalizing clock trees done. (took cpu=0:00:00.0 real=0:00:00.0)
      flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:*                                                                   Legalizing clock trees
    100% 
    Clock DAG stats after 'Reducing clock tree power 3':
      cell counts      : b=13, i=0, icg=0, dcg=0, l=0, total=13
      sink counts      : regular=1133, enable_latch=0, load_capacitance=0, antenna=0, node_sink=0, total=1133
      misc counts      : r=1, pp=0
      cell areas       : b=87.210um^2, i=0.000um^2, icg=0.000um^2, dcg=0.000um^2, l=0.000um^2, total=87.210um^2
      cell capacitance : b=0.026pF, i=0.000pF, icg=0.000pF, dcg=0.000pF, l=0.000pF, total=0.026pF
      sink capacitance : total=0.349pF, avg=0.000pF, sd=0.000pF, min=0.000pF, max=0.000pF
      wire capacitance : top=0.000pF, trunk=0.059pF, leaf=0.328pF, total=0.386pF
      wire lengths     : top=0.000um, trunk=902.625um, leaf=4174.361um, total=5076.987um
      hp wire lengths  : top=0.000um, trunk=0.000um, leaf=1893.290um, total=1893.290um
    Clock DAG net violations after 'Reducing clock tree power 3': none
    Clock DAG primary half-corner transition distribution after 'Reducing clock tree power 3':
      Trunk : target=0.030ns count=1 avg=0.022ns sd=0.000ns min=0.022ns max=0.022ns {0 <= 0.018ns, 1 <= 0.024ns, 0 <= 0.027ns, 0 <= 0.029ns, 0 <= 0.030ns}
      Leaf  : target=0.030ns count=13 avg=0.027ns sd=0.001ns min=0.026ns max=0.028ns {0 <= 0.018ns, 0 <= 0.024ns, 6 <= 0.027ns, 7 <= 0.029ns, 0 <= 0.030ns}
    Clock DAG library cell distribution after 'Reducing clock tree power 3' {count}:
       Bufs: CLKBUFX16: 12 CLKBUFX12: 1 
    Primary reporting skew groups after 'Reducing clock tree power 3':
      skew_group Clk/default_const: insertion delay [min=0.029, max=0.046, avg=0.042, sd=0.003], skew [0.017 vs 0.020], 100% {0.029, 0.046} (wid=0.016 ws=0.014) (gid=0.032 gs=0.006)
    Skew group summary after 'Reducing clock tree power 3':
      skew_group Clk/default_const: insertion delay [min=0.029, max=0.046, avg=0.042, sd=0.003], skew [0.017 vs 0.020], 100% {0.029, 0.046} (wid=0.016 ws=0.014) (gid=0.032 gs=0.006)
    Legalizer API calls during this step: 26 succeeded with high effort: 26 succeeded with medium effort: 0 succeeded with low effort: 0 succeeded with basic effort: 0 succeeded with basic unbounded effort: 0
  Reducing clock tree power 3 done. (took cpu=0:00:00.1 real=0:00:00.1)
      flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:*                                                                   Reducing clock tree power 3
  Improving insertion delay...
    Clock DAG stats after 'Improving insertion delay':
      cell counts      : b=13, i=0, icg=0, dcg=0, l=0, total=13
      sink counts      : regular=1133, enable_latch=0, load_capacitance=0, antenna=0, node_sink=0, total=1133
      misc counts      : r=1, pp=0
      cell areas       : b=87.210um^2, i=0.000um^2, icg=0.000um^2, dcg=0.000um^2, l=0.000um^2, total=87.210um^2
      cell capacitance : b=0.026pF, i=0.000pF, icg=0.000pF, dcg=0.000pF, l=0.000pF, total=0.026pF
      sink capacitance : total=0.349pF, avg=0.000pF, sd=0.000pF, min=0.000pF, max=0.000pF
      wire capacitance : top=0.000pF, trunk=0.059pF, leaf=0.328pF, total=0.386pF
      wire lengths     : top=0.000um, trunk=902.625um, leaf=4174.361um, total=5076.987um
      hp wire lengths  : top=0.000um, trunk=0.000um, leaf=1893.290um, total=1893.290um
    Clock DAG net violations after 'Improving insertion delay': none
    Clock DAG primary half-corner transition distribution after 'Improving insertion delay':
      Trunk : target=0.030ns count=1 avg=0.022ns sd=0.000ns min=0.022ns max=0.022ns {0 <= 0.018ns, 1 <= 0.024ns, 0 <= 0.027ns, 0 <= 0.029ns, 0 <= 0.030ns}
      Leaf  : target=0.030ns count=13 avg=0.027ns sd=0.001ns min=0.026ns max=0.028ns {0 <= 0.018ns, 0 <= 0.024ns, 6 <= 0.027ns, 7 <= 0.029ns, 0 <= 0.030ns}
    Clock DAG library cell distribution after 'Improving insertion delay' {count}:
       Bufs: CLKBUFX16: 12 CLKBUFX12: 1 
    Primary reporting skew groups after 'Improving insertion delay':
      skew_group Clk/default_const: insertion delay [min=0.029, max=0.046, avg=0.042, sd=0.003], skew [0.017 vs 0.020], 100% {0.029, 0.046} (wid=0.016 ws=0.014) (gid=0.032 gs=0.006)
    Skew group summary after 'Improving insertion delay':
      skew_group Clk/default_const: insertion delay [min=0.029, max=0.046, avg=0.042, sd=0.003], skew [0.017 vs 0.020], 100% {0.029, 0.046} (wid=0.016 ws=0.014) (gid=0.032 gs=0.006)
    Legalizer API calls during this step: 0 succeeded with high effort: 0 succeeded with medium effort: 0 succeeded with low effort: 0 succeeded with basic effort: 0 succeeded with basic unbounded effort: 0
  Improving insertion delay done. (took cpu=0:00:00.0 real=0:00:00.0)
      flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:*                                                                   Improving insertion delay
  Wire Opt OverFix...
    Wire Reduction extra effort...
      Modified slew target multipliers. Leaf=(1 to 0.95) Trunk=(1 to 1) Top=(1 to 1)
      Artificially removing short and long paths...
        Legalizer API calls during this step: 0 succeeded with high effort: 0 succeeded with medium effort: 0 succeeded with low effort: 0 succeeded with basic effort: 0 succeeded with basic unbounded effort: 0
      Artificially removing short and long paths done. (took cpu=0:00:00.0 real=0:00:00.0)
      Global shorten wires A0...
        Legalizer API calls during this step: 0 succeeded with high effort: 0 succeeded with medium effort: 0 succeeded with low effort: 0 succeeded with basic effort: 0 succeeded with basic unbounded effort: 0
      Global shorten wires A0 done. (took cpu=0:00:00.0 real=0:00:00.0)
      Move For Wirelength - core...
        Move for wirelength. considered=14, filtered=14, permitted=13, cannotCompute=2, computed=11, moveTooSmall=13, resolved=0, predictFail=1, currentlyIllegal=0, legalizationFail=0, legalizedMoveTooSmall=2, ignoredLeafDriver=0, worse=38, accepted=2
        Max accepted move=41.400um, total accepted move=46.930um, average move=23.465um
        Move for wirelength. considered=14, filtered=14, permitted=13, cannotCompute=2, computed=11, moveTooSmall=12, resolved=0, predictFail=1, currentlyIllegal=0, legalizationFail=0, legalizedMoveTooSmall=2, ignoredLeafDriver=0, worse=41, accepted=2
        Max accepted move=10.040um, total accepted move=16.570um, average move=8.285um
        Move for wirelength. considered=14, filtered=14, permitted=13, cannotCompute=2, computed=11, moveTooSmall=12, resolved=0, predictFail=1, currentlyIllegal=0, legalizationFail=0, legalizedMoveTooSmall=2, ignoredLeafDriver=0, worse=41, accepted=2
        Max accepted move=6.930um, total accepted move=11.950um, average move=5.975um
        Legalizer API calls during this step: 135 succeeded with high effort: 135 succeeded with medium effort: 0 succeeded with low effort: 0 succeeded with basic effort: 0 succeeded with basic unbounded effort: 0
      Move For Wirelength - core done. (took cpu=0:00:00.5 real=0:00:00.5)
      Global shorten wires A1...
        Legalizer API calls during this step: 0 succeeded with high effort: 0 succeeded with medium effort: 0 succeeded with low effort: 0 succeeded with basic effort: 0 succeeded with basic unbounded effort: 0
      Global shorten wires A1 done. (took cpu=0:00:00.0 real=0:00:00.0)
      Move For Wirelength - core...
        Move for wirelength. considered=14, filtered=14, permitted=13, cannotCompute=11, computed=2, moveTooSmall=22, resolved=0, predictFail=0, currentlyIllegal=0, legalizationFail=0, legalizedMoveTooSmall=1, ignoredLeafDriver=0, worse=3, accepted=1
        Max accepted move=1.800um, total accepted move=1.800um, average move=1.800um
        Move for wirelength. considered=14, filtered=14, permitted=13, cannotCompute=11, computed=2, moveTooSmall=22, resolved=0, predictFail=0, currentlyIllegal=0, legalizationFail=0, legalizedMoveTooSmall=0, ignoredLeafDriver=0, worse=2, accepted=0
        Max accepted move=0.000um, total accepted move=0.000um
        Legalizer API calls during this step: 7 succeeded with high effort: 7 succeeded with medium effort: 0 succeeded with low effort: 0 succeeded with basic effort: 0 succeeded with basic unbounded effort: 0
      Move For Wirelength - core done. (took cpu=0:00:00.0 real=0:00:00.0)
      Global shorten wires B...
        Legalizer API calls during this step: 45 succeeded with high effort: 45 succeeded with medium effort: 0 succeeded with low effort: 0 succeeded with basic effort: 0 succeeded with basic unbounded effort: 0
      Global shorten wires B done. (took cpu=0:00:00.1 real=0:00:00.1)
      Move For Wirelength - branch...
        Move for wirelength. considered=14, filtered=14, permitted=13, cannotCompute=0, computed=13, moveTooSmall=0, resolved=0, predictFail=0, currentlyIllegal=0, legalizationFail=1, legalizedMoveTooSmall=0, ignoredLeafDriver=0, worse=15, accepted=0
        Max accepted move=0.000um, total accepted move=0.000um
        Legalizer API calls during this step: 16 succeeded with high effort: 16 succeeded with medium effort: 0 succeeded with low effort: 0 succeeded with basic effort: 0 succeeded with basic unbounded effort: 0
      Move For Wirelength - branch done. (took cpu=0:00:00.0 real=0:00:00.0)
      Reverted slew target multipliers. Leaf=(0.95 to 1) Trunk=(1 to 1) Top=(1 to 1)
      Clock DAG stats after 'Wire Reduction extra effort':
        cell counts      : b=13, i=0, icg=0, dcg=0, l=0, total=13
        sink counts      : regular=1133, enable_latch=0, load_capacitance=0, antenna=0, node_sink=0, total=1133
        misc counts      : r=1, pp=0
        cell areas       : b=87.210um^2, i=0.000um^2, icg=0.000um^2, dcg=0.000um^2, l=0.000um^2, total=87.210um^2
        cell capacitance : b=0.026pF, i=0.000pF, icg=0.000pF, dcg=0.000pF, l=0.000pF, total=0.026pF
        sink capacitance : total=0.349pF, avg=0.000pF, sd=0.000pF, min=0.000pF, max=0.000pF
        wire capacitance : top=0.000pF, trunk=0.056pF, leaf=0.327pF, total=0.382pF
        wire lengths     : top=0.000um, trunk=849.636um, leaf=4164.365um, total=5014.001um
        hp wire lengths  : top=0.000um, trunk=0.000um, leaf=1893.290um, total=1893.290um
      Clock DAG net violations after 'Wire Reduction extra effort': none
      Clock DAG primary half-corner transition distribution after 'Wire Reduction extra effort':
        Trunk : target=0.030ns count=1 avg=0.022ns sd=0.000ns min=0.022ns max=0.022ns {0 <= 0.018ns, 1 <= 0.024ns, 0 <= 0.027ns, 0 <= 0.029ns, 0 <= 0.030ns}
        Leaf  : target=0.030ns count=13 avg=0.027ns sd=0.001ns min=0.026ns max=0.029ns {0 <= 0.018ns, 0 <= 0.024ns, 6 <= 0.027ns, 7 <= 0.029ns, 0 <= 0.030ns}
      Clock DAG library cell distribution after 'Wire Reduction extra effort' {count}:
         Bufs: CLKBUFX16: 12 CLKBUFX12: 1 
      Primary reporting skew groups after 'Wire Reduction extra effort':
        skew_group Clk/default_const: insertion delay [min=0.028, max=0.046, avg=0.042, sd=0.003], skew [0.018 vs 0.020], 100% {0.028, 0.046} (wid=0.016 ws=0.014) (gid=0.032 gs=0.005)
      Skew group summary after 'Wire Reduction extra effort':
        skew_group Clk/default_const: insertion delay [min=0.028, max=0.046, avg=0.042, sd=0.003], skew [0.018 vs 0.020], 100% {0.028, 0.046} (wid=0.016 ws=0.014) (gid=0.032 gs=0.005)
      Legalizer API calls during this step: 203 succeeded with high effort: 203 succeeded with medium effort: 0 succeeded with low effort: 0 succeeded with basic effort: 0 succeeded with basic unbounded effort: 0
    Wire Reduction extra effort done. (took cpu=0:00:00.8 real=0:00:00.8)
      flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:*                                                                   Wire Reduction extra effort
    Optimizing orientation...
    FlipOpt...
    Disconnecting clock tree from netlist...
    Disconnecting clock tree from netlist done.
    Performing Single Threaded FlipOpt
    Optimizing orientation on clock cells...
      Orientation Wirelength Optimization: Attempted = 15 , Succeeded = 0 , Constraints Broken = 0 , CannotMove = 2 , Illegal = 13 , Other = 0
    Optimizing orientation on clock cells done.
    Resynthesising clock tree into netlist...
      Reset timing graph...
Ignoring AAE DB Resetting ...
      Reset timing graph done.
    Resynthesising clock tree into netlist done.
    FlipOpt done. (took cpu=0:00:00.0 real=0:00:00.0)
      flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:*                                                                   FlipOpt
    Optimizing orientation done. (took cpu=0:00:00.1 real=0:00:00.1)
      flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:*                                                                   Optimizing orientation
    Clock DAG stats after 'Wire Opt OverFix':
      cell counts      : b=13, i=0, icg=0, dcg=0, l=0, total=13
      sink counts      : regular=1133, enable_latch=0, load_capacitance=0, antenna=0, node_sink=0, total=1133
      misc counts      : r=1, pp=0
      cell areas       : b=87.210um^2, i=0.000um^2, icg=0.000um^2, dcg=0.000um^2, l=0.000um^2, total=87.210um^2
      cell capacitance : b=0.026pF, i=0.000pF, icg=0.000pF, dcg=0.000pF, l=0.000pF, total=0.026pF
      sink capacitance : total=0.349pF, avg=0.000pF, sd=0.000pF, min=0.000pF, max=0.000pF
      wire capacitance : top=0.000pF, trunk=0.056pF, leaf=0.327pF, total=0.382pF
      wire lengths     : top=0.000um, trunk=849.636um, leaf=4164.365um, total=5014.001um
      hp wire lengths  : top=0.000um, trunk=0.000um, leaf=1893.290um, total=1893.290um
    Clock DAG net violations after 'Wire Opt OverFix': none
    Clock DAG primary half-corner transition distribution after 'Wire Opt OverFix':
      Trunk : target=0.030ns count=1 avg=0.022ns sd=0.000ns min=0.022ns max=0.022ns {0 <= 0.018ns, 1 <= 0.024ns, 0 <= 0.027ns, 0 <= 0.029ns, 0 <= 0.030ns}
      Leaf  : target=0.030ns count=13 avg=0.027ns sd=0.001ns min=0.026ns max=0.029ns {0 <= 0.018ns, 0 <= 0.024ns, 6 <= 0.027ns, 7 <= 0.029ns, 0 <= 0.030ns}
    Clock DAG library cell distribution after 'Wire Opt OverFix' {count}:
       Bufs: CLKBUFX16: 12 CLKBUFX12: 1 
    Primary reporting skew groups after 'Wire Opt OverFix':
      skew_group Clk/default_const: insertion delay [min=0.028, max=0.046, avg=0.042, sd=0.003], skew [0.018 vs 0.020], 100% {0.028, 0.046} (wid=0.016 ws=0.014) (gid=0.032 gs=0.005)
    Skew group summary after 'Wire Opt OverFix':
      skew_group Clk/default_const: insertion delay [min=0.028, max=0.046, avg=0.042, sd=0.003], skew [0.018 vs 0.020], 100% {0.028, 0.046} (wid=0.016 ws=0.014) (gid=0.032 gs=0.005)
    Legalizer API calls during this step: 203 succeeded with high effort: 203 succeeded with medium effort: 0 succeeded with low effort: 0 succeeded with basic effort: 0 succeeded with basic unbounded effort: 0
  Wire Opt OverFix done. (took cpu=0:00:01.0 real=0:00:01.0)
      flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:*                                                                   Wire Opt OverFix
  Total capacitance is (rise=0.757pF fall=0.716pF), of which (rise=0.382pF fall=0.382pF) is wire, and (rise=0.375pF fall=0.334pF) is gate.
  Stage::Polishing done. (took cpu=0:00:03.3 real=0:00:03.3)
      flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:*                                                                   Stage::Polishing
  Stage::Updating netlist...
  Reset timing graph...
Ignoring AAE DB Resetting ...
  Reset timing graph done.
  Setting non-default rules before calling refine place.
  Leaving CCOpt scope - Cleaning up placement interface...
  Leaving CCOpt scope - Cleaning up placement interface done. (took cpu=0:00:00.1 real=0:00:00.1)
  Leaving CCOpt scope - ClockRefiner...
  Soft fixed 13 clock instances.
  Performing Clock Only Refine Place.
*** Starting place_detail (0:04:19 mem=2258.9M) ***
Total net bbox length = 3.035e+05 (1.547e+05 1.488e+05) (ext = 2.393e+03)
Move report: Detail placement moves 0 insts, mean move: 0.00 um, max move: 0.00 um 
	Runtime: CPU: 0:00:00.0 REAL: 0:00:00.0 MEM: 2258.9MB
Summary Report:
Instances move: 0 (out of 23781 movable)
Instances flipped: 0
Mean displacement: 0.00 um
Max displacement: 0.00 um 
Total net bbox length = 3.035e+05 (1.547e+05 1.488e+05) (ext = 2.393e+03)
Runtime: CPU: 0:00:00.0 REAL: 0:00:00.0 MEM: 2258.9MB
*** Finished place_detail (0:04:19 mem=2258.9M) ***
  ClockRefiner summary
  All clock instances: Moved 0, flipped 0 and cell swapped 0 (out of a total of 1146).
  Restoring place_status_cts on 13 clock instances.
  Leaving CCOpt scope - ClockRefiner done. (took cpu=0:00:00.2 real=0:00:00.2)
  Stage::Updating netlist done. (took cpu=0:00:00.2 real=0:00:00.2)
      flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:*                                                                   Stage::Updating netlist
  CCOpt::Phase::Implementation done. (took cpu=0:00:04.8 real=0:00:04.8)
      flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:*                                                                   CCOpt::Phase::Implementation
  CCOpt::Phase::eGRPC...
  eGR Post Conditioning loop iteration 0...
    Clock implementation routing...
      Leaving CCOpt scope - Routing Tools...
Net route status summary:
  Clock:        14 (unrouted=14, trialRouted=0, noStatus=0, routed=0, fixed=0, [crossesIlmBoundary=0, tooFewTerms=0, (crossesIlmBoundary AND tooFewTerms=0)])
  Non-clock: 32192 (unrouted=164, trialRouted=32028, noStatus=0, routed=0, fixed=0, [crossesIlmBoundary=0, tooFewTerms=164, (crossesIlmBoundary AND tooFewTerms=0)])
      Routing using eGR only...
        Early Global Route - eGR only step...
(ccopt eGR): There are 14 nets to be routed. 0 nets have skip routing designation.
(ccopt eGR): There are 14 nets for routing of which 14 have one or more fixed wires.
(ccopt eGR): Start to route 14 all nets
[NR-eGR] Track table information for default rule: 
[NR-eGR] Metal1 has single uniform track structure
[NR-eGR] Metal2 has single uniform track structure
[NR-eGR] Metal3 has single uniform track structure
[NR-eGR] Metal4 has single uniform track structure
[NR-eGR] Metal5 has single uniform track structure
[NR-eGR] Metal6 has single uniform track structure
[NR-eGR] Metal7 has single uniform track structure
[NR-eGR] Metal8 has single uniform track structure
[NR-eGR] Metal9 has single uniform track structure
[NR-eGR] Metal10 has single uniform track structure
[NR-eGR] Metal11 has single uniform track structure
[NR-eGR] Read 44318 PG shapes
[NR-eGR] Read 0 clock shapes
[NR-eGR] Read 0 other shapes
[NR-eGR] #Routing Blockages  : 0
[NR-eGR] #Instance Blockages : 0
[NR-eGR] #PG Blockages       : 44318
[NR-eGR] #Halo Blockages     : 0
[NR-eGR] #Boundary Blockages : 0
[NR-eGR] #Clock Blockages    : 0
[NR-eGR] #Other Blockages    : 0
[NR-eGR] Num Prerouted Nets = 0  Num Prerouted Wires = 0
[NR-eGR] Read 32042 nets ( ignored 32028 )
[NR-eGR] Connected 0 must-join pins/ports
[NR-eGR] There are 14 clock nets ( 14 with NDR ).
[NR-eGR] ============ Routing rule table ============
[NR-eGR] Rule id: 0  Nets: 14
[NR-eGR] ========================================
[NR-eGR] 
[NR-eGR] Layer group 1: route 14 net(s) in layer range [3, 4]
[NR-eGR] Early Global Route overflow of layer group 1: 0.00% H + 0.00% V. EstWL: 5.092380e+03um
[NR-eGR] Create a new net group with 11 nets and layer range [3, 6]
[NR-eGR] Layer group 2: route 11 net(s) in layer range [3, 6]
[NR-eGR] Early Global Route overflow of layer group 2: 0.00% H + 0.00% V. EstWL: 8.327700e+03um
[NR-eGR] Create a new net group with 8 nets and layer range [3, 8]
[NR-eGR] Layer group 3: route 8 net(s) in layer range [3, 8]
[NR-eGR] Early Global Route overflow of layer group 3: 0.00% H + 0.00% V. EstWL: 1.072341e+04um
[NR-eGR] Create a new net group with 8 nets and layer range [3, 10]
[NR-eGR] Layer group 4: route 8 net(s) in layer range [3, 10]
[NR-eGR] Early Global Route overflow of layer group 4: 0.00% H + 0.00% V. EstWL: 1.307808e+04um
[NR-eGR] Create a new net group with 2 nets and layer range [3, 11]
[NR-eGR] Layer group 5: route 2 net(s) in layer range [3, 11]
[NR-eGR] Early Global Route overflow of layer group 5: 0.00% H + 0.00% V. EstWL: 1.361502e+04um
[NR-eGR] Create a new net group with 2 nets and layer range [2, 11]
[NR-eGR] Layer group 6: route 2 net(s) in layer range [2, 11]
[NR-eGR] Early Global Route overflow of layer group 6: 0.00% H + 0.00% V. EstWL: 1.469745e+04um
[NR-eGR] Congestion Analysis By layer: (blocked Gcells are excluded) 
[NR-eGR]                        OverCon            
[NR-eGR]                         #Gcell     %Gcell
[NR-eGR]        Layer               (1)    OverCon
[NR-eGR] ----------------------------------------------
[NR-eGR]  Metal1 ( 1)         0( 0.00%)   ( 0.00%) 
[NR-eGR]  Metal2 ( 2)         0( 0.00%)   ( 0.00%) 
[NR-eGR]  Metal3 ( 3)         0( 0.00%)   ( 0.00%) 
[NR-eGR]  Metal4 ( 4)         0( 0.00%)   ( 0.00%) 
[NR-eGR]  Metal5 ( 5)         0( 0.00%)   ( 0.00%) 
[NR-eGR]  Metal6 ( 6)         0( 0.00%)   ( 0.00%) 
[NR-eGR]  Metal7 ( 7)         0( 0.00%)   ( 0.00%) 
[NR-eGR]  Metal8 ( 8)         0( 0.00%)   ( 0.00%) 
[NR-eGR]  Metal9 ( 9)         0( 0.00%)   ( 0.00%) 
[NR-eGR] Metal10 (10)         0( 0.00%)   ( 0.00%) 
[NR-eGR] Metal11 (11)         0( 0.00%)   ( 0.00%) 
[NR-eGR] ----------------------------------------------
[NR-eGR]        Total         0( 0.00%)   ( 0.00%) 
[NR-eGR] 
[NR-eGR] Overflow after Early Global Route 0.00% H + 0.00% V
[NR-eGR]                  Length (um)    Vias 
[NR-eGR] -------------------------------------
[NR-eGR]  Metal1   (1H)             0   92220 
[NR-eGR]  Metal2   (2V)        137090  130908 
[NR-eGR]  Metal3   (3H)        168648   10247 
[NR-eGR]  Metal4   (4V)         53137    2348 
[NR-eGR]  Metal5   (5H)         21208     173 
[NR-eGR]  Metal6   (6V)          2686      29 
[NR-eGR]  Metal7   (7H)            10      27 
[NR-eGR]  Metal8   (8V)             0      27 
[NR-eGR]  Metal9   (9H)            20      25 
[NR-eGR]  Metal10  (10V)           41       0 
[NR-eGR]  Metal11  (11H)            0       0 
[NR-eGR] -------------------------------------
[NR-eGR]           Total       382840  236004 
[NR-eGR] --------------------------------------------------------------------------
[NR-eGR] Total half perimeter of net bounding box: 303511um
[NR-eGR] Total length: 382840um, number of vias: 236004
[NR-eGR] --------------------------------------------------------------------------
[NR-eGR] Total eGR-routed clock nets wire length: 5116um, number of vias: 3339
[NR-eGR] --------------------------------------------------------------------------
[NR-eGR] Report for selected net(s) only.
[NR-eGR]                  Length (um)  Vias 
[NR-eGR] -----------------------------------
[NR-eGR]  Metal1   (1H)             0  1159 
[NR-eGR]  Metal2   (2V)           917  1367 
[NR-eGR]  Metal3   (3H)          2433   636 
[NR-eGR]  Metal4   (4V)          1601    41 
[NR-eGR]  Metal5   (5H)            92    30 
[NR-eGR]  Metal6   (6V)             7    27 
[NR-eGR]  Metal7   (7H)             5    27 
[NR-eGR]  Metal8   (8V)             0    27 
[NR-eGR]  Metal9   (9H)            20    25 
[NR-eGR]  Metal10  (10V)           41     0 
[NR-eGR]  Metal11  (11H)            0     0 
[NR-eGR] -----------------------------------
[NR-eGR]           Total         5116  3339 
[NR-eGR] --------------------------------------------------------------------------
[NR-eGR] Total half perimeter of net bounding box: 2389um
[NR-eGR] Total length: 5116um, number of vias: 3339
[NR-eGR] --------------------------------------------------------------------------
[NR-eGR] Total routed clock nets wire length: 5116um, number of vias: 3339
[NR-eGR] --------------------------------------------------------------------------
[NR-eGR] Finished Early Global Route kernel ( CPU: 0.45 sec, Real: 0.81 sec, Curr Mem: 2259.79 MB )
        Early Global Route - eGR only step done. (took cpu=0:00:00.5 real=0:00:00.9)
      flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:*                                                                   Early Global Route - eGR only step
      Routing using eGR only done.
Net route status summary:
  Clock:        14 (unrouted=0, trialRouted=0, noStatus=0, routed=14, fixed=0, [crossesIlmBoundary=0, tooFewTerms=0, (crossesIlmBoundary AND tooFewTerms=0)])
  Non-clock: 32192 (unrouted=164, trialRouted=32028, noStatus=0, routed=0, fixed=0, [crossesIlmBoundary=0, tooFewTerms=164, (crossesIlmBoundary AND tooFewTerms=0)])

CCOPT: Done with clock implementation routing.

      Leaving CCOpt scope - Routing Tools done. (took cpu=0:00:00.6 real=0:00:00.9)
    Clock implementation routing done.
    Leaving CCOpt scope - extractRC...
    Updating RC parasitics by calling: "extract_rc -noRouteCheck"...
Extraction called for design 'filter_top' of instances=23781 and nets=32206 using extraction engine 'pre_route' .
pre_route RC Extraction called for design filter_top.
RC Extraction called in multi-corner(1) mode.
RCMode: PreRoute
      RC Corner Indexes            0   
Capacitance Scaling Factor   : 1.00000 
Resistance Scaling Factor    : 1.00000 
Clock Cap. Scaling Factor    : 1.00000 
Clock Res. Scaling Factor    : 1.00000 
Shrink Factor                : 1.00000
PreRoute extraction is honoring NDR/Shielding/ExtraSpace for clock nets.
Using Quantus QRC technology file ...
Updating RC grid for preRoute extraction ...
Initializing multi-corner resistance tables ...
PreRoute RC Extraction DONE (CPU Time: 0:00:00.2  Real Time: 0:00:00.0  MEM: 2259.789M)
    Updating RC parasitics by calling: "extract_rc -noRouteCheck" done.
    Leaving CCOpt scope - extractRC done. (took cpu=0:00:00.2 real=0:00:00.2)
    Leaving CCOpt scope - Initializing placement interface...
    Leaving CCOpt scope - Initializing placement interface done. (took cpu=0:00:00.1 real=0:00:00.1)
    Calling post conditioning for eGRPC...
      eGRPC...
        eGRPC active optimizations:
         - Move Down
         - Downsizing before DRV sizing
         - DRV fixing with sizing
         - Move to fanout
         - Cloning
        
        Currently running CTS, using active skew data
        Reset bufferability constraints...
        Resetting previous bufferability status on all nets so that eGRPC will attempt to fix all clock tree violations.
        Clock tree timing engine global stage delay update for default_dc:both.late...
        Clock tree timing engine global stage delay update for default_dc:both.late done. (took cpu=0:00:00.0 real=0:00:00.0)
        Reset bufferability constraints done. (took cpu=0:00:00.0 real=0:00:00.0)
        Clock DAG stats eGRPC initial state:
          cell counts      : b=13, i=0, icg=0, dcg=0, l=0, total=13
          sink counts      : regular=1133, enable_latch=0, load_capacitance=0, antenna=0, node_sink=0, total=1133
          misc counts      : r=1, pp=0
          cell areas       : b=87.210um^2, i=0.000um^2, icg=0.000um^2, dcg=0.000um^2, l=0.000um^2, total=87.210um^2
          cell capacitance : b=0.026pF, i=0.000pF, icg=0.000pF, dcg=0.000pF, l=0.000pF, total=0.026pF
          sink capacitance : total=0.349pF, avg=0.000pF, sd=0.000pF, min=0.000pF, max=0.000pF
          wire capacitance : top=0.000pF, trunk=0.057pF, leaf=0.338pF, total=0.395pF
          wire lengths     : top=0.000um, trunk=885.050um, leaf=4231.210um, total=5116.260um
          hp wire lengths  : top=0.000um, trunk=0.000um, leaf=1893.290um, total=1893.290um
        Clock DAG net violations eGRPC initial state: none
        Clock DAG primary half-corner transition distribution eGRPC initial state:
          Trunk : target=0.030ns count=1 avg=0.021ns sd=0.000ns min=0.021ns max=0.021ns {0 <= 0.018ns, 1 <= 0.024ns, 0 <= 0.027ns, 0 <= 0.029ns, 0 <= 0.030ns}
          Leaf  : target=0.030ns count=13 avg=0.027ns sd=0.001ns min=0.026ns max=0.029ns {0 <= 0.018ns, 0 <= 0.024ns, 8 <= 0.027ns, 5 <= 0.029ns, 0 <= 0.030ns}
        Clock DAG library cell distribution eGRPC initial state {count}:
           Bufs: CLKBUFX16: 12 CLKBUFX12: 1 
        Primary reporting skew groups eGRPC initial state:
          skew_group Clk/default_const: insertion delay [min=0.028, max=0.045, avg=0.041, sd=0.003], skew [0.018 vs 0.020], 100% {0.028, 0.045} (wid=0.015 ws=0.013) (gid=0.032 gs=0.006)
        Skew group summary eGRPC initial state:
          skew_group Clk/default_const: insertion delay [min=0.028, max=0.045, avg=0.041, sd=0.003], skew [0.018 vs 0.020], 100% {0.028, 0.045} (wid=0.015 ws=0.013) (gid=0.032 gs=0.006)
        eGRPC Moving buffers...
          Violation analysis...
          Violation analysis done. (took cpu=0:00:00.0 real=0:00:00.0)
      flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:*                                                                   Violation analysis
          Clock DAG stats after 'eGRPC Moving buffers':
            cell counts      : b=13, i=0, icg=0, dcg=0, l=0, total=13
            sink counts      : regular=1133, enable_latch=0, load_capacitance=0, antenna=0, node_sink=0, total=1133
            misc counts      : r=1, pp=0
            cell areas       : b=87.210um^2, i=0.000um^2, icg=0.000um^2, dcg=0.000um^2, l=0.000um^2, total=87.210um^2
            cell capacitance : b=0.026pF, i=0.000pF, icg=0.000pF, dcg=0.000pF, l=0.000pF, total=0.026pF
            sink capacitance : total=0.349pF, avg=0.000pF, sd=0.000pF, min=0.000pF, max=0.000pF
            wire capacitance : top=0.000pF, trunk=0.057pF, leaf=0.338pF, total=0.395pF
            wire lengths     : top=0.000um, trunk=885.050um, leaf=4231.210um, total=5116.260um
            hp wire lengths  : top=0.000um, trunk=0.000um, leaf=1893.290um, total=1893.290um
          Clock DAG net violations after 'eGRPC Moving buffers': none
          Clock DAG primary half-corner transition distribution after 'eGRPC Moving buffers':
            Trunk : target=0.030ns count=1 avg=0.021ns sd=0.000ns min=0.021ns max=0.021ns {0 <= 0.018ns, 1 <= 0.024ns, 0 <= 0.027ns, 0 <= 0.029ns, 0 <= 0.030ns}
            Leaf  : target=0.030ns count=13 avg=0.027ns sd=0.001ns min=0.026ns max=0.029ns {0 <= 0.018ns, 0 <= 0.024ns, 8 <= 0.027ns, 5 <= 0.029ns, 0 <= 0.030ns}
          Clock DAG library cell distribution after 'eGRPC Moving buffers' {count}:
             Bufs: CLKBUFX16: 12 CLKBUFX12: 1 
          Primary reporting skew groups after 'eGRPC Moving buffers':
            skew_group Clk/default_const: insertion delay [min=0.028, max=0.045], skew [0.018 vs 0.020]
          Skew group summary after 'eGRPC Moving buffers':
            skew_group Clk/default_const: insertion delay [min=0.028, max=0.045], skew [0.018 vs 0.020]
          Legalizer API calls during this step: 0 succeeded with high effort: 0 succeeded with medium effort: 0 succeeded with low effort: 0 succeeded with basic effort: 0 succeeded with basic unbounded effort: 0
        eGRPC Moving buffers done. (took cpu=0:00:00.1 real=0:00:00.1)
      flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:*                                                                   eGRPC Moving buffers
        eGRPC Initial Pass of Downsizing Clock Tree cells...
          Artificially removing long paths...
            Legalizer API calls during this step: 0 succeeded with high effort: 0 succeeded with medium effort: 0 succeeded with low effort: 0 succeeded with basic effort: 0 succeeded with basic unbounded effort: 0
          Artificially removing long paths done. (took cpu=0:00:00.0 real=0:00:00.0)
          Modifying slew-target multiplier from 1 to 0.9
          Downsizing prefiltering...
          Downsizing prefiltering done.
          Downsizing: ...20% ...40% ...60% ...80% ...100% 
          DoDownSizing Summary : numSized = 0, numUnchanged = 0, numSkippedDueToOther = 0, numSkippedDueToCloseToSlewTarget = 13, numSkippedDueToCloseToSkewTarget = 1
          CCOpt-eGRPC Downsizing: considered: 0, tested: 0, violation detected: 0, violation ignored (due to small violation): 0, cannot run: 0, attempted: 0, unsuccessful: 0, sized: 0
          Reverting slew-target multiplier from 0.9 to 1
          Clock DAG stats after 'eGRPC Initial Pass of Downsizing Clock Tree cells':
            cell counts      : b=13, i=0, icg=0, dcg=0, l=0, total=13
            sink counts      : regular=1133, enable_latch=0, load_capacitance=0, antenna=0, node_sink=0, total=1133
            misc counts      : r=1, pp=0
            cell areas       : b=87.210um^2, i=0.000um^2, icg=0.000um^2, dcg=0.000um^2, l=0.000um^2, total=87.210um^2
            cell capacitance : b=0.026pF, i=0.000pF, icg=0.000pF, dcg=0.000pF, l=0.000pF, total=0.026pF
            sink capacitance : total=0.349pF, avg=0.000pF, sd=0.000pF, min=0.000pF, max=0.000pF
            wire capacitance : top=0.000pF, trunk=0.057pF, leaf=0.338pF, total=0.395pF
            wire lengths     : top=0.000um, trunk=885.050um, leaf=4231.210um, total=5116.260um
            hp wire lengths  : top=0.000um, trunk=0.000um, leaf=1893.290um, total=1893.290um
          Clock DAG net violations after 'eGRPC Initial Pass of Downsizing Clock Tree cells': none
          Clock DAG primary half-corner transition distribution after 'eGRPC Initial Pass of Downsizing Clock Tree cells':
            Trunk : target=0.030ns count=1 avg=0.021ns sd=0.000ns min=0.021ns max=0.021ns {0 <= 0.018ns, 1 <= 0.024ns, 0 <= 0.027ns, 0 <= 0.029ns, 0 <= 0.030ns}
            Leaf  : target=0.030ns count=13 avg=0.027ns sd=0.001ns min=0.026ns max=0.029ns {0 <= 0.018ns, 0 <= 0.024ns, 8 <= 0.027ns, 5 <= 0.029ns, 0 <= 0.030ns}
          Clock DAG library cell distribution after 'eGRPC Initial Pass of Downsizing Clock Tree cells' {count}:
             Bufs: CLKBUFX16: 12 CLKBUFX12: 1 
          Primary reporting skew groups after 'eGRPC Initial Pass of Downsizing Clock Tree cells':
            skew_group Clk/default_const: insertion delay [min=0.028, max=0.045], skew [0.018 vs 0.020]
          Skew group summary after 'eGRPC Initial Pass of Downsizing Clock Tree cells':
            skew_group Clk/default_const: insertion delay [min=0.028, max=0.045], skew [0.018 vs 0.020]
          Legalizer API calls during this step: 0 succeeded with high effort: 0 succeeded with medium effort: 0 succeeded with low effort: 0 succeeded with basic effort: 0 succeeded with basic unbounded effort: 0
        eGRPC Initial Pass of Downsizing Clock Tree cells done. (took cpu=0:00:00.0 real=0:00:00.0)
      flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:*                                                                   eGRPC Initial Pass of Downsizing Clock Tree cells
        eGRPC Fixing DRVs...
          Fixing clock tree DRVs: ...20% ...40% ...60% ...80% ...100% 
          CCOpt-eGRPC: considered: 14, tested: 14, violation detected: 0, violation ignored (due to small violation): 0, cannot run: 0, attempted: 0, unsuccessful: 0, sized: 0
          
          Statistics: Fix DRVs (cell sizing):
          ===================================
          
          Cell changes by Net Type:
          
          -------------------------------------------------------------------------------------------------
          Net Type    Attempted    Upsized     Downsized    Swapped Same Size    Total Changed    Not Sized
          -------------------------------------------------------------------------------------------------
          top                0            0           0            0                    0                0
          trunk              0            0           0            0                    0                0
          leaf               0            0           0            0                    0                0
          -------------------------------------------------------------------------------------------------
          Total              0            0           0            0                    0                0
          -------------------------------------------------------------------------------------------------
          
          Upsized: 0, Downsized: 0, Sized but same area: 0, Unchanged: 0, Area change: 0.000um^2 (0.000%)
          Max. move: 0.000um, Min. move: 0.000um, Avg. move: N/A
          
          Clock DAG stats after 'eGRPC Fixing DRVs':
            cell counts      : b=13, i=0, icg=0, dcg=0, l=0, total=13
            sink counts      : regular=1133, enable_latch=0, load_capacitance=0, antenna=0, node_sink=0, total=1133
            misc counts      : r=1, pp=0
            cell areas       : b=87.210um^2, i=0.000um^2, icg=0.000um^2, dcg=0.000um^2, l=0.000um^2, total=87.210um^2
            cell capacitance : b=0.026pF, i=0.000pF, icg=0.000pF, dcg=0.000pF, l=0.000pF, total=0.026pF
            sink capacitance : total=0.349pF, avg=0.000pF, sd=0.000pF, min=0.000pF, max=0.000pF
            wire capacitance : top=0.000pF, trunk=0.057pF, leaf=0.338pF, total=0.395pF
            wire lengths     : top=0.000um, trunk=885.050um, leaf=4231.210um, total=5116.260um
            hp wire lengths  : top=0.000um, trunk=0.000um, leaf=1893.290um, total=1893.290um
          Clock DAG net violations after 'eGRPC Fixing DRVs': none
          Clock DAG primary half-corner transition distribution after 'eGRPC Fixing DRVs':
            Trunk : target=0.030ns count=1 avg=0.021ns sd=0.000ns min=0.021ns max=0.021ns {0 <= 0.018ns, 1 <= 0.024ns, 0 <= 0.027ns, 0 <= 0.029ns, 0 <= 0.030ns}
            Leaf  : target=0.030ns count=13 avg=0.027ns sd=0.001ns min=0.026ns max=0.029ns {0 <= 0.018ns, 0 <= 0.024ns, 8 <= 0.027ns, 5 <= 0.029ns, 0 <= 0.030ns}
          Clock DAG library cell distribution after 'eGRPC Fixing DRVs' {count}:
             Bufs: CLKBUFX16: 12 CLKBUFX12: 1 
          Primary reporting skew groups after 'eGRPC Fixing DRVs':
            skew_group Clk/default_const: insertion delay [min=0.028, max=0.045], skew [0.018 vs 0.020]
          Skew group summary after 'eGRPC Fixing DRVs':
            skew_group Clk/default_const: insertion delay [min=0.028, max=0.045], skew [0.018 vs 0.020]
          Legalizer API calls during this step: 0 succeeded with high effort: 0 succeeded with medium effort: 0 succeeded with low effort: 0 succeeded with basic effort: 0 succeeded with basic unbounded effort: 0
        eGRPC Fixing DRVs done. (took cpu=0:00:00.0 real=0:00:00.0)
      flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:*                                                                   eGRPC Fixing DRVs
        Reconnecting optimized routes...
        Reset timing graph...
Ignoring AAE DB Resetting ...
        Reset timing graph done.
        Reconnecting optimized routes done. (took cpu=0:00:00.0 real=0:00:00.0)
        Violation analysis...
        Violation analysis done. (took cpu=0:00:00.0 real=0:00:00.0)
      flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:*                                                                   Violation analysis
        Reset timing graph...
Ignoring AAE DB Resetting ...
        Reset timing graph done.
        Clock DAG stats before routing clock trees:
          cell counts      : b=13, i=0, icg=0, dcg=0, l=0, total=13
          sink counts      : regular=1133, enable_latch=0, load_capacitance=0, antenna=0, node_sink=0, total=1133
          misc counts      : r=1, pp=0
          cell areas       : b=87.210um^2, i=0.000um^2, icg=0.000um^2, dcg=0.000um^2, l=0.000um^2, total=87.210um^2
          cell capacitance : b=0.026pF, i=0.000pF, icg=0.000pF, dcg=0.000pF, l=0.000pF, total=0.026pF
          sink capacitance : total=0.349pF, avg=0.000pF, sd=0.000pF, min=0.000pF, max=0.000pF
          wire capacitance : top=0.000pF, trunk=0.057pF, leaf=0.338pF, total=0.395pF
          wire lengths     : top=0.000um, trunk=885.050um, leaf=4231.210um, total=5116.260um
          hp wire lengths  : top=0.000um, trunk=0.000um, leaf=1893.290um, total=1893.290um
        Clock DAG net violations before routing clock trees: none
        Clock DAG primary half-corner transition distribution before routing clock trees:
          Trunk : target=0.030ns count=1 avg=0.021ns sd=0.000ns min=0.021ns max=0.021ns {0 <= 0.018ns, 1 <= 0.024ns, 0 <= 0.027ns, 0 <= 0.029ns, 0 <= 0.030ns}
          Leaf  : target=0.030ns count=13 avg=0.027ns sd=0.001ns min=0.026ns max=0.029ns {0 <= 0.018ns, 0 <= 0.024ns, 8 <= 0.027ns, 5 <= 0.029ns, 0 <= 0.030ns}
        Clock DAG library cell distribution before routing clock trees {count}:
           Bufs: CLKBUFX16: 12 CLKBUFX12: 1 
        Primary reporting skew groups before routing clock trees:
          skew_group Clk/default_const: insertion delay [min=0.028, max=0.045, avg=0.041, sd=0.003], skew [0.018 vs 0.020], 100% {0.028, 0.045} (wid=0.015 ws=0.013) (gid=0.032 gs=0.006)
        Skew group summary before routing clock trees:
          skew_group Clk/default_const: insertion delay [min=0.028, max=0.045, avg=0.041, sd=0.003], skew [0.018 vs 0.020], 100% {0.028, 0.045} (wid=0.015 ws=0.013) (gid=0.032 gs=0.006)
      eGRPC done.
    Calling post conditioning for eGRPC done.
  eGR Post Conditioning loop iteration 0 done.
  Refine place not called during Post Conditioning. Calling it now the eGR->PC Loop is complete.
  Leaving CCOpt scope - Cleaning up placement interface...
  Leaving CCOpt scope - Cleaning up placement interface done. (took cpu=0:00:00.1 real=0:00:00.1)
  Leaving CCOpt scope - ClockRefiner...
  Soft fixed 13 clock instances.
  Performing Single Pass Refine Place.
*** Starting place_detail (0:04:20 mem=2259.9M) ***
Total net bbox length = 3.035e+05 (1.547e+05 1.488e+05) (ext = 2.393e+03)
Move report: Detail placement moves 55 insts, mean move: 1.41 um, max move: 2.80 um 
	Max move on inst (fir_filter/g861384): (142.80, 257.83) --> (140.00, 257.83)
	Runtime: CPU: 0:00:00.7 REAL: 0:00:01.0 MEM: 2247.2MB
Summary Report:
Instances move: 55 (out of 23781 movable)
Instances flipped: 0
Mean displacement: 1.41 um
Max displacement: 2.80 um (Instance: fir_filter/g861384) (142.8, 257.83) -> (140, 257.83)
	Length: 3 sites, height: 1 rows, site name: CoreSite, cell type: NOR2X1
Total net bbox length = 3.036e+05 (1.547e+05 1.488e+05) (ext = 2.393e+03)
Runtime: CPU: 0:00:00.7 REAL: 0:00:01.0 MEM: 2247.2MB
*** Finished place_detail (0:04:21 mem=2247.2M) ***
  ClockRefiner summary
  All clock instances: Moved 0, flipped 0 and cell swapped 0 (out of a total of 1146).
  Restoring place_status_cts on 13 clock instances.
  Leaving CCOpt scope - ClockRefiner done. (took cpu=0:00:00.9 real=0:00:00.9)
  CCOpt::Phase::eGRPC done. (took cpu=0:00:02.1 real=0:00:02.5)
      flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:*                                                                   CCOpt::Phase::eGRPC
  CCOpt::Phase::Routing...
  Clock implementation routing...
    Leaving CCOpt scope - Routing Tools...
Net route status summary:
  Clock:        14 (unrouted=0, trialRouted=0, noStatus=0, routed=14, fixed=0, [crossesIlmBoundary=0, tooFewTerms=0, (crossesIlmBoundary AND tooFewTerms=0)])
  Non-clock: 32192 (unrouted=164, trialRouted=32028, noStatus=0, routed=0, fixed=0, [crossesIlmBoundary=0, tooFewTerms=164, (crossesIlmBoundary AND tooFewTerms=0)])
    Routing using eGR in eGR->NR Step...
      Early Global Route - eGR->Nr High Frequency step...
(ccopt eGR): There are 14 nets to be routed. 0 nets have skip routing designation.
(ccopt eGR): There are 14 nets for routing of which 14 have one or more fixed wires.
(ccopt eGR): Start to route 14 all nets
[NR-eGR] Track table information for default rule: 
[NR-eGR] Metal1 has single uniform track structure
[NR-eGR] Metal2 has single uniform track structure
[NR-eGR] Metal3 has single uniform track structure
[NR-eGR] Metal4 has single uniform track structure
[NR-eGR] Metal5 has single uniform track structure
[NR-eGR] Metal6 has single uniform track structure
[NR-eGR] Metal7 has single uniform track structure
[NR-eGR] Metal8 has single uniform track structure
[NR-eGR] Metal9 has single uniform track structure
[NR-eGR] Metal10 has single uniform track structure
[NR-eGR] Metal11 has single uniform track structure
[NR-eGR] Read 44318 PG shapes
[NR-eGR] Read 0 clock shapes
[NR-eGR] Read 0 other shapes
[NR-eGR] #Routing Blockages  : 0
[NR-eGR] #Instance Blockages : 0
[NR-eGR] #PG Blockages       : 44318
[NR-eGR] #Halo Blockages     : 0
[NR-eGR] #Boundary Blockages : 0
[NR-eGR] #Clock Blockages    : 0
[NR-eGR] #Other Blockages    : 0
[NR-eGR] Num Prerouted Nets = 0  Num Prerouted Wires = 0
[NR-eGR] Read 32042 nets ( ignored 32028 )
[NR-eGR] Connected 0 must-join pins/ports
[NR-eGR] There are 14 clock nets ( 14 with NDR ).
[NR-eGR] ============ Routing rule table ============
[NR-eGR] Rule id: 0  Nets: 14
[NR-eGR] ========================================
[NR-eGR] 
[NR-eGR] Layer group 1: route 14 net(s) in layer range [3, 4]
[NR-eGR] Early Global Route overflow of layer group 1: 0.00% H + 0.00% V. EstWL: 5.092380e+03um
[NR-eGR] Create a new net group with 11 nets and layer range [3, 6]
[NR-eGR] Layer group 2: route 11 net(s) in layer range [3, 6]
[NR-eGR] Early Global Route overflow of layer group 2: 0.00% H + 0.00% V. EstWL: 8.327700e+03um
[NR-eGR] Create a new net group with 8 nets and layer range [3, 8]
[NR-eGR] Layer group 3: route 8 net(s) in layer range [3, 8]
[NR-eGR] Early Global Route overflow of layer group 3: 0.00% H + 0.00% V. EstWL: 1.072341e+04um
[NR-eGR] Create a new net group with 8 nets and layer range [3, 10]
[NR-eGR] Layer group 4: route 8 net(s) in layer range [3, 10]
[NR-eGR] Early Global Route overflow of layer group 4: 0.00% H + 0.00% V. EstWL: 1.307808e+04um
[NR-eGR] Create a new net group with 2 nets and layer range [3, 11]
[NR-eGR] Layer group 5: route 2 net(s) in layer range [3, 11]
[NR-eGR] Early Global Route overflow of layer group 5: 0.00% H + 0.00% V. EstWL: 1.361502e+04um
[NR-eGR] Create a new net group with 2 nets and layer range [2, 11]
[NR-eGR] Layer group 6: route 2 net(s) in layer range [2, 11]
[NR-eGR] Early Global Route overflow of layer group 6: 0.00% H + 0.00% V. EstWL: 1.469745e+04um
[NR-eGR] Congestion Analysis By layer: (blocked Gcells are excluded) 
[NR-eGR]                        OverCon            
[NR-eGR]                         #Gcell     %Gcell
[NR-eGR]        Layer               (1)    OverCon
[NR-eGR] ----------------------------------------------
[NR-eGR]  Metal1 ( 1)         0( 0.00%)   ( 0.00%) 
[NR-eGR]  Metal2 ( 2)         0( 0.00%)   ( 0.00%) 
[NR-eGR]  Metal3 ( 3)         0( 0.00%)   ( 0.00%) 
[NR-eGR]  Metal4 ( 4)         0( 0.00%)   ( 0.00%) 
[NR-eGR]  Metal5 ( 5)         0( 0.00%)   ( 0.00%) 
[NR-eGR]  Metal6 ( 6)         0( 0.00%)   ( 0.00%) 
[NR-eGR]  Metal7 ( 7)         0( 0.00%)   ( 0.00%) 
[NR-eGR]  Metal8 ( 8)         0( 0.00%)   ( 0.00%) 
[NR-eGR]  Metal9 ( 9)         0( 0.00%)   ( 0.00%) 
[NR-eGR] Metal10 (10)         0( 0.00%)   ( 0.00%) 
[NR-eGR] Metal11 (11)         0( 0.00%)   ( 0.00%) 
[NR-eGR] ----------------------------------------------
[NR-eGR]        Total         0( 0.00%)   ( 0.00%) 
[NR-eGR] 
[NR-eGR] Overflow after Early Global Route 0.00% H + 0.00% V
[NR-eGR]                  Length (um)    Vias 
[NR-eGR] -------------------------------------
[NR-eGR]  Metal1   (1H)             0   92220 
[NR-eGR]  Metal2   (2V)        137090  130908 
[NR-eGR]  Metal3   (3H)        168648   10247 
[NR-eGR]  Metal4   (4V)         53137    2348 
[NR-eGR]  Metal5   (5H)         21208     173 
[NR-eGR]  Metal6   (6V)          2686      29 
[NR-eGR]  Metal7   (7H)            10      27 
[NR-eGR]  Metal8   (8V)             0      27 
[NR-eGR]  Metal9   (9H)            20      25 
[NR-eGR]  Metal10  (10V)           41       0 
[NR-eGR]  Metal11  (11H)            0       0 
[NR-eGR] -------------------------------------
[NR-eGR]           Total       382840  236004 
[NR-eGR] --------------------------------------------------------------------------
[NR-eGR] Total half perimeter of net bounding box: 303574um
[NR-eGR] Total length: 382840um, number of vias: 236004
[NR-eGR] --------------------------------------------------------------------------
[NR-eGR] Total eGR-routed clock nets wire length: 5116um, number of vias: 3339
[NR-eGR] --------------------------------------------------------------------------
[NR-eGR] Report for selected net(s) only.
[NR-eGR]                  Length (um)  Vias 
[NR-eGR] -----------------------------------
[NR-eGR]  Metal1   (1H)             0  1159 
[NR-eGR]  Metal2   (2V)           917  1367 
[NR-eGR]  Metal3   (3H)          2433   636 
[NR-eGR]  Metal4   (4V)          1601    41 
[NR-eGR]  Metal5   (5H)            92    30 
[NR-eGR]  Metal6   (6V)             7    27 
[NR-eGR]  Metal7   (7H)             5    27 
[NR-eGR]  Metal8   (8V)             0    27 
[NR-eGR]  Metal9   (9H)            20    25 
[NR-eGR]  Metal10  (10V)           41     0 
[NR-eGR]  Metal11  (11H)            0     0 
[NR-eGR] -----------------------------------
[NR-eGR]           Total         5116  3339 
[NR-eGR] --------------------------------------------------------------------------
[NR-eGR] Total half perimeter of net bounding box: 2389um
[NR-eGR] Total length: 5116um, number of vias: 3339
[NR-eGR] --------------------------------------------------------------------------
[NR-eGR] Total routed clock nets wire length: 5116um, number of vias: 3339
[NR-eGR] --------------------------------------------------------------------------
[NR-eGR] Finished Early Global Route kernel ( CPU: 0.45 sec, Real: 0.78 sec, Curr Mem: 2252.09 MB )
      Early Global Route - eGR->Nr High Frequency step done. (took cpu=0:00:00.5 real=0:00:00.8)
      flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:*                                                                   Early Global Route - eGR->Nr High Frequency step
    Routing using eGR in eGR->NR Step done.
    Routing using NR in eGR->NR Step...

CCOPT: Preparing to route 14 clock nets with NanoRoute.
  All net are default rule.
  Preferred NanoRoute mode settings: Current
**WARN: (IMPTCM-77):	Option "-grouteExpUseNanoRoute2" for command setNanoRouteMode is obsolete and will be removed in a future release. The obsolete option still works in this release but to avoid this warning and to ensure compatibility with future releases, remove the obsolete option from your script.
**WARN: (IMPDBTCL-321):	The attribute 'route_design_global_exp_use_nano_route2' still works but will be obsolete in a future major release. You should remove it from your script before the next major release to avoid errors.
**WARN: (IMPTCM-77):	Option "-routeExpDeterministicMultiThread" for command setNanoRouteMode is obsolete and will be removed in a future release. The obsolete option still works in this release but to avoid this warning and to ensure compatibility with future releases, remove the obsolete option from your script.
**WARN: (IMPDBTCL-321):	The attribute 'route_design_exp_deterministic_multi_thread' still works but will be obsolete in a future major release. You should remove it from your script before the next major release to avoid errors.
      Clock detailed routing...
        NanoRoute...

route_global_detail

#Start route_global_detail on Thu Dec  7 19:12:59 2023
#
#num needed restored net=0
#need_extraction net=0 (total=32206)
#NanoRoute Version 21.18-s099_1 NR230707-1955/21_18-UB
#
#Wire/Via statistics before line assignment ...
#Total number of nets with non-default rule or having extra spacing = 14
#Total wire length = 5116 um.
#Total half perimeter of net bounding box = 2400 um.
#Total wire length on LAYER Metal1 = 0 um.
#Total wire length on LAYER Metal2 = 917 um.
#Total wire length on LAYER Metal3 = 2433 um.
#Total wire length on LAYER Metal4 = 1601 um.
#Total wire length on LAYER Metal5 = 92 um.
#Total wire length on LAYER Metal6 = 7 um.
#Total wire length on LAYER Metal7 = 5 um.
#Total wire length on LAYER Metal8 = 1 um.
#Total wire length on LAYER Metal9 = 20 um.
#Total wire length on LAYER Metal10 = 41 um.
#Total wire length on LAYER Metal11 = 0 um.
#Total number of vias = 3339
#Up-Via Summary (total 3339):
#           
#-----------------------
# Metal1           1159
# Metal2           1367
# Metal3            636
# Metal4             41
# Metal5             30
# Metal6             27
# Metal7             27
# Metal8             27
# Metal9             25
#-----------------------
#                  3339 
#
#Start routing data preparation on Thu Dec  7 19:12:59 2023
#
#Minimum voltage of a net in the design = 0.000.
#Maximum voltage of a net in the design = 1.000.
#Voltage range [0.000 - 1.000] has 32204 nets.
#Voltage range [1.000 - 1.000] has 1 net.
#Voltage range [0.000 - 0.000] has 1 net.
#Build and mark too close pins for the same net.
#Initial pin access analysis.
#Detail pin access analysis.
# Metal1       H   Track-Pitch = 0.19000    Line-2-Via Pitch = 0.13000
# Metal2       V   Track-Pitch = 0.20000    Line-2-Via Pitch = 0.15000
# Metal3       H   Track-Pitch = 0.19000    Line-2-Via Pitch = 0.15000
# Metal4       V   Track-Pitch = 0.20000    Line-2-Via Pitch = 0.15000
# Metal5       H   Track-Pitch = 0.19000    Line-2-Via Pitch = 0.15000
# Metal6       V   Track-Pitch = 0.20000    Line-2-Via Pitch = 0.15000
# Metal7       H   Track-Pitch = 0.19000    Line-2-Via Pitch = 0.15000
# Metal8       V   Track-Pitch = 0.20000    Line-2-Via Pitch = 0.15000
# Metal9       H   Track-Pitch = 0.19000    Line-2-Via Pitch = 0.15000
# Metal10      V   Track-Pitch = 0.50000    Line-2-Via Pitch = 0.42000
# Metal11      H   Track-Pitch = 0.47500    Line-2-Via Pitch = 0.43000
#Bottom routing layer index=2(Metal2), bottom routing layer for shielding=2(Metal2), bottom shield layer=2(Metal2)
#shield_bottom_stripe_layer=1(Metal1), shield_top_stripe_layer=11(Metal11)
#pin_access_rlayer=2(Metal2)
#shield_top_dpt_rlayer=-1 top_rlayer=11 top_trim_metal_rlayer=-1 rlayer_lowest=1 bottom_rlayer=2
#enable_trim_layer_shield=F enable_dpt_layer_shield=F has_line_end_grid=F
#cpu time = 00:00:00, elapsed time = 00:00:00, memory = 1702.99 (MB), peak = 2012.55 (MB)
#Regenerating Ggrids automatically.
#Auto generating G-grids with size=15 tracks, using layer Metal3's pitch = 0.19000.
#Using automatically generated G-grids.
#Done routing data preparation.
#cpu time = 00:00:04, elapsed time = 00:00:04, memory = 1708.36 (MB), peak = 2012.55 (MB)
#Minimum voltage of a net in the design = 0.000.
#Maximum voltage of a net in the design = 1.000.
#Voltage range [0.000 - 1.000] has 32204 nets.
#Voltage range [1.000 - 1.000] has 1 net.
#Voltage range [0.000 - 0.000] has 1 net.
Updating RC grid for preRoute extraction ...
Initializing multi-corner resistance tables ...
#
#Distribution of nets:
#  
# #pin range           #net       %
#------------------------------------
#          2           27074 ( 84.1%)
#          3            2190 (  6.8%)
#          4            1140 (  3.5%)
#          5             418 (  1.3%)
#          6              76 (  0.2%)
#          7              44 (  0.1%)
#          8              13 (  0.0%)
#          9              13 (  0.0%)
#  10  -  19             781 (  2.4%)
#  20  -  29              50 (  0.2%)
#  30  -  39              80 (  0.2%)
#  40  -  49              61 (  0.2%)
#  50  -  59              42 (  0.1%)
#  60  -  69              32 (  0.1%)
#  70  -  79              17 (  0.1%)
#  80  -  89               3 (  0.0%)
#  90  -  99               6 (  0.0%)
#  100 - 199               2 (  0.0%)
#     >=2000               0 (  0.0%)
#
#Total: 32206 nets, 32042 non-trivial nets
#                              #net       %
#-------------------------------------------
#  Fully global routed           14 ( 0.0%)
#  Clock                         14
#  Extra space                   14
#  Prefer layer range            14
#
#Nets in 1 layer range:
#  Bottom Pref.Layer    Top Pref.Layer       #net       %
#---------------------------------------------------------
#             Metal3           Metal4          14 (  0.0%)
#
#14 nets selected.
#
#
#Line Assignment statistics:
#Cpu time = 00:00:00
#Elapsed time = 00:00:00
#Increased memory = 4.74 (MB)
#Total memory = 1769.89 (MB)
#Peak memory = 2012.55 (MB)
#End Line Assignment: cpu:00:00:01, real:00:00:01, mem:1.7 GB, peak:2.0 GB
#
#Wire/Via statistics after line assignment ...
#Total number of nets with non-default rule or having extra spacing = 14
#Total wire length = 5174 um.
#Total half perimeter of net bounding box = 2400 um.
#Total wire length on LAYER Metal1 = 0 um.
#Total wire length on LAYER Metal2 = 1017 um.
#Total wire length on LAYER Metal3 = 2403 um.
#Total wire length on LAYER Metal4 = 1568 um.
#Total wire length on LAYER Metal5 = 87 um.
#Total wire length on LAYER Metal6 = 6 um.
#Total wire length on LAYER Metal7 = 12 um.
#Total wire length on LAYER Metal8 = 12 um.
#Total wire length on LAYER Metal9 = 37 um.
#Total wire length on LAYER Metal10 = 32 um.
#Total wire length on LAYER Metal11 = 0 um.
#Total number of vias = 3115
#Up-Via Summary (total 3115):
#           
#-----------------------
# Metal1           1159
# Metal2           1283
# Metal3            524
# Metal4             37
# Metal5             28
# Metal6             24
# Metal7             24
# Metal8             22
# Metal9             14
#-----------------------
#                  3115 
#
#Routing data preparation, pin analysis, line assignment statistics:
#Cpu time = 00:00:05
#Elapsed time = 00:00:05
#Increased memory = 32.96 (MB)
#Total memory = 1727.86 (MB)
#Peak memory = 2012.55 (MB)
#Skip comparing routing design signature in db-snapshot flow
#Minimum voltage of a net in the design = 0.000.
#Maximum voltage of a net in the design = 1.000.
#Voltage range [0.000 - 1.000] has 32204 nets.
#Voltage range [1.000 - 1.000] has 1 net.
#Voltage range [0.000 - 0.000] has 1 net.
#Minimum voltage of a net in the design = 0.000.
#Maximum voltage of a net in the design = 1.000.
#Voltage range [0.000 - 1.000] has 32204 nets.
#Voltage range [1.000 - 1.000] has 1 net.
#Voltage range [0.000 - 0.000] has 1 net.
#Minimum voltage of a net in the design = 0.000.
#Maximum voltage of a net in the design = 1.000.
#Voltage range [0.000 - 1.000] has 32204 nets.
#Voltage range [1.000 - 1.000] has 1 net.
#Voltage range [0.000 - 0.000] has 1 net.
#Minimum voltage of a net in the design = 0.000.
#Maximum voltage of a net in the design = 1.000.
#Voltage range [0.000 - 1.000] has 32204 nets.
#Voltage range [1.000 - 1.000] has 1 net.
#Voltage range [0.000 - 0.000] has 1 net.
#
#Start Detail Routing..
#start initial detail routing ...
#   number of violations = 3
#
#    By Layer and Type :
#	          Short   Totals
#	Metal1        0        0
#	Metal2        0        0
#	Metal3        0        0
#	Metal4        3        3
#	Totals        3        3
#cpu time = 00:00:08, elapsed time = 00:00:08, memory = 1729.42 (MB), peak = 2012.55 (MB)
#start 1st optimization iteration ...
#   number of violations = 0
#cpu time = 00:00:00, elapsed time = 00:00:00, memory = 1731.20 (MB), peak = 2012.55 (MB)
#Complete Detail Routing.
#Total number of nets with non-default rule or having extra spacing = 14
#Total wire length = 5392 um.
#Total half perimeter of net bounding box = 2400 um.
#Total wire length on LAYER Metal1 = 0 um.
#Total wire length on LAYER Metal2 = 515 um.
#Total wire length on LAYER Metal3 = 2808 um.
#Total wire length on LAYER Metal4 = 1981 um.
#Total wire length on LAYER Metal5 = 86 um.
#Total wire length on LAYER Metal6 = 2 um.
#Total wire length on LAYER Metal7 = 0 um.
#Total wire length on LAYER Metal8 = 0 um.
#Total wire length on LAYER Metal9 = 0 um.
#Total wire length on LAYER Metal10 = 0 um.
#Total wire length on LAYER Metal11 = 0 um.
#Total number of vias = 3083
#Up-Via Summary (total 3083):
#           
#-----------------------
# Metal1           1159
# Metal2           1082
# Metal3            827
# Metal4             13
# Metal5              2
#-----------------------
#                  3083 
#
#Total number of DRC violations = 0
#Cpu time = 00:00:09
#Elapsed time = 00:00:09
#Increased memory = 3.36 (MB)
#Total memory = 1731.21 (MB)
#Peak memory = 2012.55 (MB)
#Skip updating routing design signature in db-snapshot flow
#route_detail Statistics:
#Cpu time = 00:00:09
#Elapsed time = 00:00:09
#Increased memory = 3.36 (MB)
#Total memory = 1731.22 (MB)
#Peak memory = 2012.55 (MB)
#
#route_global_detail statistics:
#Cpu time = 00:00:14
#Elapsed time = 00:00:14
#Increased memory = 44.45 (MB)
#Total memory = 1739.74 (MB)
#Peak memory = 2012.55 (MB)
#Number of warnings = 0
#Total number of warnings = 0
#Number of fails = 0
#Total number of fails = 0
#Complete route_global_detail on Thu Dec  7 19:13:13 2023
#
        NanoRoute done. (took cpu=0:00:14.1 real=0:00:14.2)
      flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:*                                                                   NanoRoute
      Clock detailed routing done.
Skipping check of guided vs. routed net lengths.
Set FIXED routing status on 14 net(s)
Set FIXED placed status on 13 instance(s)
      Route Remaining Unrouted Nets...
Running route_early_global to complete any remaining unrouted nets.
[NR-eGR] Started Early Global Route kernel ( Curr Mem: 2319.05 MB )
[NR-eGR] Track table information for default rule: 
[NR-eGR] Metal1 has single uniform track structure
[NR-eGR] Metal2 has single uniform track structure
[NR-eGR] Metal3 has single uniform track structure
[NR-eGR] Metal4 has single uniform track structure
[NR-eGR] Metal5 has single uniform track structure
[NR-eGR] Metal6 has single uniform track structure
[NR-eGR] Metal7 has single uniform track structure
[NR-eGR] Metal8 has single uniform track structure
[NR-eGR] Metal9 has single uniform track structure
[NR-eGR] Metal10 has single uniform track structure
[NR-eGR] Metal11 has single uniform track structure
[NR-eGR] Read 43156 PG shapes
[NR-eGR] Read 0 clock shapes
[NR-eGR] Read 0 other shapes
[NR-eGR] #Routing Blockages  : 0
[NR-eGR] #Instance Blockages : 0
[NR-eGR] #PG Blockages       : 43156
[NR-eGR] #Halo Blockages     : 0
[NR-eGR] #Boundary Blockages : 0
[NR-eGR] #Clock Blockages    : 0
[NR-eGR] #Other Blockages    : 0
[NR-eGR] Num Prerouted Nets = 14  Num Prerouted Wires = 3157
[NR-eGR] Read 32042 nets ( ignored 14 )
[NR-eGR] ============ Routing rule table ============
[NR-eGR] Rule id: 1  Nets: 32028
[NR-eGR] ========================================
[NR-eGR] 
[NR-eGR] Layer group 1: route 32028 net(s) in layer range [2, 11]
[NR-eGR] Early Global Route overflow of layer group 1: 0.00% H + 0.00% V. EstWL: 3.539786e+05um
[NR-eGR] Congestion Analysis By layer: (blocked Gcells are excluded) 
[NR-eGR]                        OverCon            
[NR-eGR]                         #Gcell     %Gcell
[NR-eGR]        Layer             (1-2)    OverCon
[NR-eGR] ----------------------------------------------
[NR-eGR]  Metal1 ( 1)         0( 0.00%)   ( 0.00%) 
[NR-eGR]  Metal2 ( 2)         8( 0.02%)   ( 0.02%) 
[NR-eGR]  Metal3 ( 3)         1( 0.00%)   ( 0.00%) 
[NR-eGR]  Metal4 ( 4)         0( 0.00%)   ( 0.00%) 
[NR-eGR]  Metal5 ( 5)         0( 0.00%)   ( 0.00%) 
[NR-eGR]  Metal6 ( 6)         0( 0.00%)   ( 0.00%) 
[NR-eGR]  Metal7 ( 7)         0( 0.00%)   ( 0.00%) 
[NR-eGR]  Metal8 ( 8)         0( 0.00%)   ( 0.00%) 
[NR-eGR]  Metal9 ( 9)         0( 0.00%)   ( 0.00%) 
[NR-eGR] Metal10 (10)         0( 0.00%)   ( 0.00%) 
[NR-eGR] Metal11 (11)         0( 0.00%)   ( 0.00%) 
[NR-eGR] ----------------------------------------------
[NR-eGR]        Total         9( 0.00%)   ( 0.00%) 
[NR-eGR] 
[NR-eGR] Overflow after Early Global Route 0.00% H + 0.00% V
[NR-eGR]                  Length (um)    Vias 
[NR-eGR] -------------------------------------
[NR-eGR]  Metal1   (1H)             0   92220 
[NR-eGR]  Metal2   (2V)        136517  130665 
[NR-eGR]  Metal3   (3H)        168608   10477 
[NR-eGR]  Metal4   (4V)         53695    2393 
[NR-eGR]  Metal5   (5H)         21539     138 
[NR-eGR]  Metal6   (6V)          2634       4 
[NR-eGR]  Metal7   (7H)           134       0 
[NR-eGR]  Metal8   (8V)             0       0 
[NR-eGR]  Metal9   (9H)             0       0 
[NR-eGR]  Metal10  (10V)            0       0 
[NR-eGR]  Metal11  (11H)            0       0 
[NR-eGR] -------------------------------------
[NR-eGR]           Total       383127  235897 
[NR-eGR] --------------------------------------------------------------------------
[NR-eGR] Total half perimeter of net bounding box: 303574um
[NR-eGR] Total length: 383127um, number of vias: 235897
[NR-eGR] --------------------------------------------------------------------------
[NR-eGR] Total eGR-routed clock nets wire length: 0um, number of vias: 0
[NR-eGR] --------------------------------------------------------------------------
[NR-eGR] Finished Early Global Route kernel ( CPU: 0.96 sec, Real: 1.32 sec, Curr Mem: 2332.75 MB )
      Route Remaining Unrouted Nets done. (took cpu=0:00:01.0 real=0:00:01.3)
      flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:*                                                                   Route Remaining Unrouted Nets
    Routing using NR in eGR->NR Step done.
Net route status summary:
  Clock:        14 (unrouted=0, trialRouted=0, noStatus=0, routed=0, fixed=14, [crossesIlmBoundary=0, tooFewTerms=0, (crossesIlmBoundary AND tooFewTerms=0)])
  Non-clock: 32192 (unrouted=164, trialRouted=32028, noStatus=0, routed=0, fixed=0, [crossesIlmBoundary=0, tooFewTerms=164, (crossesIlmBoundary AND tooFewTerms=0)])

CCOPT: Done with clock implementation routing.

    Leaving CCOpt scope - Routing Tools done. (took cpu=0:00:15.9 real=0:00:16.6)
  Clock implementation routing done.
  Leaving CCOpt scope - extractRC...
  Updating RC parasitics by calling: "extract_rc -noRouteCheck"...
Extraction called for design 'filter_top' of instances=23781 and nets=32206 using extraction engine 'pre_route' .
pre_route RC Extraction called for design filter_top.
RC Extraction called in multi-corner(1) mode.
RCMode: PreRoute
      RC Corner Indexes            0   
Capacitance Scaling Factor   : 1.00000 
Resistance Scaling Factor    : 1.00000 
Clock Cap. Scaling Factor    : 1.00000 
Clock Res. Scaling Factor    : 1.00000 
Shrink Factor                : 1.00000
PreRoute extraction is honoring NDR/Shielding/ExtraSpace for clock nets.
Using Quantus QRC technology file ...
Updating RC grid for preRoute extraction ...
Initializing multi-corner resistance tables ...
PreRoute RC Extraction DONE (CPU Time: 0:00:00.2  Real Time: 0:00:01.0  MEM: 2319.746M)
  Updating RC parasitics by calling: "extract_rc -noRouteCheck" done.
  Leaving CCOpt scope - extractRC done. (took cpu=0:00:00.2 real=0:00:00.2)
  Clock tree timing engine global stage delay update for default_dc:both.late...
  Clock tree timing engine global stage delay update for default_dc:both.late done. (took cpu=0:00:00.0 real=0:00:00.0)
  Clock DAG stats after routing clock trees:
    cell counts      : b=13, i=0, icg=0, dcg=0, l=0, total=13
    sink counts      : regular=1133, enable_latch=0, load_capacitance=0, antenna=0, node_sink=0, total=1133
    misc counts      : r=1, pp=0
    cell areas       : b=87.210um^2, i=0.000um^2, icg=0.000um^2, dcg=0.000um^2, l=0.000um^2, total=87.210um^2
    cell capacitance : b=0.026pF, i=0.000pF, icg=0.000pF, dcg=0.000pF, l=0.000pF, total=0.026pF
    sink capacitance : total=0.349pF, avg=0.000pF, sd=0.000pF, min=0.000pF, max=0.000pF
    wire capacitance : top=0.000pF, trunk=0.056pF, leaf=0.334pF, total=0.390pF
    wire lengths     : top=0.000um, trunk=868.980um, leaf=4522.770um, total=5391.750um
    hp wire lengths  : top=0.000um, trunk=0.000um, leaf=1893.290um, total=1893.290um
  Clock DAG net violations after routing clock trees: none
  Clock DAG primary half-corner transition distribution after routing clock trees:
    Trunk : target=0.030ns count=1 avg=0.021ns sd=0.000ns min=0.021ns max=0.021ns {0 <= 0.018ns, 1 <= 0.024ns, 0 <= 0.027ns, 0 <= 0.029ns, 0 <= 0.030ns}
    Leaf  : target=0.030ns count=13 avg=0.027ns sd=0.001ns min=0.025ns max=0.029ns {0 <= 0.018ns, 0 <= 0.024ns, 8 <= 0.027ns, 5 <= 0.029ns, 0 <= 0.030ns}
  Clock DAG library cell distribution after routing clock trees {count}:
     Bufs: CLKBUFX16: 12 CLKBUFX12: 1 
  Primary reporting skew groups after routing clock trees:
    skew_group Clk/default_const: insertion delay [min=0.028, max=0.045, avg=0.041, sd=0.003], skew [0.017 vs 0.020], 100% {0.028, 0.045} (wid=0.014 ws=0.012) (gid=0.032 gs=0.005)
  Skew group summary after routing clock trees:
    skew_group Clk/default_const: insertion delay [min=0.028, max=0.045, avg=0.041, sd=0.003], skew [0.017 vs 0.020], 100% {0.028, 0.045} (wid=0.014 ws=0.012) (gid=0.032 gs=0.005)
  CCOpt::Phase::Routing done. (took cpu=0:00:16.2 real=0:00:16.9)
      flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:*                                                                   CCOpt::Phase::Routing
  CCOpt::Phase::PostConditioning...
  Leaving CCOpt scope - Initializing placement interface...
  Leaving CCOpt scope - Initializing placement interface done. (took cpu=0:00:00.1 real=0:00:00.1)
  PostConditioning...
    PostConditioning active optimizations:
     - DRV fixing with initial upsizing, sizing and buffering
     - Skew fixing with sizing
    
    Currently running CTS, using active skew data
    Reset bufferability constraints...
    Resetting previous bufferability status on all nets so that PostConditioning will attempt to fix all clock tree violations.
    Reset bufferability constraints done. (took cpu=0:00:00.0 real=0:00:00.0)
    PostConditioning Upsizing To Fix DRVs...
      Fixing clock tree DRVs with upsizing: ...20% ...40% ...60% ...80% ...100% 
      CCOpt-PostConditioning: considered: 14, tested: 14, violation detected: 0, violation ignored (due to small violation): 0, cannot run: 0, attempted: 0, unsuccessful: 0, sized: 0
      
      Statistics: Fix DRVs (initial upsizing):
      ========================================
      
      Cell changes by Net Type:
      
      -------------------------------------------------------------------------------------------------
      Net Type    Attempted    Upsized     Downsized    Swapped Same Size    Total Changed    Not Sized
      -------------------------------------------------------------------------------------------------
      top                0            0           0            0                    0                0
      trunk              0            0           0            0                    0                0
      leaf               0            0           0            0                    0                0
      -------------------------------------------------------------------------------------------------
      Total              0            0           0            0                    0                0
      -------------------------------------------------------------------------------------------------
      
      Upsized: 0, Downsized: 0, Sized but same area: 0, Unchanged: 0, Area change: 0.000um^2 (0.000%)
      Max. move: 0.000um, Min. move: 0.000um, Avg. move: N/A
      
      Clock DAG stats after 'PostConditioning Upsizing To Fix DRVs':
        cell counts      : b=13, i=0, icg=0, dcg=0, l=0, total=13
        sink counts      : regular=1133, enable_latch=0, load_capacitance=0, antenna=0, node_sink=0, total=1133
        misc counts      : r=1, pp=0
        cell areas       : b=87.210um^2, i=0.000um^2, icg=0.000um^2, dcg=0.000um^2, l=0.000um^2, total=87.210um^2
        cell capacitance : b=0.026pF, i=0.000pF, icg=0.000pF, dcg=0.000pF, l=0.000pF, total=0.026pF
        sink capacitance : total=0.349pF, avg=0.000pF, sd=0.000pF, min=0.000pF, max=0.000pF
        wire capacitance : top=0.000pF, trunk=0.056pF, leaf=0.334pF, total=0.390pF
        wire lengths     : top=0.000um, trunk=868.980um, leaf=4522.770um, total=5391.750um
        hp wire lengths  : top=0.000um, trunk=0.000um, leaf=1893.290um, total=1893.290um
      Clock DAG net violations after 'PostConditioning Upsizing To Fix DRVs': none
      Clock DAG primary half-corner transition distribution after 'PostConditioning Upsizing To Fix DRVs':
        Trunk : target=0.030ns count=1 avg=0.021ns sd=0.000ns min=0.021ns max=0.021ns {0 <= 0.018ns, 1 <= 0.024ns, 0 <= 0.027ns, 0 <= 0.029ns, 0 <= 0.030ns}
        Leaf  : target=0.030ns count=13 avg=0.027ns sd=0.001ns min=0.025ns max=0.029ns {0 <= 0.018ns, 0 <= 0.024ns, 8 <= 0.027ns, 5 <= 0.029ns, 0 <= 0.030ns}
      Clock DAG library cell distribution after 'PostConditioning Upsizing To Fix DRVs' {count}:
         Bufs: CLKBUFX16: 12 CLKBUFX12: 1 
      Primary reporting skew groups after 'PostConditioning Upsizing To Fix DRVs':
        skew_group Clk/default_const: insertion delay [min=0.028, max=0.045], skew [0.017 vs 0.020]
      Skew group summary after 'PostConditioning Upsizing To Fix DRVs':
        skew_group Clk/default_const: insertion delay [min=0.028, max=0.045], skew [0.017 vs 0.020]
      Legalizer API calls during this step: 0 succeeded with high effort: 0 succeeded with medium effort: 0 succeeded with low effort: 0 succeeded with basic effort: 0 succeeded with basic unbounded effort: 0
    PostConditioning Upsizing To Fix DRVs done. (took cpu=0:00:00.0 real=0:00:00.0)
      flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:*                                                                   PostConditioning Upsizing To Fix DRVs
    Recomputing CTS skew targets...
    Resolving skew group constraints...
      Solving LP: 1 skew groups; 2 fragments, 2 fraglets and 3 vertices; 25 variables and 66 constraints; tolerance 1
    Resolving skew group constraints done.
    Recomputing CTS skew targets done. (took cpu=0:00:00.0 real=0:00:00.0)
    PostConditioning Fixing DRVs...
      Fixing clock tree DRVs: ...20% ...40% ...60% ...80% ...100% 
      CCOpt-PostConditioning: considered: 14, tested: 14, violation detected: 0, violation ignored (due to small violation): 0, cannot run: 0, attempted: 0, unsuccessful: 0, sized: 0
      
      Statistics: Fix DRVs (cell sizing):
      ===================================
      
      Cell changes by Net Type:
      
      -------------------------------------------------------------------------------------------------
      Net Type    Attempted    Upsized     Downsized    Swapped Same Size    Total Changed    Not Sized
      -------------------------------------------------------------------------------------------------
      top                0            0           0            0                    0                0
      trunk              0            0           0            0                    0                0
      leaf               0            0           0            0                    0                0
      -------------------------------------------------------------------------------------------------
      Total              0            0           0            0                    0                0
      -------------------------------------------------------------------------------------------------
      
      Upsized: 0, Downsized: 0, Sized but same area: 0, Unchanged: 0, Area change: 0.000um^2 (0.000%)
      Max. move: 0.000um, Min. move: 0.000um, Avg. move: N/A
      
      Clock DAG stats after 'PostConditioning Fixing DRVs':
        cell counts      : b=13, i=0, icg=0, dcg=0, l=0, total=13
        sink counts      : regular=1133, enable_latch=0, load_capacitance=0, antenna=0, node_sink=0, total=1133
        misc counts      : r=1, pp=0
        cell areas       : b=87.210um^2, i=0.000um^2, icg=0.000um^2, dcg=0.000um^2, l=0.000um^2, total=87.210um^2
        cell capacitance : b=0.026pF, i=0.000pF, icg=0.000pF, dcg=0.000pF, l=0.000pF, total=0.026pF
        sink capacitance : total=0.349pF, avg=0.000pF, sd=0.000pF, min=0.000pF, max=0.000pF
        wire capacitance : top=0.000pF, trunk=0.056pF, leaf=0.334pF, total=0.390pF
        wire lengths     : top=0.000um, trunk=868.980um, leaf=4522.770um, total=5391.750um
        hp wire lengths  : top=0.000um, trunk=0.000um, leaf=1893.290um, total=1893.290um
      Clock DAG net violations after 'PostConditioning Fixing DRVs': none
      Clock DAG primary half-corner transition distribution after 'PostConditioning Fixing DRVs':
        Trunk : target=0.030ns count=1 avg=0.021ns sd=0.000ns min=0.021ns max=0.021ns {0 <= 0.018ns, 1 <= 0.024ns, 0 <= 0.027ns, 0 <= 0.029ns, 0 <= 0.030ns}
        Leaf  : target=0.030ns count=13 avg=0.027ns sd=0.001ns min=0.025ns max=0.029ns {0 <= 0.018ns, 0 <= 0.024ns, 8 <= 0.027ns, 5 <= 0.029ns, 0 <= 0.030ns}
      Clock DAG library cell distribution after 'PostConditioning Fixing DRVs' {count}:
         Bufs: CLKBUFX16: 12 CLKBUFX12: 1 
      Primary reporting skew groups after 'PostConditioning Fixing DRVs':
        skew_group Clk/default_const: insertion delay [min=0.028, max=0.045], skew [0.017 vs 0.020]
      Skew group summary after 'PostConditioning Fixing DRVs':
        skew_group Clk/default_const: insertion delay [min=0.028, max=0.045], skew [0.017 vs 0.020]
      Legalizer API calls during this step: 0 succeeded with high effort: 0 succeeded with medium effort: 0 succeeded with low effort: 0 succeeded with basic effort: 0 succeeded with basic unbounded effort: 0
    PostConditioning Fixing DRVs done. (took cpu=0:00:00.0 real=0:00:00.0)
      flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:*                                                                   PostConditioning Fixing DRVs
    Buffering to fix DRVs...
    Fixing DRVs with route buffering pass 1. Quick buffering: enabled
    Rebuffering to fix clock tree DRVs: ...20% ...40% ...60% ...80% ...100% 
    Inserted 0 buffers and inverters.
    success count. Default: 0, QS: 0, QD: 0, FS: 0, MQS: 0
    CCOpt-PostConditioning: nets considered: 14, nets tested: 14, nets violation detected: 0, nets violation ignored (due to small violation): 0, nets cannot run: 0, nets attempted: 0, nets unsuccessful: 0, buffered: 0
    Clock DAG stats PostConditioning after re-buffering DRV fixing:
      cell counts      : b=13, i=0, icg=0, dcg=0, l=0, total=13
      sink counts      : regular=1133, enable_latch=0, load_capacitance=0, antenna=0, node_sink=0, total=1133
      misc counts      : r=1, pp=0
      cell areas       : b=87.210um^2, i=0.000um^2, icg=0.000um^2, dcg=0.000um^2, l=0.000um^2, total=87.210um^2
      cell capacitance : b=0.026pF, i=0.000pF, icg=0.000pF, dcg=0.000pF, l=0.000pF, total=0.026pF
      sink capacitance : total=0.349pF, avg=0.000pF, sd=0.000pF, min=0.000pF, max=0.000pF
      wire capacitance : top=0.000pF, trunk=0.056pF, leaf=0.334pF, total=0.390pF
      wire lengths     : top=0.000um, trunk=868.980um, leaf=4522.770um, total=5391.750um
      hp wire lengths  : top=0.000um, trunk=0.000um, leaf=1893.290um, total=1893.290um
    Clock DAG net violations PostConditioning after re-buffering DRV fixing: none
    Clock DAG primary half-corner transition distribution PostConditioning after re-buffering DRV fixing:
      Trunk : target=0.030ns count=1 avg=0.021ns sd=0.000ns min=0.021ns max=0.021ns {0 <= 0.018ns, 1 <= 0.024ns, 0 <= 0.027ns, 0 <= 0.029ns, 0 <= 0.030ns}
      Leaf  : target=0.030ns count=13 avg=0.027ns sd=0.001ns min=0.025ns max=0.029ns {0 <= 0.018ns, 0 <= 0.024ns, 8 <= 0.027ns, 5 <= 0.029ns, 0 <= 0.030ns}
    Clock DAG library cell distribution PostConditioning after re-buffering DRV fixing {count}:
       Bufs: CLKBUFX16: 12 CLKBUFX12: 1 
    Primary reporting skew groups PostConditioning after re-buffering DRV fixing:
      skew_group Clk/default_const: insertion delay [min=0.028, max=0.045, avg=0.041, sd=0.003], skew [0.017 vs 0.020], 100% {0.028, 0.045} (wid=0.014 ws=0.012) (gid=0.032 gs=0.005)
    Skew group summary PostConditioning after re-buffering DRV fixing:
      skew_group Clk/default_const: insertion delay [min=0.028, max=0.045, avg=0.041, sd=0.003], skew [0.017 vs 0.020], 100% {0.028, 0.045} (wid=0.014 ws=0.012) (gid=0.032 gs=0.005)
    Buffering to fix DRVs done. (took cpu=0:00:00.0 real=0:00:00.0)
      flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:*                                                                   Buffering to fix DRVs
    PostConditioning Fixing Skew by cell sizing...
      Resized 0 clock insts to decrease delay.
      Resized 0 clock insts to increase delay.
      
      Statistics: Fix Skew (cell sizing):
      ===================================
      
      Cell changes by Net Type:
      
      -------------------------------------------------------------------------------------------------
      Net Type    Attempted    Upsized     Downsized    Swapped Same Size    Total Changed    Not Sized
      -------------------------------------------------------------------------------------------------
      top                0            0           0            0                    0                0
      trunk              0            0           0            0                    0                0
      leaf               0            0           0            0                    0                0
      -------------------------------------------------------------------------------------------------
      Total              0            0           0            0                    0                0
      -------------------------------------------------------------------------------------------------
      
      Upsized: 0, Downsized: 0, Sized but same area: 0, Unchanged: 0, Area change: 0.000um^2 (0.000%)
      Max. move: 0.000um, Min. move: 0.000um, Avg. move: N/A
      
      Clock DAG stats after 'PostConditioning Fixing Skew by cell sizing':
        cell counts      : b=13, i=0, icg=0, dcg=0, l=0, total=13
        sink counts      : regular=1133, enable_latch=0, load_capacitance=0, antenna=0, node_sink=0, total=1133
        misc counts      : r=1, pp=0
        cell areas       : b=87.210um^2, i=0.000um^2, icg=0.000um^2, dcg=0.000um^2, l=0.000um^2, total=87.210um^2
        cell capacitance : b=0.026pF, i=0.000pF, icg=0.000pF, dcg=0.000pF, l=0.000pF, total=0.026pF
        sink capacitance : total=0.349pF, avg=0.000pF, sd=0.000pF, min=0.000pF, max=0.000pF
        wire capacitance : top=0.000pF, trunk=0.056pF, leaf=0.334pF, total=0.390pF
        wire lengths     : top=0.000um, trunk=868.980um, leaf=4522.770um, total=5391.750um
        hp wire lengths  : top=0.000um, trunk=0.000um, leaf=1893.290um, total=1893.290um
      Clock DAG net violations after 'PostConditioning Fixing Skew by cell sizing': none
      Clock DAG primary half-corner transition distribution after 'PostConditioning Fixing Skew by cell sizing':
        Trunk : target=0.030ns count=1 avg=0.021ns sd=0.000ns min=0.021ns max=0.021ns {0 <= 0.018ns, 1 <= 0.024ns, 0 <= 0.027ns, 0 <= 0.029ns, 0 <= 0.030ns}
        Leaf  : target=0.030ns count=13 avg=0.027ns sd=0.001ns min=0.025ns max=0.029ns {0 <= 0.018ns, 0 <= 0.024ns, 8 <= 0.027ns, 5 <= 0.029ns, 0 <= 0.030ns}
      Clock DAG library cell distribution after 'PostConditioning Fixing Skew by cell sizing' {count}:
         Bufs: CLKBUFX16: 12 CLKBUFX12: 1 
      Primary reporting skew groups after 'PostConditioning Fixing Skew by cell sizing':
        skew_group Clk/default_const: insertion delay [min=0.028, max=0.045, avg=0.041, sd=0.003], skew [0.017 vs 0.020], 100% {0.028, 0.045} (wid=0.014 ws=0.012) (gid=0.032 gs=0.005)
      Skew group summary after 'PostConditioning Fixing Skew by cell sizing':
        skew_group Clk/default_const: insertion delay [min=0.028, max=0.045, avg=0.041, sd=0.003], skew [0.017 vs 0.020], 100% {0.028, 0.045} (wid=0.014 ws=0.012) (gid=0.032 gs=0.005)
      Legalizer API calls during this step: 0 succeeded with high effort: 0 succeeded with medium effort: 0 succeeded with low effort: 0 succeeded with basic effort: 0 succeeded with basic unbounded effort: 0
    PostConditioning Fixing Skew by cell sizing done. (took cpu=0:00:00.0 real=0:00:00.0)
      flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:*                                                                   PostConditioning Fixing Skew by cell sizing
    Reconnecting optimized routes...
    Reset timing graph...
Ignoring AAE DB Resetting ...
    Reset timing graph done.
    Reconnecting optimized routes done. (took cpu=0:00:00.0 real=0:00:00.0)
Skipping place_detail: no changes were made during DRV and/or skew fixing steps so it is unnecessary.
  PostConditioning done.
Net route status summary:
  Clock:        14 (unrouted=0, trialRouted=0, noStatus=0, routed=0, fixed=14, [crossesIlmBoundary=0, tooFewTerms=0, (crossesIlmBoundary AND tooFewTerms=0)])
  Non-clock: 32192 (unrouted=164, trialRouted=32028, noStatus=0, routed=0, fixed=0, [crossesIlmBoundary=0, tooFewTerms=164, (crossesIlmBoundary AND tooFewTerms=0)])
  Update timing and DAG stats after post-conditioning...
  Update timing and DAG stats after post-conditioning done. (took cpu=0:00:00.0 real=0:00:00.0)
  Clock tree timing engine global stage delay update for default_dc:both.late...
  Clock tree timing engine global stage delay update for default_dc:both.late done. (took cpu=0:00:00.0 real=0:00:00.0)
  Clock DAG stats after post-conditioning:
    cell counts      : b=13, i=0, icg=0, dcg=0, l=0, total=13
    sink counts      : regular=1133, enable_latch=0, load_capacitance=0, antenna=0, node_sink=0, total=1133
    misc counts      : r=1, pp=0
    cell areas       : b=87.210um^2, i=0.000um^2, icg=0.000um^2, dcg=0.000um^2, l=0.000um^2, total=87.210um^2
    cell capacitance : b=0.026pF, i=0.000pF, icg=0.000pF, dcg=0.000pF, l=0.000pF, total=0.026pF
    sink capacitance : total=0.349pF, avg=0.000pF, sd=0.000pF, min=0.000pF, max=0.000pF
    wire capacitance : top=0.000pF, trunk=0.056pF, leaf=0.334pF, total=0.390pF
    wire lengths     : top=0.000um, trunk=868.980um, leaf=4522.770um, total=5391.750um
    hp wire lengths  : top=0.000um, trunk=0.000um, leaf=1893.290um, total=1893.290um
  Clock DAG net violations after post-conditioning: none
  Clock DAG primary half-corner transition distribution after post-conditioning:
    Trunk : target=0.030ns count=1 avg=0.021ns sd=0.000ns min=0.021ns max=0.021ns {0 <= 0.018ns, 1 <= 0.024ns, 0 <= 0.027ns, 0 <= 0.029ns, 0 <= 0.030ns}
    Leaf  : target=0.030ns count=13 avg=0.027ns sd=0.001ns min=0.025ns max=0.029ns {0 <= 0.018ns, 0 <= 0.024ns, 8 <= 0.027ns, 5 <= 0.029ns, 0 <= 0.030ns}
  Clock DAG library cell distribution after post-conditioning {count}:
     Bufs: CLKBUFX16: 12 CLKBUFX12: 1 
  Primary reporting skew groups after post-conditioning:
    skew_group Clk/default_const: insertion delay [min=0.028, max=0.045, avg=0.041, sd=0.003], skew [0.017 vs 0.020], 100% {0.028, 0.045} (wid=0.014 ws=0.012) (gid=0.032 gs=0.005)
  Skew group summary after post-conditioning:
    skew_group Clk/default_const: insertion delay [min=0.028, max=0.045, avg=0.041, sd=0.003], skew [0.017 vs 0.020], 100% {0.028, 0.045} (wid=0.014 ws=0.012) (gid=0.032 gs=0.005)
  CCOpt::Phase::PostConditioning done. (took cpu=0:00:00.4 real=0:00:00.4)
      flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:*                                                                   CCOpt::Phase::PostConditioning
  Post-balance tidy up or trial balance steps...
  
  Clock DAG stats at end of CTS:
  ==============================
  
  --------------------------------------------------------
  Cell type                 Count    Area      Capacitance
  --------------------------------------------------------
  Buffers                    13      87.210       0.026
  Inverters                   0       0.000       0.000
  Integrated Clock Gates      0       0.000       0.000
  Discrete Clock Gates        0       0.000       0.000
  Clock Logic                 0       0.000       0.000
  All                        13      87.210       0.026
  --------------------------------------------------------
  
  
  Clock DAG sink counts at end of CTS:
  ====================================
  
  -------------------------
  Sink type           Count
  -------------------------
  Regular             1133
  Enable Latch           0
  Load Capacitance       0
  Antenna Diode          0
  Node Sink              0
  Total               1133
  -------------------------
  
  
  Clock DAG wire lengths at end of CTS:
  =====================================
  
  --------------------
  Type     Wire Length
  --------------------
  Top          0.000
  Trunk      868.980
  Leaf      4522.770
  Total     5391.750
  --------------------
  
  
  Clock DAG hp wire lengths at end of CTS:
  ========================================
  
  -----------------------
  Type     hp Wire Length
  -----------------------
  Top            0.000
  Trunk          0.000
  Leaf        1893.290
  Total       1893.290
  -----------------------
  
  
  Clock DAG capacitances at end of CTS:
  =====================================
  
  --------------------------------
  Type     Gate     Wire     Total
  --------------------------------
  Top      0.000    0.000    0.000
  Trunk    0.026    0.056    0.083
  Leaf     0.349    0.334    0.682
  Total    0.375    0.390    0.765
  --------------------------------
  
  
  Clock DAG sink capacitances at end of CTS:
  ==========================================
  
  -----------------------------------------------
  Total    Average    Std. Dev.    Min      Max
  -----------------------------------------------
  0.349     0.000       0.000      0.000    0.000
  -----------------------------------------------
  
  
  Clock DAG net violations at end of CTS:
  =======================================
  
  None
  
  
  Clock DAG primary half-corner transition distribution at end of CTS:
  ====================================================================
  
  --------------------------------------------------------------------------------------------------------------------------------------------------------------
  Net Type    Target    Count    Average    Std. Dev.    Min      Max      Distribution                                                              Over Target
  --------------------------------------------------------------------------------------------------------------------------------------------------------------
  Trunk       0.030       1       0.021       0.000      0.021    0.021    {0 <= 0.018ns, 1 <= 0.024ns, 0 <= 0.027ns, 0 <= 0.029ns, 0 <= 0.030ns}         -
  Leaf        0.030      13       0.027       0.001      0.025    0.029    {0 <= 0.018ns, 0 <= 0.024ns, 8 <= 0.027ns, 5 <= 0.029ns, 0 <= 0.030ns}         -
  --------------------------------------------------------------------------------------------------------------------------------------------------------------
  
  
  Clock DAG library cell distribution at end of CTS:
  ==================================================
  
  ------------------------------------------
  Name         Type      Inst     Inst Area 
                         Count    (um^2)
  ------------------------------------------
  CLKBUFX16    buffer     12        82.080
  CLKBUFX12    buffer      1         5.130
  ------------------------------------------
  
  
  Primary reporting skew groups summary at end of CTS:
  ====================================================
  
  -----------------------------------------------------------------------------------------------------------------------------------------------------------------------
  Half-corner             Skew Group           Min ID    Max ID    Skew     Skew target    Wire skew    Worst sink skew    Average ID    Std.Dev    Skew window occupancy
  -----------------------------------------------------------------------------------------------------------------------------------------------------------------------
  default_dc:both.late    Clk/default_const    0.028     0.045     0.017       0.020         0.012           0.003           0.041        0.003     100% {0.028, 0.045}
  -----------------------------------------------------------------------------------------------------------------------------------------------------------------------
  
  
  Skew group summary at end of CTS:
  =================================
  
  -----------------------------------------------------------------------------------------------------------------------------------------------------------------------
  Half-corner             Skew Group           Min ID    Max ID    Skew     Skew target    Wire skew    Worst sink skew    Average ID    Std.Dev    Skew window occupancy
  -----------------------------------------------------------------------------------------------------------------------------------------------------------------------
  default_dc:both.late    Clk/default_const    0.028     0.045     0.017       0.020         0.012           0.003           0.041        0.003     100% {0.028, 0.045}
  -----------------------------------------------------------------------------------------------------------------------------------------------------------------------
  
  
  Found a total of 0 clock tree pins with a slew violation.
  
  Post-balance tidy up or trial balance steps done. (took cpu=0:00:00.0 real=0:00:00.0)
      flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:*                                                                   Post-balance tidy up or trial balance steps
Synthesizing clock trees done.
Tidy Up And Update Timing...
External - Set all clocks to propagated mode...
**WARN: (IMPCCOPT-2015):	Innovus will not update I/O latencies for the following reason(s):
 * CCOpt property cts_update_clock_latency is false

Setting all clocks to propagated mode.
default_const
External - Set all clocks to propagated mode done. (took cpu=0:00:00.6 real=0:00:00.6)
Clock DAG stats after update timingGraph:
  cell counts      : b=13, i=0, icg=0, dcg=0, l=0, total=13
  sink counts      : regular=1133, enable_latch=0, load_capacitance=0, antenna=0, node_sink=0, total=1133
  misc counts      : r=1, pp=0
  cell areas       : b=87.210um^2, i=0.000um^2, icg=0.000um^2, dcg=0.000um^2, l=0.000um^2, total=87.210um^2
  cell capacitance : b=0.026pF, i=0.000pF, icg=0.000pF, dcg=0.000pF, l=0.000pF, total=0.026pF
  sink capacitance : total=0.349pF, avg=0.000pF, sd=0.000pF, min=0.000pF, max=0.000pF
  wire capacitance : top=0.000pF, trunk=0.056pF, leaf=0.334pF, total=0.390pF
  wire lengths     : top=0.000um, trunk=868.980um, leaf=4522.770um, total=5391.750um
  hp wire lengths  : top=0.000um, trunk=0.000um, leaf=1893.290um, total=1893.290um
Clock DAG net violations after update timingGraph: none
Clock DAG primary half-corner transition distribution after update timingGraph:
  Trunk : target=0.030ns count=1 avg=0.021ns sd=0.000ns min=0.021ns max=0.021ns {0 <= 0.018ns, 1 <= 0.024ns, 0 <= 0.027ns, 0 <= 0.029ns, 0 <= 0.030ns}
  Leaf  : target=0.030ns count=13 avg=0.027ns sd=0.001ns min=0.025ns max=0.029ns {0 <= 0.018ns, 0 <= 0.024ns, 8 <= 0.027ns, 5 <= 0.029ns, 0 <= 0.030ns}
Clock DAG library cell distribution after update timingGraph {count}:
   Bufs: CLKBUFX16: 12 CLKBUFX12: 1 
Primary reporting skew groups after update timingGraph:
  skew_group Clk/default_const: insertion delay [min=0.028, max=0.045, avg=0.041, sd=0.003], skew [0.017 vs 0.020], 100% {0.028, 0.045} (wid=0.014 ws=0.012) (gid=0.032 gs=0.005)
Skew group summary after update timingGraph:
  skew_group Clk/default_const: insertion delay [min=0.028, max=0.045, avg=0.041, sd=0.003], skew [0.017 vs 0.020], 100% {0.028, 0.045} (wid=0.014 ws=0.012) (gid=0.032 gs=0.005)
Logging CTS constraint violations...
  No violations found.
Logging CTS constraint violations done.
Tidy Up And Update Timing done. (took cpu=0:00:00.6 real=0:00:00.6)
      flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:*                                                                   Tidy Up And Update Timing
Runtime done. (took cpu=0:00:42.5 real=0:00:44.5)
Runtime Summary
===============
Clock Runtime:  (30%) Core CTS          10.51 (Init 1.59, Construction 2.03, Implementation 4.64, eGRPC 0.57, PostConditioning 0.45, Other 1.22)
Clock Runtime:  (54%) CTS services      18.77 (RefinePlace 1.99, EarlyGlobalClock 1.93, NanoRoute 14.16, ExtractRC 0.69, TimingAnalysis 0.00)
Clock Runtime:  (14%) Other CTS          4.93 (Init 1.65, CongRepair/EGR-DP 2.68, TimingUpdate 0.60, Other 0.00)
Clock Runtime: (100%) Total             34.21

Leaving CCOpt scope - Cleaning up placement interface...
Leaving CCOpt scope - Cleaning up placement interface done. (took cpu=0:00:00.1 real=0:00:00.1)
*** CTS #1 [finish] (ccopt_design #1) : cpu/real = 0:00:32.3/0:00:34.4 (0.9), totSession cpu/real = 0:04:38.4/0:04:44.4 (1.0), mem = 2343.4M
Synthesizing clock trees with CCOpt done.
      flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:*                                                                   cts
Set place::cacheFPlanSiteMark to 0
(ccopt_design): dumping clock statistics to metric
Ignoring AAE DB Resetting ...
Updating timing graph...
  
  Leaving CCOpt scope - BuildTimeGraph...
AAE_INFO: opIsDesignInPostRouteState() is 0
#################################################################################
# Design Stage: PreRoute
# Design Name: filter_top
# Design Mode: 45nm
# Analysis Mode: MMMC Non-OCV 
# Parasitics Mode: No SPEF/RCDB 
# Signoff Settings: SI Off 
#################################################################################
Calculate delays in Single mode...
Start delay calculation (fullDC) (1 T). (MEM=2341.44)
Total number of fetched objects 32136
AAE_INFO: Total number of nets for which stage creation was skipped for all views 0
End delay calculation. (MEM=2368.64 CPU=0:00:03.8 REAL=0:00:03.0)
End delay calculation (fullDC). (MEM=2368.64 CPU=0:00:04.6 REAL=0:00:04.0)
  Leaving CCOpt scope - BuildTimeGraph done. (took cpu=0:00:05.4 real=0:00:05.4)
Updating timing graph done.
Updating latch analysis...
  Leaving CCOpt scope - Updating latch analysis...
  Leaving CCOpt scope - Updating latch analysis done. (took cpu=0:00:00.3 real=0:00:00.3)
Updating latch analysis done.
Clock tree timing engine global stage delay update for default_dc:both.early...
Clock tree timing engine global stage delay update for default_dc:both.early done. (took cpu=0:00:00.1 real=0:00:00.1)
Clock tree timing engine global stage delay update for default_dc:both.late...
Clock tree timing engine global stage delay update for default_dc:both.late done. (took cpu=0:00:00.0 real=0:00:00.0)
UM: Running design category ...
------------------------------------------------------------
	Current design flip-flop statistics

Single-Bit FF Count          :         1198
Multi-Bit FF Count           :            0
Total Bit Count              :         1198
Total FF Count               :         1198
Bits Per Flop                :        1.000
Total Clock Pin Cap(FF)      :      352.216
Multibit Conversion Ratio(%) :         0.00
------------------------------------------------------------
------------------------------------------------------------
            Multi-bit cell usage statistics

------------------------------------------------------------
============================================================
Sequential Multibit cells usage statistics
------------------------------------------------------------
            Not Merged-bits         Merged-bits     Multibit Conversion %     Bits Per Flop
------------------------------------------------------------
-FlipFlops             1198                    0        0.00                    1.00
------------------------------------------------------------

------------------------------------------------------------
Seq_Mbit libcell              Bitwidth        Count
------------------------------------------------------------
Total 0
============================================================
------------------------------------------------------------
Category            Num of Insts Rejected     Reasons
------------------------------------------------------------
------------------------------------------------------------
      flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:          39.02             41                                      ccopt_design

*** Summary of all messages that are not suppressed in this session:
Severity  ID               Count  Summary                                  
WARNING   IMPDBTCL-321         8  The attribute '%s' still works but will ...
WARNING   IMPCCOPT-2015        2  %s will not update I/O latencies for the...
WARNING   IMPTCM-77            2  Option "%s" for command %s is obsolete a...
*** Message Summary: 12 warning(s), 0 error(s)

*** ccopt_design #1 [finish] : cpu/real = 0:00:49.5/0:00:51.5 (1.0), totSession cpu/real = 0:04:45.4/0:04:51.3 (1.0), mem = 2384.6M
@file 85:
@@file 86: report_clock_trees -summary -out_file reports/report_clock_trees.rpt
Clock tree timing engine global stage delay update for default_dc:both.early...
Clock tree timing engine global stage delay update for default_dc:both.early done. (took cpu=0:00:00.0 real=0:00:00.0)
Clock tree timing engine global stage delay update for default_dc:both.late...
Clock tree timing engine global stage delay update for default_dc:both.late done. (took cpu=0:00:00.0 real=0:00:00.0)
@@file 87: report_skew_groups  -summary -out_file reports/report_ccopt_skew_groups.rpt
Clock tree timing engine global stage delay update for default_dc:both.early...
Clock tree timing engine global stage delay update for default_dc:both.early done. (took cpu=0:00:00.0 real=0:00:00.0)
Clock tree timing engine global stage delay update for default_dc:both.late...
Clock tree timing engine global stage delay update for default_dc:both.late done. (took cpu=0:00:00.0 real=0:00:00.0)
default_const
@file 88:
@file 89: #-----------------------------------------------------------------------
@file 90: ## Post CTS setup and hold optimization
@file 91: #-----------------------------------------------------------------------
@file 92:
@@file 93: set_interactive_constraint_modes [all_constraint_modes -active]
@@file 94: reset_clock_tree_latency [all_clocks]
Resetting all latency settings from fanout cone of clock 'Clk'
@@file 95: set_propagated_clock [all_clocks]
@@file 96: set_interactive_constraint_modes []
@file 97:
@@file 98: opt_design -post_cts        -report_dir reports/STA
**opt_design ... cpu = 0:00:00, real = 0:00:00, mem = 1733.8M, totSessionCpu=0:04:46 **
*** opt_design #1 [begin] : totSession cpu/real = 0:04:45.6/0:04:51.6 (1.0), mem = 2314.1M
GigaOpt running with 1 threads.
*** InitOpt #1 [begin] (opt_design #1) : totSession cpu/real = 0:04:45.6/0:04:51.6 (1.0), mem = 2314.1M
**INFO: User settings:
delaycal_default_net_delay                                     1000ps
delaycal_default_net_load                                      0.5pf
delaycal_enable_high_fanout                                    true
delaycal_ignore_net_load                                       false
delaycal_input_transition_delay                                0.1ps
delaycal_socv_accuracy_mode                                    low
delaycal_use_default_delay_limit                               1000
setAnalysisMode -cts                                           preCTS
setDelayCalMode -engine                                        aae
design_bottom_routing_layer                                    Metal2
design_process_node                                            45
extract_rc_coupling_cap_threshold                              0.1
extract_rc_engine                                              pre_route
extract_rc_layer_independent                                   1
extract_rc_relative_cap_threshold                              1.0
extract_rc_total_cap_threshold                                 0.0
opt_drv_margin                                                 0.0
opt_fix_drv                                                    true
opt_preserve_all_sequential                                    false
opt_resize_flip_flops                                          true
opt_setup_target_slack                                         0.0
opt_view_pruning_hold_views_active_list                        { func_default }
opt_view_pruning_setup_views_active_list                       { func_default }
opt_view_pruning_setup_views_persistent_list                   { func_default}
opt_view_pruning_tdgr_setup_views_persistent_list              { func_default}
place_global_reorder_scan                                      false
getAnalysisMode -cts                                           preCTS
getDelayCalMode -engine                                        aae
get_power_analysis_mode -report_power_quiet                    false
getAnalysisMode -cts                                           preCTS
**INFO: set_db design_flow_effort standard -> setting 'set_db opt_all_end_points true' for the duration of this command.
Need call spDPlaceInit before registerPrioInstLoc.
**opt_design ... cpu = 0:00:11, real = 0:00:11, mem = 1647.0M, totSessionCpu=0:04:56 **
*** opt_design -post_cts ***
DRC Margin: user margin 0.0; extra margin 0.2
Hold Target Slack: user slack 0
Setup Target Slack: user slack 0; extra slack 0.0
set_db opt_useful_skew_eco_route false
Multi-VT timing optimization disabled based on library information.
Start to check current routing status for nets...
All nets are already routed correctly.
End to check current routing status for nets (mem=2234.9M)
Compute RC Scale Done ...
Starting delay calculation for Setup views
AAE_INFO: opIsDesignInPostRouteState() is 0
#################################################################################
# Design Stage: PreRoute
# Design Name: filter_top
# Design Mode: 45nm
# Analysis Mode: MMMC Non-OCV 
# Parasitics Mode: No SPEF/RCDB 
# Signoff Settings: SI Off 
#################################################################################
Calculate delays in Single mode...
Start delay calculation (fullDC) (1 T). (MEM=2430.75)
Total number of fetched objects 32136
AAE_INFO: Total number of nets for which stage creation was skipped for all views 0
End delay calculation. (MEM=2426.26 CPU=0:00:03.8 REAL=0:00:04.0)
End delay calculation (fullDC). (MEM=2426.26 CPU=0:00:04.4 REAL=0:00:05.0)
*** Done Building Timing Graph (cpu=0:00:05.2 real=0:00:05.0 totSessionCpu=0:05:03 mem=2426.3M)

------------------------------------------------------------------
             Initial Summary
------------------------------------------------------------------

Setup views included:
 func_default 

+--------------------+---------+---------+---------+
|     Setup mode     |   all   | reg2reg | default |
+--------------------+---------+---------+---------+
|           WNS (ns):|  0.387  |  0.387  |  1.906  |
|           TNS (ns):|  0.000  |  0.000  |  0.000  |
|    Violating Paths:|    0    |    0    |    0    |
|          All Paths:|  1189   |  1165   |   24    |
+--------------------+---------+---------+---------+

+----------------+-------------------------------+------------------+
|                |              Real             |       Total      |
|    DRVs        +------------------+------------+------------------|
|                |  Nr nets(terms)  | Worst Vio  |  Nr nets(terms)  |
+----------------+------------------+------------+------------------+
|   max_cap      |      0 (0)       |   0.000    |      0 (0)       |
|   max_tran     |      0 (0)       |   0.000    |      0 (0)       |
|   max_fanout   |      0 (0)       |     0      |      0 (0)       |
|   max_length   |      0 (0)       |     0      |      0 (0)       |
+----------------+------------------+------------+------------------+

Density: 70.224%
------------------------------------------------------------------
**opt_design ... cpu = 0:00:18, real = 0:00:18, mem = 1768.3M, totSessionCpu=0:05:03 **
*** InitOpt #1 [finish] (opt_design #1) : cpu/real = 0:00:17.7/0:00:17.6 (1.0), totSession cpu/real = 0:05:03.3/0:05:09.2 (1.0), mem = 2331.3M
** INFO : this run is activating low effort ccoptDesign flow
OPTC: m1 20.0 20.0
#optDebug: fT-E <X 2 0 0 1>
-congRepairInPostCTS false                 # bool, default=false, private
GigaOpt Checkpoint: Internal congRefineRouteType -postCTS -congThreshold 0.001 -rescheduleForCongestion -resetVeryShortNets -resetShortNets -useSpineBased -rescheduleForAdherence -minSlack 19.8
Begin: GigaOpt Route Type Constraints Refinement
*** CongRefineRouteType #1 [begin] (opt_design #1) : totSession cpu/real = 0:05:04.2/0:05:10.1 (1.0), mem = 2331.3M
Updated routing constraints on 0 nets.
Bottom Preferred Layer:
+---------------+------------+----------+
|     Layer     |    CLK     |   Rule   |
+---------------+------------+----------+
| Metal3 (z=3)  |         14 | default  |
+---------------+------------+----------+
Via Pillar Rule:
    None
*** CongRefineRouteType #1 [finish] (opt_design #1) : cpu/real = 0:00:00.1/0:00:00.1 (1.0), totSession cpu/real = 0:05:04.3/0:05:10.2 (1.0), mem = 2331.3M
End: GigaOpt Route Type Constraints Refinement
*** SimplifyNetlist #1 [begin] (opt_design #1) : totSession cpu/real = 0:05:04.3/0:05:10.2 (1.0), mem = 2331.3M
Info: 14 nets with fixed/cover wires excluded.
Info: 14 clock nets excluded from IPO operation.
Usable buffer cells for single buffer setup transform:
CLKBUFX2 BUFX2 CLKBUFX3 BUFX3 CLKBUFX4 BUFX4 BUFX6 CLKBUFX8 BUFX8 CLKBUFX12 BUFX12 CLKBUFX16 BUFX16 BUFX20 
Number of usable buffer cells above: 14

Netlist preparation processing... 
Removed 0 instance
*info: Marking 0 isolation instances dont touch
*info: Marking 0 level shifter instances dont touch
*** SimplifyNetlist #1 [finish] (opt_design #1) : cpu/real = 0:00:01.2/0:00:01.2 (1.0), totSession cpu/real = 0:05:05.5/0:05:11.4 (1.0), mem = 2347.6M
*** Starting optimizing excluded clock nets MEM= 2347.6M) ***
*info: No excluded clock nets to be optimized.
*** Finished optimizing excluded clock nets (CPU Time= 0:00:00.0  MEM= 2347.6M) ***
*** Starting optimizing excluded clock nets MEM= 2347.6M) ***
*info: No excluded clock nets to be optimized.
*** Finished optimizing excluded clock nets (CPU Time= 0:00:00.0  MEM= 2347.6M) ***
Info: Done creating the CCOpt slew target map.
Begin: GigaOpt high fanout net optimization
GigaOpt HFN: use maxLocalDensity 1.2
GigaOpt Checkpoint: Internal optDRV -useLevelizedBufferTreeOnly -auxMaxFanoutCountLimit 500 -largeScaleFixing -maxIter 1 -maxLocalDensity 1.2 -numThreads 1 -postCTS -preRouteDontEndWithRefinePlaceIncrSteinerRouteDC
*** DrvOpt #1 [begin] (opt_design #1) : totSession cpu/real = 0:05:05.5/0:05:11.4 (1.0), mem = 2347.6M
Info: 14 nets with fixed/cover wires excluded.
Info: 14 clock nets excluded from IPO operation.
*** DrvOpt #1 [finish] (opt_design #1) : cpu/real = 0:00:01.0/0:00:01.0 (1.0), totSession cpu/real = 0:05:06.5/0:05:12.4 (1.0), mem = 2347.7M
GigaOpt HFN: restore maxLocalDensity to 0.98
End: GigaOpt high fanout net optimization
Begin: GigaOpt Global Optimization
*info: use new DP (enabled)
GigaOpt Checkpoint: Internal globalOpt -maxLocalDensity 1.2 -numThreads 1 -postCTS -preRouteDontEndWithRefinePlaceIncrSteinerRouteDC -enableHighLayerOpt -maxIter 50 -maxIterForLEPG 50
Info: 14 nets with fixed/cover wires excluded.
Info: 14 clock nets excluded from IPO operation.
*** GlobalOpt #1 [begin] (opt_design #1) : totSession cpu/real = 0:05:06.9/0:05:12.9 (1.0), mem = 2347.7M
*info: 14 clock nets excluded
*info: 68 no-driver nets excluded.
*info: 14 nets with fixed/cover wires excluded.
** GigaOpt Global Opt WNS Slack 0.000  TNS Slack 0.000 
+--------+--------+---------+------------+--------+------------+---------+------------------------------------------+
|  WNS   |  TNS   | Density |    Real    |  Mem   | Worst View |Pathgroup|                End Point                 |
+--------+--------+---------+------------+--------+------------+---------+------------------------------------------+
|   0.000|   0.000|   70.22%|   0:00:00.0| 2405.0M|func_default|       NA| NA                                       |
+--------+--------+---------+------------+--------+------------+---------+------------------------------------------+

*** Finish post-CTS Global Setup Fixing (cpu=0:00:00.1 real=0:00:00.0 mem=2405.0M) ***

*** Finish post-CTS Setup Fixing (cpu=0:00:00.1 real=0:00:00.0 mem=2405.0M) ***
Bottom Preferred Layer:
+---------------+------------+----------+
|     Layer     |    CLK     |   Rule   |
+---------------+------------+----------+
| Metal3 (z=3)  |         14 | default  |
+---------------+------------+----------+
Via Pillar Rule:
    None
** GigaOpt Global Opt End WNS Slack 0.000  TNS Slack 0.000 
*** GlobalOpt #1 [finish] (opt_design #1) : cpu/real = 0:00:01.6/0:00:01.6 (1.0), totSession cpu/real = 0:05:08.6/0:05:14.5 (1.0), mem = 2345.9M
End: GigaOpt Global Optimization
*** Timing Is met
*** Check timing (0:00:00.0)
GigaOpt Checkpoint: Internal reclaim -numThreads 1 -postCTS -doRemoveUselessTerm -tgtSlackMult 3 -routeType -noRouteTypeResizePolish -noViewPrune -weedwhack -nonLegal -nativePathGroupFlow
Info: 14 nets with fixed/cover wires excluded.
Info: 14 clock nets excluded from IPO operation.
GigaOpt Checkpoint: Internal reclaim -noViewPrune -rebufferOnly -costCleanup -preRouteDontEndWithRefinePlaceIncrSteinerRouteDC -force -numThreads 1 -postCTS
Info: 14 nets with fixed/cover wires excluded.
Info: 14 clock nets excluded from IPO operation.
Begin: Area Reclaim Optimization
*** AreaOpt #1 [begin] (opt_design #1) : totSession cpu/real = 0:05:09.5/0:05:15.5 (1.0), mem = 2399.1M
Usable buffer cells for single buffer setup transform:
CLKBUFX2 BUFX2 CLKBUFX3 BUFX3 CLKBUFX4 BUFX4 BUFX6 CLKBUFX8 BUFX8 CLKBUFX12 BUFX12 CLKBUFX16 BUFX16 BUFX20 
Number of usable buffer cells above: 14
Reclaim Optimization WNS Slack 0.000  TNS Slack 0.000 Density 70.22
+---------+---------+--------+--------+------------+--------+
| Density | Commits |  WNS   |  TNS   |    Real    |  Mem   |
+---------+---------+--------+--------+------------+--------+
|   70.22%|        -|   0.000|   0.000|   0:00:00.0| 2405.2M|
|   70.22%|       11|   0.000|   0.000|   0:00:23.0| 2716.4M|
+---------+---------+--------+--------+------------+--------+
Reclaim Optimization End WNS Slack 0.000  TNS Slack 0.000 Density 70.22
Bottom Preferred Layer:
+---------------+------------+----------+
|     Layer     |    CLK     |   Rule   |
+---------------+------------+----------+
| Metal3 (z=3)  |         14 | default  |
+---------------+------------+----------+
Via Pillar Rule:
    None

Number of times islegalLocAvaiable called = 0 skipped = 0, called in commitmove = 0, skipped in commitmove = 0
End: Core Area Reclaim Optimization (cpu = 0:00:24.1) (real = 0:00:24.0) **
*** AreaOpt #1 [finish] (opt_design #1) : cpu/real = 0:00:24.1/0:00:24.1 (1.0), totSession cpu/real = 0:05:33.6/0:05:39.5 (1.0), mem = 2716.4M
End: Area Reclaim Optimization (cpu=0:00:24, real=0:00:24, mem=2360.35M, totSessionCpu=0:05:34).
GigaOpt Checkpoint: Internal reclaim -numThreads 1 -customPhyUpdate -noGCompAndPhase -force -svrReclaim -rtrShortNets -allowDegradingShortNetRemoval -postCTS -tgtSlackMult 2 -wtns -noRouteTypeResizePolish -noViewPrune -nativePathGroupFlow
Info: 14 nets with fixed/cover wires excluded.
Info: 14 clock nets excluded from IPO operation.
Begin: Area Reclaim Optimization
*** AreaOpt #2 [begin] (opt_design #1) : totSession cpu/real = 0:05:34.0/0:05:39.9 (1.0), mem = 2417.6M
Usable buffer cells for single buffer setup transform:
CLKBUFX2 BUFX2 CLKBUFX3 BUFX3 CLKBUFX4 BUFX4 BUFX6 CLKBUFX8 BUFX8 CLKBUFX12 BUFX12 CLKBUFX16 BUFX16 BUFX20 
Number of usable buffer cells above: 14
Reclaim Optimization WNS Slack 0.020  TNS Slack 0.000 Density 70.22
+---------+---------+--------+--------+------------+--------+
| Density | Commits |  WNS   |  TNS   |    Real    |  Mem   |
+---------+---------+--------+--------+------------+--------+
|   70.22%|        -|   0.020|   0.000|   0:00:00.0| 2417.6M|
|   70.22%|        0|   0.020|   0.000|   0:00:01.0| 2417.6M|
|   70.22%|        0|   0.020|   0.000|   0:00:00.0| 2417.6M|
|   70.22%|        0|   0.020|   0.000|   0:00:00.0| 2417.6M|
|   70.21%|        5|   0.020|   0.000|   0:00:01.0| 2441.2M|
|   70.21%|        0|   0.020|   0.000|   0:00:00.0| 2441.2M|
|   70.21%|        0|   0.020|   0.000|   0:00:00.0| 2441.2M|
+---------+---------+--------+--------+------------+--------+
Reclaim Optimization End WNS Slack 0.020  TNS Slack 0.000 Density 70.21
Bottom Preferred Layer:
+---------------+------------+----------+
|     Layer     |    CLK     |   Rule   |
+---------------+------------+----------+
| Metal3 (z=3)  |         14 | default  |
+---------------+------------+----------+
Via Pillar Rule:
    None

Number of times islegalLocAvaiable called = 5 skipped = 0, called in commitmove = 5, skipped in commitmove = 0
End: Core Area Reclaim Optimization (cpu = 0:00:02.6) (real = 0:00:03.0) **
*** Starting place_detail (0:05:37 mem=2441.2M) ***
Total net bbox length = 3.025e+05 (1.541e+05 1.484e+05) (ext = 2.393e+03)
Move report: Detail placement moves 59 insts, mean move: 0.97 um, max move: 3.42 um 
	Max move on inst (fir_filter/FE_OFC566_din_r_7): (279.20, 141.55) --> (279.20, 138.13)
	Runtime: CPU: 0:00:00.6 REAL: 0:00:01.0 MEM: 2428.2MB
Summary Report:
Instances move: 59 (out of 23754 movable)
Instances flipped: 0
Mean displacement: 0.97 um
Max displacement: 3.42 um (Instance: fir_filter/FE_OFC566_din_r_7) (279.2, 141.55) -> (279.2, 138.13)
	Length: 5 sites, height: 1 rows, site name: CoreSiteDouble, cell type: BUFX2
Total net bbox length = 3.025e+05 (1.541e+05 1.484e+05) (ext = 2.393e+03)
Runtime: CPU: 0:00:00.7 REAL: 0:00:01.0 MEM: 2428.2MB
*** Finished place_detail (0:05:37 mem=2428.2M) ***
*** maximum move = 3.42 um ***
*** Finished re-routing un-routed nets (2425.2M) ***

*** Finish Physical Update (cpu=0:00:01.2 real=0:00:01.0 mem=2441.2M) ***
*** AreaOpt #2 [finish] (opt_design #1) : cpu/real = 0:00:03.8/0:00:03.8 (1.0), totSession cpu/real = 0:05:37.8/0:05:43.7 (1.0), mem = 2441.2M
End: Area Reclaim Optimization (cpu=0:00:04, real=0:00:04, mem=2360.16M, totSessionCpu=0:05:38).
postCtsLateCongRepair #1 0
postCtsLateCongRepair #1 0
postCtsLateCongRepair #1 0
postCtsLateCongRepair #1 0
Starting local wire reclaim
*** Starting place_detail (0:05:38 mem=2360.2M) ***
*** Finished SKP initialization (cpu=0:00:01.2, real=0:00:02.0)***
Timing cost in AAE based: 3653.0333835784672374
Move report: Detail placement moves 6365 insts, mean move: 2.80 um, max move: 34.22 um 
	Max move on inst (fir_filter/FE_OFC60_din_r_11): (113.40, 254.41) --> (82.60, 257.83)
	Runtime: CPU: 0:00:26.4 REAL: 0:00:27.0 MEM: 2406.2MB
Summary Report:
Instances move: 6365 (out of 23754 movable)
Instances flipped: 0
Mean displacement: 2.80 um
Max displacement: 34.22 um (Instance: fir_filter/FE_OFC60_din_r_11) (113.4, 254.41) -> (82.6, 257.83)
	Length: 3 sites, height: 1 rows, site name: CoreSite, cell type: INVX2
Runtime: CPU: 0:00:26.5 REAL: 0:00:27.0 MEM: 2406.2MB
*** Finished place_detail (0:06:04 mem=2406.2M) ***
AAE_INFO: opIsDesignInPostRouteState() is 0
#################################################################################
# Design Stage: PreRoute
# Design Name: filter_top
# Design Mode: 45nm
# Analysis Mode: MMMC Non-OCV 
# Parasitics Mode: No SPEF/RCDB 
# Signoff Settings: SI Off 
#################################################################################
Calculate delays in Single mode...
Start delay calculation (fullDC) (1 T). (MEM=2326.64)
Total number of fetched objects 32122
AAE_INFO: Total number of nets for which stage creation was skipped for all views 0
End delay calculation. (MEM=2385.86 CPU=0:00:04.5 REAL=0:00:04.0)
End delay calculation (fullDC). (MEM=2385.86 CPU=0:00:05.2 REAL=0:00:05.0)
eGR doReRoute: optGuide
[NR-eGR] Track table information for default rule: 
[NR-eGR] Metal1 has single uniform track structure
[NR-eGR] Metal2 has single uniform track structure
[NR-eGR] Metal3 has single uniform track structure
[NR-eGR] Metal4 has single uniform track structure
[NR-eGR] Metal5 has single uniform track structure
[NR-eGR] Metal6 has single uniform track structure
[NR-eGR] Metal7 has single uniform track structure
[NR-eGR] Metal8 has single uniform track structure
[NR-eGR] Metal9 has single uniform track structure
[NR-eGR] Metal10 has single uniform track structure
[NR-eGR] Metal11 has single uniform track structure
[NR-eGR] Read 43156 PG shapes
[NR-eGR] Read 0 clock shapes
[NR-eGR] Read 0 other shapes
[NR-eGR] #Routing Blockages  : 0
[NR-eGR] #Instance Blockages : 0
[NR-eGR] #PG Blockages       : 43156
[NR-eGR] #Halo Blockages     : 0
[NR-eGR] #Boundary Blockages : 0
[NR-eGR] #Clock Blockages    : 0
[NR-eGR] #Other Blockages    : 0
[NR-eGR] Num Prerouted Nets = 14  Num Prerouted Wires = 3157
[NR-eGR] Read 32028 nets ( ignored 14 )
[NR-eGR] ============ Routing rule table ============
[NR-eGR] Rule id: 0  Nets: 32014
[NR-eGR] ========================================
[NR-eGR] 
[NR-eGR] Layer group 1: route 32014 net(s) in layer range [2, 11]
[NR-eGR] Early Global Route overflow of layer group 1: 0.00% H + 0.00% V. EstWL: 3.524652e+05um
[NR-eGR] Congestion Analysis By layer: (blocked Gcells are excluded) 
[NR-eGR]                        OverCon            
[NR-eGR]                         #Gcell     %Gcell
[NR-eGR]        Layer               (1)    OverCon
[NR-eGR] ----------------------------------------------
[NR-eGR]  Metal1 ( 1)         0( 0.00%)   ( 0.00%) 
[NR-eGR]  Metal2 ( 2)         6( 0.01%)   ( 0.01%) 
[NR-eGR]  Metal3 ( 3)         1( 0.00%)   ( 0.00%) 
[NR-eGR]  Metal4 ( 4)         0( 0.00%)   ( 0.00%) 
[NR-eGR]  Metal5 ( 5)         0( 0.00%)   ( 0.00%) 
[NR-eGR]  Metal6 ( 6)         0( 0.00%)   ( 0.00%) 
[NR-eGR]  Metal7 ( 7)         0( 0.00%)   ( 0.00%) 
[NR-eGR]  Metal8 ( 8)         0( 0.00%)   ( 0.00%) 
[NR-eGR]  Metal9 ( 9)         0( 0.00%)   ( 0.00%) 
[NR-eGR] Metal10 (10)         0( 0.00%)   ( 0.00%) 
[NR-eGR] Metal11 (11)         0( 0.00%)   ( 0.00%) 
[NR-eGR] ----------------------------------------------
[NR-eGR]        Total         7( 0.00%)   ( 0.00%) 
[NR-eGR] 
[NR-eGR] Overflow after Early Global Route 0.00% H + 0.00% V
[NR-eGR]                  Length (um)    Vias 
[NR-eGR] -------------------------------------
[NR-eGR]  Metal1   (1H)             0   92192 
[NR-eGR]  Metal2   (2V)        135562  129155 
[NR-eGR]  Metal3   (3H)        167054   10980 
[NR-eGR]  Metal4   (4V)         54243    2506 
[NR-eGR]  Metal5   (5H)         21483     159 
[NR-eGR]  Metal6   (6V)          2932       3 
[NR-eGR]  Metal7   (7H)             9       0 
[NR-eGR]  Metal8   (8V)             0       0 
[NR-eGR]  Metal9   (9H)             0       0 
[NR-eGR]  Metal10  (10V)            0       0 
[NR-eGR]  Metal11  (11H)            0       0 
[NR-eGR] -------------------------------------
[NR-eGR]           Total       381283  234995 
[NR-eGR] --------------------------------------------------------------------------
[NR-eGR] Total half perimeter of net bounding box: 300503um
[NR-eGR] Total length: 381283um, number of vias: 234995
[NR-eGR] --------------------------------------------------------------------------
[NR-eGR] Total eGR-routed clock nets wire length: 0um, number of vias: 0
[NR-eGR] --------------------------------------------------------------------------
[NR-eGR] Finished Early Global Route kernel ( CPU: 1.14 sec, Real: 1.50 sec, Curr Mem: 2346.04 MB )
Extraction called for design 'filter_top' of instances=23767 and nets=32192 using extraction engine 'pre_route' .
pre_route RC Extraction called for design filter_top.
RC Extraction called in multi-corner(1) mode.
RCMode: PreRoute
      RC Corner Indexes            0   
Capacitance Scaling Factor   : 1.00000 
Resistance Scaling Factor    : 1.00000 
Clock Cap. Scaling Factor    : 1.00000 
Clock Res. Scaling Factor    : 1.00000 
Shrink Factor                : 1.00000
PreRoute extraction is honoring NDR/Shielding/ExtraSpace for clock nets.
Using Quantus QRC technology file ...
Updating RC grid for preRoute extraction ...
Initializing multi-corner resistance tables ...
PreRoute RC Extraction DONE (CPU Time: 0:00:00.2  Real Time: 0:00:00.0  MEM: 2332.039M)
Compute RC Scale Done ...
[hotspot] +------------+---------------+---------------+
[hotspot] |            |   max hotspot | total hotspot |
[hotspot] +------------+---------------+---------------+
[hotspot] | normalized |          0.00 |          0.00 |
[hotspot] +------------+---------------+---------------+
Local HotSpot Analysis: normalized max congestion hotspot area = 0.00, normalized total congestion hotspot area = 0.00 (area is in unit of 4 std-cell row bins)
GigaOpt Checkpoint: Internal congRefineRouteType -postCTS -resetVeryShortNets -rescheduleForAdherence  
Begin: GigaOpt Route Type Constraints Refinement
*** CongRefineRouteType #2 [begin] (opt_design #1) : totSession cpu/real = 0:06:13.5/0:06:19.8 (1.0), mem = 2367.1M
Updated routing constraints on 0 nets.
Bottom Preferred Layer:
+---------------+------------+----------+
|     Layer     |    CLK     |   Rule   |
+---------------+------------+----------+
| Metal3 (z=3)  |         14 | default  |
+---------------+------------+----------+
Via Pillar Rule:
    None
*** CongRefineRouteType #2 [finish] (opt_design #1) : cpu/real = 0:00:00.1/0:00:00.1 (1.0), totSession cpu/real = 0:06:13.6/0:06:19.9 (1.0), mem = 2367.1M
End: GigaOpt Route Type Constraints Refinement
skip EGR on cluster skew clock nets.
OPTC: user 20.0
AAE_INFO: opIsDesignInPostRouteState() is 0
#################################################################################
# Design Stage: PreRoute
# Design Name: filter_top
# Design Mode: 45nm
# Analysis Mode: MMMC Non-OCV 
# Parasitics Mode: No SPEF/RCDB 
# Signoff Settings: SI Off 
#################################################################################
Calculate delays in Single mode...
Start delay calculation (fullDC) (1 T). (MEM=2365.12)
Total number of fetched objects 32122
AAE_INFO: Total number of nets for which stage creation was skipped for all views 0
End delay calculation. (MEM=2390.79 CPU=0:00:03.7 REAL=0:00:04.0)
End delay calculation (fullDC). (MEM=2390.79 CPU=0:00:04.4 REAL=0:00:05.0)
Begin: GigaOpt postEco DRV Optimization
GigaOpt Checkpoint: Internal optDRV -inPostEcoStage -smallScaleFixing -maxIter 3 -max_tran -max_cap -maxLocalDensity 0.98 -numThreads 1 -preRouteDontEndWithRefinePlaceIncrSteinerRouteDC -postCTS
*** DrvOpt #2 [begin] (opt_design #1) : totSession cpu/real = 0:06:19.1/0:06:25.5 (1.0), mem = 2390.8M
Info: 14 nets with fixed/cover wires excluded.
Info: 14 clock nets excluded from IPO operation.
+-------------------------------------------------------------------------------------------------------------------------------------------------------+
|        max-tran       |        max-cap        |  max-fanout |  max-length |       setup       |        |        |        |       |          |         |
+-------------------------------------------------------------------------------------------------------------------------------------------------------+
| nets | terms|  wViol  | nets | terms|  wViol  | nets | terms| nets | terms|   WNS   |   TNS   |  #Buf  |  #Inv  | #Resize|Density|   Real   |   Mem   |
+-------------------------------------------------------------------------------------------------------------------------------------------------------+
|     0|     0|     0.00|     0|     0|     0.00|     0|     0|     0|     0|     0.34|     0.00|       0|       0|       0| 70.21%|          |         |
|     0|     0|     0.00|     0|     0|     0.00|     0|     0|     0|     0|     0.34|     0.00|       9|       2|       3| 70.23%| 0:00:00.0|  2564.3M|
|     0|     0|     0.00|     0|     0|     0.00|     0|     0|     0|     0|     0.34|     0.00|       0|       0|       0| 70.23%| 0:00:00.0|  2564.3M|
+-------------------------------------------------------------------------------------------------------------------------------------------------------+
Bottom Preferred Layer:
+---------------+------------+----------+
|     Layer     |    CLK     |   Rule   |
+---------------+------------+----------+
| Metal3 (z=3)  |         14 | default  |
+---------------+------------+----------+
Via Pillar Rule:
    None

*** Finish DRV Fixing (cpu=0:00:01.5 real=0:00:01.0 mem=2564.3M) ***

*** DrvOpt #2 [finish] (opt_design #1) : cpu/real = 0:00:02.6/0:00:02.5 (1.0), totSession cpu/real = 0:06:21.7/0:06:28.0 (1.0), mem = 2379.3M
End: GigaOpt postEco DRV Optimization
Running refinePlace -preserveRouting true -hardFence false
*** Starting place_detail (0:06:22 mem=2379.3M) ***

Starting Small incrNP...
Density distribution unevenness ratio = 4.964%
Skipped incrNP (cpu=0:00:00.0, real=0:00:00.0, mem=2379.3M)
End of Small incrNP (cpu=0:00:00.0, real=0:00:00.0)
Move report: Detail placement moves 18 insts, mean move: 0.99 um, max move: 2.31 um 
	Max move on inst (fir_filter/g877293): (143.80, 165.49) --> (143.20, 167.20)
	Runtime: CPU: 0:00:00.8 REAL: 0:00:00.0 MEM: 2350.5MB
Summary Report:
Instances move: 18 (out of 23765 movable)
Instances flipped: 0
Mean displacement: 0.99 um
Max displacement: 2.31 um (Instance: fir_filter/g877293) (143.8, 165.49) -> (143.2, 167.2)
	Length: 3 sites, height: 1 rows, site name: CoreSite, cell type: NOR2X1
Runtime: CPU: 0:00:00.8 REAL: 0:00:00.0 MEM: 2350.5MB
*** Finished place_detail (0:06:23 mem=2350.5M) ***
#optDebug: fT-D <X 1 0 0 0>
Register exp ratio and priority group on 0 nets on 32133 nets : 

Active setup views:
 func_default
  Dominating endpoints: 0
  Dominating TNS: -0.000

Extraction called for design 'filter_top' of instances=23778 and nets=32203 using extraction engine 'pre_route' .
pre_route RC Extraction called for design filter_top.
RC Extraction called in multi-corner(1) mode.
RCMode: PreRoute
      RC Corner Indexes            0   
Capacitance Scaling Factor   : 1.00000 
Resistance Scaling Factor    : 1.00000 
Clock Cap. Scaling Factor    : 1.00000 
Clock Res. Scaling Factor    : 1.00000 
Shrink Factor                : 1.00000
PreRoute extraction is honoring NDR/Shielding/ExtraSpace for clock nets.
Using Quantus QRC technology file ...
Updating RC grid for preRoute extraction ...
Initializing multi-corner resistance tables ...
PreRoute RC Extraction DONE (CPU Time: 0:00:00.3  Real Time: 0:00:00.0  MEM: 2366.168M)
Starting delay calculation for Setup views
AAE_INFO: opIsDesignInPostRouteState() is 0
#################################################################################
# Design Stage: PreRoute
# Design Name: filter_top
# Design Mode: 45nm
# Analysis Mode: MMMC Non-OCV 
# Parasitics Mode: No SPEF/RCDB 
# Signoff Settings: SI Off 
#################################################################################
Calculate delays in Single mode...
Start delay calculation (fullDC) (1 T). (MEM=2360.18)
Total number of fetched objects 32133
AAE_INFO: Total number of nets for which stage creation was skipped for all views 0
End delay calculation. (MEM=2387.39 CPU=0:00:03.7 REAL=0:00:03.0)
End delay calculation (fullDC). (MEM=2387.39 CPU=0:00:04.4 REAL=0:00:04.0)
*** Done Building Timing Graph (cpu=0:00:05.6 real=0:00:06.0 totSessionCpu=0:06:29 mem=2387.4M)
OPTC: user 20.0
Reported timing to dir reports/STA
**opt_design ... cpu = 0:01:43, real = 0:01:44, mem = 1775.5M, totSessionCpu=0:06:29 **

------------------------------------------------------------------
     opt_design Final Summary
------------------------------------------------------------------

Setup views included:
 func_default 

+--------------------+---------+---------+---------+
|     Setup mode     |   all   | reg2reg | default |
+--------------------+---------+---------+---------+
|           WNS (ns):|  0.336  |  0.336  |  1.906  |
|           TNS (ns):|  0.000  |  0.000  |  0.000  |
|    Violating Paths:|    0    |    0    |    0    |
|          All Paths:|  1189   |  1165   |   24    |
+--------------------+---------+---------+---------+

+----------------+-------------------------------+------------------+
|                |              Real             |       Total      |
|    DRVs        +------------------+------------+------------------|
|                |  Nr nets(terms)  | Worst Vio  |  Nr nets(terms)  |
+----------------+------------------+------------+------------------+
|   max_cap      |      0 (0)       |   0.000    |      0 (0)       |
|   max_tran     |      0 (0)       |   0.000    |      0 (0)       |
|   max_fanout   |      0 (0)       |     0      |      0 (0)       |
|   max_length   |      0 (0)       |     0      |      0 (0)       |
+----------------+------------------+------------+------------------+

Density: 70.232%
Routing Overflow: 0.00% H and 0.00% V
------------------------------------------------------------------
**opt_design ... cpu = 0:01:45, real = 0:01:46, mem = 1776.2M, totSessionCpu=0:06:30 **
*** Finished opt_design ***
      flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:*                                       0.000 ns          0.336 ns  final
UM: Running design category ...
------------------------------------------------------------
	Current design flip-flop statistics

Single-Bit FF Count          :         1198
Multi-Bit FF Count           :            0
Total Bit Count              :         1198
Total FF Count               :         1198
Bits Per Flop                :        1.000
Total Clock Pin Cap(FF)      :      352.216
Multibit Conversion Ratio(%) :         0.00
------------------------------------------------------------
------------------------------------------------------------
            Multi-bit cell usage statistics

------------------------------------------------------------
============================================================
Sequential Multibit cells usage statistics
------------------------------------------------------------
            Not Merged-bits         Merged-bits     Multibit Conversion %     Bits Per Flop
------------------------------------------------------------
-FlipFlops             1198                    0        0.00                    1.00
------------------------------------------------------------

------------------------------------------------------------
Seq_Mbit libcell              Bitwidth        Count
------------------------------------------------------------
Total 0
============================================================
------------------------------------------------------------
Category            Num of Insts Rejected     Reasons
------------------------------------------------------------
------------------------------------------------------------
      flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:         105.93            106          0.000 ns          0.336 ns  opt_design_postcts
Info: Destroy the CCOpt slew target map.
*** opt_design #1 [finish] : cpu/real = 0:01:45.7/0:01:46.5 (1.0), totSession cpu/real = 0:06:31.4/0:06:38.1 (1.0), mem = 2353.6M
@@file 99: time_design -post_cts       -report_dir reports/STA
*** time_design #3 [begin] : totSession cpu/real = 0:06:31.4/0:06:38.1 (1.0), mem = 2353.6M
Start to check current routing status for nets...
All nets are already routed correctly.
End to check current routing status for nets (mem=2265.6M)

------------------------------------------------------------------
         time_design Summary
------------------------------------------------------------------

Setup views included:
 func_default 

+--------------------+---------+---------+---------+
|     Setup mode     |   all   | reg2reg | default |
+--------------------+---------+---------+---------+
|           WNS (ns):|  0.336  |  0.336  |  1.906  |
|           TNS (ns):|  0.000  |  0.000  |  0.000  |
|    Violating Paths:|    0    |    0    |    0    |
|          All Paths:|  1189   |  1165   |   24    |
+--------------------+---------+---------+---------+

+----------------+-------------------------------+------------------+
|                |              Real             |       Total      |
|    DRVs        +------------------+------------+------------------|
|                |  Nr nets(terms)  | Worst Vio  |  Nr nets(terms)  |
+----------------+------------------+------------+------------------+
|   max_cap      |      0 (0)       |   0.000    |      0 (0)       |
|   max_tran     |      0 (0)       |   0.000    |      0 (0)       |
|   max_fanout   |      0 (0)       |     0      |      0 (0)       |
|   max_length   |      0 (0)       |     0      |      0 (0)       |
+----------------+------------------+------------+------------------+

Density: 70.232%
Routing Overflow: 0.00% H and 0.00% V
------------------------------------------------------------------
Reported timing to dir reports/STA
Total CPU time: 1.88 sec
Total Real time: 2.0 sec
Total Memory Usage: 2265.765625 Mbytes
*** time_design #3 [finish] : cpu/real = 0:00:01.9/0:00:02.3 (0.8), totSession cpu/real = 0:06:33.3/0:06:40.5 (1.0), mem = 2265.8M
@file 100:
@@file 101: opt_design -post_cts -hold -report_dir reports/STA
**opt_design ... cpu = 0:00:00, real = 0:00:00, mem = 1663.2M, totSessionCpu=0:06:33 **
*** opt_design #2 [begin] : totSession cpu/real = 0:06:33.3/0:06:40.5 (1.0), mem = 2265.8M
GigaOpt running with 1 threads.
*** InitOpt #1 [begin] (opt_design #2) : totSession cpu/real = 0:06:33.3/0:06:40.5 (1.0), mem = 2265.8M
**INFO: User settings:
delaycal_default_net_delay                                     1000ps
delaycal_default_net_load                                      0.5pf
delaycal_enable_high_fanout                                    true
delaycal_ignore_net_load                                       false
delaycal_input_transition_delay                                0.1ps
delaycal_socv_accuracy_mode                                    low
delaycal_use_default_delay_limit                               1000
setAnalysisMode -cts                                           postCTS
setAnalysisMode -skew                                          true
setDelayCalMode -engine                                        aae
design_bottom_routing_layer                                    Metal2
design_process_node                                            45
extract_rc_coupling_cap_threshold                              0.1
extract_rc_engine                                              pre_route
extract_rc_layer_independent                                   1
extract_rc_relative_cap_threshold                              1.0
extract_rc_total_cap_threshold                                 0.0
opt_drv_margin                                                 0.0
opt_fix_drv                                                    true
opt_preserve_all_sequential                                    false
opt_resize_flip_flops                                          true
opt_setup_target_slack                                         0.0
opt_useful_skew_eco_route                                      false
opt_view_pruning_setup_views_active_list                       { func_default }
opt_view_pruning_setup_views_persistent_list                   { func_default}
opt_view_pruning_tdgr_setup_views_persistent_list              { func_default}
place_global_reorder_scan                                      false
getAnalysisMode -cts                                           postCTS
getAnalysisMode -skew                                          true
getDelayCalMode -engine                                        aae
get_power_analysis_mode -report_power_quiet                    false
getAnalysisMode -cts                                           postCTS
getAnalysisMode -skew                                          true
**INFO: set_db design_flow_effort standard -> setting 'set_db opt_all_end_points true' for the duration of this command.
Need call spDPlaceInit before registerPrioInstLoc.
**opt_design ... cpu = 0:00:10, real = 0:00:11, mem = 1670.0M, totSessionCpu=0:06:44 **
*** opt_design -post_cts ***
DRC Margin: user margin 0.0
Hold Target Slack: user slack 0
Setup Target Slack: user slack 0;
set_db opt_useful_skew_eco_route false
Start to check current routing status for nets...
All nets are already routed correctly.
End to check current routing status for nets (mem=2265.8M)
Compute RC Scale Done ...
*** InitOpt #1 [finish] (opt_design #2) : cpu/real = 0:00:11.9/0:00:12.0 (1.0), totSession cpu/real = 0:06:45.1/0:06:52.5 (1.0), mem = 2460.5M
GigaOpt Hold Optimizer is used
GigaOpt Checkpoint: Internal optHold -postCts -maxLocalDensity 1.0 -numThreads 1 -nativePathGroupFlow -viewPruneEffortLevel 1
Starting initialization (fixHold) cpu=0:00:00.0 real=0:00:00.0 totSessionCpu=0:06:46 mem=2347.5M ***
*** BuildHoldData #1 [begin] (opt_design #2) : totSession cpu/real = 0:06:45.9/0:06:53.2 (1.0), mem = 2347.5M
Saving timing graph ...
Done save timing graph
OPTC: user 20.0
Starting delay calculation for Hold views
AAE_INFO: opIsDesignInPostRouteState() is 0
#################################################################################
# Design Stage: PreRoute
# Design Name: filter_top
# Design Mode: 45nm
# Analysis Mode: MMMC Non-OCV 
# Parasitics Mode: No SPEF/RCDB 
# Signoff Settings: SI Off 
#################################################################################
Calculate delays in Single mode...
Start delay calculation (fullDC) (1 T). (MEM=2368.52)
Total number of fetched objects 32133
AAE_INFO: Total number of nets for which stage creation was skipped for all views 0
End delay calculation. (MEM=2383.11 CPU=0:00:03.7 REAL=0:00:04.0)
End delay calculation (fullDC). (MEM=2383.11 CPU=0:00:04.4 REAL=0:00:05.0)
*** Done Building Timing Graph (cpu=0:00:04.9 real=0:00:05.0 totSessionCpu=0:06:53 mem=2383.1M)

Active hold views:
 func_default
  Dominating endpoints: 0
  Dominating TNS: -0.000

Done building cte hold timing graph (fixHold) cpu=0:00:07.7 real=0:00:07.0 totSessionCpu=0:06:54 mem=2415.1M ***
OPTC: user 20.0
Done building hold timer [2605 node(s), 2581 edge(s), 1 view(s)] (fixHold) cpu=0:00:08.3 real=0:00:08.0 totSessionCpu=0:06:54 mem=2415.1M ***
Restoring timing graph ...
AAE_INFO: Resetting and re-constructing cache for AAE clocks ...
Done restore timing graph
Done building cte setup timing graph (fixHold) cpu=0:00:09.1 real=0:00:09.0 totSessionCpu=0:06:55 mem=2415.1M ***

*Info: minBufDelay = 14.0 ps, libStdDelay = 9.9 ps, minBufSize = 6840000 (5.0)
*Info: worst delay setup view: func_default

------------------------------------------------------------------
     Hold Opt Initial Summary
------------------------------------------------------------------

Setup views included:
 func_default
Hold views included:
 func_default

+--------------------+---------+---------+---------+
|     Setup mode     |   all   | reg2reg | default |
+--------------------+---------+---------+---------+
|           WNS (ns):|  0.336  |  0.336  |  1.906  |
|           TNS (ns):|  0.000  |  0.000  |  0.000  |
|    Violating Paths:|    0    |    0    |    0    |
|          All Paths:|  1189   |  1165   |   24    |
+--------------------+---------+---------+---------+

+--------------------+---------+---------+---------+
|     Hold mode      |   all   | reg2reg | default |
+--------------------+---------+---------+---------+
|           WNS (ns):| -0.038  |  0.054  | -0.038  |
|           TNS (ns):| -0.356  |  0.000  | -0.356  |
|    Violating Paths:|   12    |    0    |   12    |
|          All Paths:|  1189   |  1165   |   24    |
+--------------------+---------+---------+---------+

+----------------+-------------------------------+------------------+
|                |              Real             |       Total      |
|    DRVs        +------------------+------------+------------------|
|                |  Nr nets(terms)  | Worst Vio  |  Nr nets(terms)  |
+----------------+------------------+------------+------------------+
|   max_cap      |      0 (0)       |   0.000    |      0 (0)       |
|   max_tran     |      0 (0)       |   0.000    |      0 (0)       |
|   max_fanout   |      0 (0)       |     0      |      0 (0)       |
|   max_length   |      0 (0)       |     0      |      0 (0)       |
+----------------+------------------+------------+------------------+

Density: 70.232%
------------------------------------------------------------------
**opt_design ... cpu = 0:00:24, real = 0:00:24, mem = 1743.1M, totSessionCpu=0:06:57 **
*** BuildHoldData #1 [finish] (opt_design #2) : cpu/real = 0:00:11.1/0:00:11.2 (1.0), totSession cpu/real = 0:06:57.0/0:07:04.4 (1.0), mem = 2315.1M
*** HoldOpt #1 [begin] (opt_design #2) : totSession cpu/real = 0:06:57.0/0:07:04.4 (1.0), mem = 2315.1M
*info: Run opt_design holdfix with 1 thread.
Info: 14 nets with fixed/cover wires excluded.
Info: 14 clock nets excluded from IPO operation.
Info: Done creating the CCOpt slew target map.

*** Starting Core Fixing (fixHold) cpu=0:00:11.5 real=0:00:11.0 totSessionCpu=0:06:57 mem=2372.4M density=70.232% ***

Phase I ......
Executing transform: ECO Safe Resize
+----+--------+---------+--------+-----------+----------------+---------+------------+---------+
|Iter|  WNS   |  TNS    |  #VP   |  #Buffer  |  #Resize(F/F)  | Density |    Real    |   Mem   |
+----+--------+---------+--------+-----------+----------------+---------+------------+---------+
|   0|  -0.038|    -0.36|      12|          0|       0(     0)|   70.23%|   0:00:00.0|  2382.4M|
|   1|  -0.038|    -0.36|      12|          0|       0(     0)|   70.23%|   0:00:00.0|  2382.4M|
+----+--------+---------+--------+-----------+----------------+---------+------------+---------+
Executing transform: AddBuffer + LegalResize
+----+--------+---------+--------+-----------+----------------+---------+------------+---------+
|Iter|  WNS   |  TNS    |  #VP   |  #Buffer  |  #Resize(F/F)  | Density |    Real    |   Mem   |
+----+--------+---------+--------+-----------+----------------+---------+------------+---------+
|   0|  -0.038|    -0.36|      12|          0|       0(     0)|   70.23%|   0:00:00.0|  2382.4M|
|   1|   0.001|     0.00|       0|         12|       0(     0)|   70.27%|   0:00:00.0|  2414.0M|
+----+--------+---------+--------+-----------+----------------+---------+------------+---------+

*info:    Total 12 cells added for Phase I
*info:        in which 0 is ripple commits (0.000%)

*** Finished Core Fixing (fixHold) cpu=0:00:12.4 real=0:00:12.0 totSessionCpu=0:06:58 mem=2424.0M density=70.270% ***

*info:
*info: Added a total of 12 cells to fix/reduce hold violation
*info:
*info: Summary: 
*info:           12 cells of type 'DLY1X1' used

*** Starting place_detail (0:06:58 mem=2414.0M) ***
Total net bbox length = 3.012e+05 (1.528e+05 1.484e+05) (ext = 2.059e+03)
Move report: Detail placement moves 0 insts, mean move: 0.00 um, max move: 0.00 um 
	Runtime: CPU: 0:00:00.7 REAL: 0:00:01.0 MEM: 2402.9MB
Summary Report:
Instances move: 0 (out of 23777 movable)
Instances flipped: 0
Mean displacement: 0.00 um
Max displacement: 0.00 um 
Total net bbox length = 3.012e+05 (1.528e+05 1.484e+05) (ext = 2.059e+03)
Runtime: CPU: 0:00:00.7 REAL: 0:00:01.0 MEM: 2402.9MB
*** Finished place_detail (0:06:59 mem=2402.9M) ***
*** maximum move = 0.00 um ***
*** Finished re-routing un-routed nets (2398.9M) ***

*** Finish Physical Update (cpu=0:00:01.2 real=0:00:01.0 mem=2414.9M) ***
*** Finish Post CTS Hold Fixing (cpu=0:00:13.7 real=0:00:14.0 totSessionCpu=0:07:00 mem=2424.9M density=70.270%) ***
**INFO: total 22 insts, 24 nets marked don't touch
**INFO: total 22 insts, 24 nets marked don't touch DB property
**INFO: total 22 insts, 24 nets unmarked don't touch

*** HoldOpt #1 [finish] (opt_design #2) : cpu/real = 0:00:02.7/0:00:02.7 (1.0), totSession cpu/real = 0:06:59.7/0:07:07.0 (1.0), mem = 2329.8M
*** Steiner Routed Nets: 0.075%; Threshold: 100; Threshold for Hold: 100
Re-routed 0 nets
GigaOpt_HOLD: Recover setup timing after hold fixing
GigaOpt_HOLD: max_tran 0 => 0, max_cap 0 => 0 (threshold 10) - Skip drv recovery
OPTC: user 20.0
GigaOpt: WNS changes after routing: 0.000 -> 0.000 (bump = 0.0)
GigaOpt: WNS bump threshold: 0.00495
GigaOpt: Skipping postEco optimization
GigaOpt: WNS changes after postEco optimization: 0.000 -> 0.000 (bump = 0.0)
GigaOpt: Skipping nonLegal postEco optimization

Active setup views:
 func_default
  Dominating endpoints: 0
  Dominating TNS: -0.000

OPTC: user 20.0
OPTC: user 20.0
[NR-eGR] Track table information for default rule: 
[NR-eGR] Metal1 has single uniform track structure
[NR-eGR] Metal2 has single uniform track structure
[NR-eGR] Metal3 has single uniform track structure
[NR-eGR] Metal4 has single uniform track structure
[NR-eGR] Metal5 has single uniform track structure
[NR-eGR] Metal6 has single uniform track structure
[NR-eGR] Metal7 has single uniform track structure
[NR-eGR] Metal8 has single uniform track structure
[NR-eGR] Metal9 has single uniform track structure
[NR-eGR] Metal10 has single uniform track structure
[NR-eGR] Metal11 has single uniform track structure
[NR-eGR] Read 43156 PG shapes
[NR-eGR] Read 0 clock shapes
[NR-eGR] Read 0 other shapes
[NR-eGR] #Routing Blockages  : 0
[NR-eGR] #Instance Blockages : 0
[NR-eGR] #PG Blockages       : 43156
[NR-eGR] #Halo Blockages     : 0
[NR-eGR] #Boundary Blockages : 0
[NR-eGR] #Clock Blockages    : 0
[NR-eGR] #Other Blockages    : 0
[NR-eGR] Num Prerouted Nets = 14  Num Prerouted Wires = 3157
[NR-eGR] Read 32051 nets ( ignored 14 )
[NR-eGR] ============ Routing rule table ============
[NR-eGR] Rule id: 0  Nets: 32037
[NR-eGR] ========================================
[NR-eGR] 
[NR-eGR] Layer group 1: route 32037 net(s) in layer range [2, 11]
[NR-eGR] Early Global Route overflow of layer group 1: 0.00% H + 0.00% V. EstWL: 3.525233e+05um
[NR-eGR] Congestion Analysis By layer: (blocked Gcells are excluded) 
[NR-eGR]                        OverCon            
[NR-eGR]                         #Gcell     %Gcell
[NR-eGR]        Layer               (1)    OverCon
[NR-eGR] ----------------------------------------------
[NR-eGR]  Metal1 ( 1)         0( 0.00%)   ( 0.00%) 
[NR-eGR]  Metal2 ( 2)         6( 0.01%)   ( 0.01%) 
[NR-eGR]  Metal3 ( 3)         1( 0.00%)   ( 0.00%) 
[NR-eGR]  Metal4 ( 4)         0( 0.00%)   ( 0.00%) 
[NR-eGR]  Metal5 ( 5)         0( 0.00%)   ( 0.00%) 
[NR-eGR]  Metal6 ( 6)         0( 0.00%)   ( 0.00%) 
[NR-eGR]  Metal7 ( 7)         0( 0.00%)   ( 0.00%) 
[NR-eGR]  Metal8 ( 8)         0( 0.00%)   ( 0.00%) 
[NR-eGR]  Metal9 ( 9)         0( 0.00%)   ( 0.00%) 
[NR-eGR] Metal10 (10)         0( 0.00%)   ( 0.00%) 
[NR-eGR] Metal11 (11)         0( 0.00%)   ( 0.00%) 
[NR-eGR] ----------------------------------------------
[NR-eGR]        Total         7( 0.00%)   ( 0.00%) 
[NR-eGR] 
[NR-eGR] Overflow after Early Global Route 0.00% H + 0.00% V
[NR-eGR] Finished Early Global Route kernel ( CPU: 0.49 sec, Real: 0.81 sec, Curr Mem: 2367.96 MB )
[hotspot] +------------+---------------+---------------+
[hotspot] |            |   max hotspot | total hotspot |
[hotspot] +------------+---------------+---------------+
[hotspot] | normalized |          0.00 |          0.00 |
[hotspot] +------------+---------------+---------------+
Local HotSpot Analysis: normalized max congestion hotspot area = 0.00, normalized total congestion hotspot area = 0.00 (area is in unit of 4 std-cell row bins)
[hotspot] Hotspot report including placement blocked areas
[hotspot] +------------+---------------+---------------+
[hotspot] |            |   max hotspot | total hotspot |
[hotspot] +------------+---------------+---------------+
[hotspot] | normalized |          0.00 |          0.00 |
[hotspot] +------------+---------------+---------------+
Local HotSpot Analysis (blockage included): normalized max congestion hotspot area = 0.00, normalized total congestion hotspot area = 0.00 (area is in unit of 4 std-cell row bins)
Reported timing to dir reports/STA
**opt_design ... cpu = 0:00:28, real = 0:00:29, mem = 1709.9M, totSessionCpu=0:07:02 **
Starting delay calculation for Hold views
AAE_INFO: opIsDesignInPostRouteState() is 0
#################################################################################
# Design Stage: PreRoute
# Design Name: filter_top
# Design Mode: 45nm
# Analysis Mode: MMMC Non-OCV 
# Parasitics Mode: No SPEF/RCDB 
# Signoff Settings: SI Off 
#################################################################################
Calculate delays in Single mode...
Start delay calculation (fullDC) (1 T). (MEM=2300.46)
Total number of fetched objects 32145
AAE_INFO: Total number of nets for which stage creation was skipped for all views 0
End delay calculation. (MEM=2327.67 CPU=0:00:03.7 REAL=0:00:04.0)
End delay calculation (fullDC). (MEM=2327.67 CPU=0:00:04.4 REAL=0:00:04.0)
*** Done Building Timing Graph (cpu=0:00:04.8 real=0:00:04.0 totSessionCpu=0:07:07 mem=2327.7M)
Starting delay calculation for Setup views
AAE_INFO: opIsDesignInPostRouteState() is 0
#################################################################################
# Design Stage: PreRoute
# Design Name: filter_top
# Design Mode: 45nm
# Analysis Mode: MMMC Non-OCV 
# Parasitics Mode: No SPEF/RCDB 
# Signoff Settings: SI Off 
#################################################################################
Calculate delays in Single mode...
Start delay calculation (fullDC) (1 T). (MEM=2272.18)
Total number of fetched objects 32145
AAE_INFO: Total number of nets for which stage creation was skipped for all views 0
End delay calculation. (MEM=2331.39 CPU=0:00:03.7 REAL=0:00:04.0)
End delay calculation (fullDC). (MEM=2331.39 CPU=0:00:04.3 REAL=0:00:04.0)
*** Done Building Timing Graph (cpu=0:00:04.8 real=0:00:05.0 totSessionCpu=0:07:13 mem=2331.4M)

------------------------------------------------------------------
     opt_design Final Summary
------------------------------------------------------------------

Setup views included:
 func_default 
Hold views included:
 func_default

+--------------------+---------+---------+---------+
|     Setup mode     |   all   | reg2reg | default |
+--------------------+---------+---------+---------+
|           WNS (ns):|  0.336  |  0.336  |  1.906  |
|           TNS (ns):|  0.000  |  0.000  |  0.000  |
|    Violating Paths:|    0    |    0    |    0    |
|          All Paths:|  1189   |  1165   |   24    |
+--------------------+---------+---------+---------+

+--------------------+---------+---------+---------+
|     Hold mode      |   all   | reg2reg | default |
+--------------------+---------+---------+---------+
|           WNS (ns):|  0.001  |  0.054  |  0.001  |
|           TNS (ns):|  0.000  |  0.000  |  0.000  |
|    Violating Paths:|    0    |    0    |    0    |
|          All Paths:|  1189   |  1165   |   24    |
+--------------------+---------+---------+---------+

+----------------+-------------------------------+------------------+
|                |              Real             |       Total      |
|    DRVs        +------------------+------------+------------------|
|                |  Nr nets(terms)  | Worst Vio  |  Nr nets(terms)  |
+----------------+------------------+------------+------------------+
|   max_cap      |      0 (0)       |   0.000    |      0 (0)       |
|   max_tran     |      0 (0)       |   0.000    |      0 (0)       |
|   max_fanout   |      0 (0)       |     0      |      0 (0)       |
|   max_length   |      0 (0)       |     0      |      0 (0)       |
+----------------+------------------+------------+------------------+

Density: 70.270%
Routing Overflow: 0.00% H and 0.00% V
------------------------------------------------------------------
**opt_design ... cpu = 0:00:41, real = 0:00:42, mem = 1741.8M, totSessionCpu=0:07:14 **
*** Finished opt_design ***
      flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:*                                       0.000 ns          0.336 ns  final
UM: Running design category ...
------------------------------------------------------------
	Current design flip-flop statistics

Single-Bit FF Count          :         1198
Multi-Bit FF Count           :            0
Total Bit Count              :         1198
Total FF Count               :         1198
Bits Per Flop                :        1.000
Total Clock Pin Cap(FF)      :      352.216
Multibit Conversion Ratio(%) :         0.00
------------------------------------------------------------
------------------------------------------------------------
            Multi-bit cell usage statistics

------------------------------------------------------------
============================================================
Sequential Multibit cells usage statistics
------------------------------------------------------------
            Not Merged-bits         Merged-bits     Multibit Conversion %     Bits Per Flop
------------------------------------------------------------
-FlipFlops             1198                    0        0.00                    1.00
------------------------------------------------------------

------------------------------------------------------------
Seq_Mbit libcell              Bitwidth        Count
------------------------------------------------------------
Total 0
============================================================
------------------------------------------------------------
Category            Num of Insts Rejected     Reasons
------------------------------------------------------------
------------------------------------------------------------
      flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:          43.69             45          0.000 ns          0.336 ns  opt_design_postcts_hold
Info: Destroy the CCOpt slew target map.
*** opt_design #2 [finish] : cpu/real = 0:00:41.8/0:00:43.0 (1.0), totSession cpu/real = 0:07:15.1/0:07:23.5 (1.0), mem = 2306.6M
@@file 102: time_design -post_cts -hold -report_dir reports/STA
*** time_design #4 [begin] : totSession cpu/real = 0:07:15.1/0:07:23.5 (1.0), mem = 2306.6M
Start to check current routing status for nets...
All nets are already routed correctly.
End to check current routing status for nets (mem=2219.0M)
OPTC: user 20.0
Starting delay calculation for Hold views
AAE_INFO: opIsDesignInPostRouteState() is 0
#################################################################################
# Design Stage: PreRoute
# Design Name: filter_top
# Design Mode: 45nm
# Analysis Mode: MMMC Non-OCV 
# Parasitics Mode: No SPEF/RCDB 
# Signoff Settings: SI Off 
#################################################################################
Calculate delays in Single mode...
Start delay calculation (fullDC) (1 T). (MEM=2223.07)
Total number of fetched objects 32145
AAE_INFO: Total number of nets for which stage creation was skipped for all views 0
End delay calculation. (MEM=2266.27 CPU=0:00:03.8 REAL=0:00:04.0)
End delay calculation (fullDC). (MEM=2266.27 CPU=0:00:04.5 REAL=0:00:05.0)
*** Done Building Timing Graph (cpu=0:00:05.0 real=0:00:05.0 totSessionCpu=0:07:21 mem=2266.3M)

------------------------------------------------------------------
         time_design Summary
------------------------------------------------------------------

Hold views included:
 func_default 

+--------------------+---------+---------+---------+
|     Hold mode      |   all   | reg2reg | default |
+--------------------+---------+---------+---------+
|           WNS (ns):|  0.001  |  0.054  |  0.001  |
|           TNS (ns):|  0.000  |  0.000  |  0.000  |
|    Violating Paths:|    0    |    0    |    0    |
|          All Paths:|  1189   |  1165   |   24    |
+--------------------+---------+---------+---------+

Density: 70.270%
Routing Overflow: 0.00% H and 0.00% V
------------------------------------------------------------------
Reported timing to dir reports/STA
Total CPU time: 6.41 sec
Total Real time: 6.0 sec
Total Memory Usage: 2203.777344 Mbytes
*** time_design #4 [finish] : cpu/real = 0:00:06.4/0:00:06.4 (1.0), totSession cpu/real = 0:07:21.5/0:07:29.9 (1.0), mem = 2203.8M
@file 103:
@file 104: #-----------------------------------------------------------------------
@file 105: ## Global and Detail routing
@file 106: #-----------------------------------------------------------------------
@file 107:
@@file 108: assign_io_pins
#% Begin assign_io_pins (date=12/07 19:16:01, mem=1607.4M)
Starting IO pin assignment...
#% End assign_io_pins (date=12/07 19:16:01, total cpu=0:00:00.0, real=0:00:01.0, peak res=1607.5M, current mem=1607.5M)
@file 109:
@@file 110: route_design
#% Begin route_design (date=12/07 19:16:02, mem=1607.5M)
#route_design: cpu time = 00:00:00, elapsed time = 00:00:00, memory = 1607.53 (MB), peak = 2092.79 (MB)
AAE_INFO: Pre Route call back at the beginning of routeDesign
#**INFO: setDesignMode -flowEffort standard
#**INFO: setDesignMode -powerEffort none
**INFO: User settings:
delaycal_default_net_delay                                   1000ps
delaycal_default_net_load                                    0.5pf
delaycal_enable_high_fanout                                  true
delaycal_ignore_net_load                                     false
delaycal_input_transition_delay                              0.1ps
delaycal_socv_accuracy_mode                                  low
delaycal_use_default_delay_limit                             1000
setAnalysisMode -cts                                         postCTS
setAnalysisMode -skew                                        true
setDelayCalMode -engine                                      aae
design_bottom_routing_layer                                  Metal2
design_process_node                                          45
extract_rc_coupling_cap_threshold                            0.1
extract_rc_engine                                            pre_route
extract_rc_layer_independent                                 1
extract_rc_relative_cap_threshold                            1.0
extract_rc_total_cap_threshold                               0.0
route_design_extract_third_party_compatible                  false
route_design_global_exp_timing_driven_std_delay              9.9
getAnalysisMode -cts                                         postCTS
getAnalysisMode -skew                                        true
getDelayCalMode -engine                                      aae
get_power_analysis_mode -report_power_quiet                  false
getAnalysisMode -cts                                         postCTS
getAnalysisMode -skew                                        true
#**INFO: multi-cut via swapping will be performed after routing.
#**INFO: All auto set options tuned by route_design will be restored to their original settings on command completion.
Begin checking placement ... (start mem=2203.8M, init mem=2203.8M)
*info: Placed = 23790          (Fixed = 13)
*info: Unplaced = 0           
Placement Density:70.27%(69091/98323)
Placement Density (including fixed std cells):70.27%(69091/98323)
Finished check_place (total: cpu=0:00:00.3, real=0:00:00.0; vio checks: cpu=0:00:00.2, real=0:00:00.0; mem=2203.8M)

changeUseClockNetStatus Option :  -noFixedNetWires 
*** Changed status on (14) nets in Clock.
*** End changeUseClockNetStatus (cpu=0:00:00.0, real=0:00:00.0, mem=2203.8M) ***
#Start route 14 clock and analog nets...

route_global_detail

#Start route_global_detail on Thu Dec  7 19:16:11 2023
#
Skipped RC grid update for preRoute extraction.
Initializing multi-corner resistance tables ...
#WARNING (NRIG-1303) The congestion map does not match the GCELL grid. Clearing the map.
#num needed restored net=32201
#need_extraction net=0 (total=32215)
#NanoRoute Version 21.18-s099_1 NR230707-1955/21_18-UB
#Skip comparing routing design signature in db-snapshot flow
#Total number of trivial nets (e.g. < 2 pins) = 164 (skipped).
#Total number of nets with skipped attribute = 32037 (skipped).
#Total number of routable nets = 14.
#Total number of nets in the design = 32215.
#14 routable nets have routed wires.
#32037 skipped nets have only detail routed wires.
#14 detail routed (routable) nets have been constrained (e.g. have preferred extra spacing, require shielding etc.)
#No nets have been global routed.
#Start routing data preparation on Thu Dec  7 19:16:12 2023
#
#Minimum voltage of a net in the design = 0.000.
#Maximum voltage of a net in the design = 1.000.
#Voltage range [0.000 - 1.000] has 32213 nets.
#Voltage range [1.000 - 1.000] has 1 net.
#Voltage range [0.000 - 0.000] has 1 net.
#Build and mark too close pins for the same net.
#Rebuild pin access data for design.
#Initial pin access analysis.
#Detail pin access analysis.
# Metal1       H   Track-Pitch = 0.19000    Line-2-Via Pitch = 0.13000
# Metal2       V   Track-Pitch = 0.20000    Line-2-Via Pitch = 0.15000
# Metal3       H   Track-Pitch = 0.19000    Line-2-Via Pitch = 0.15000
# Metal4       V   Track-Pitch = 0.20000    Line-2-Via Pitch = 0.15000
# Metal5       H   Track-Pitch = 0.19000    Line-2-Via Pitch = 0.15000
# Metal6       V   Track-Pitch = 0.20000    Line-2-Via Pitch = 0.15000
# Metal7       H   Track-Pitch = 0.19000    Line-2-Via Pitch = 0.15000
# Metal8       V   Track-Pitch = 0.20000    Line-2-Via Pitch = 0.15000
# Metal9       H   Track-Pitch = 0.19000    Line-2-Via Pitch = 0.15000
# Metal10      V   Track-Pitch = 0.50000    Line-2-Via Pitch = 0.42000
# Metal11      H   Track-Pitch = 0.47500    Line-2-Via Pitch = 0.43000
#Bottom routing layer index=2(Metal2), bottom routing layer for shielding=2(Metal2), bottom shield layer=2(Metal2)
#shield_bottom_stripe_layer=1(Metal1), shield_top_stripe_layer=11(Metal11)
#pin_access_rlayer=2(Metal2)
#shield_top_dpt_rlayer=-1 top_rlayer=11 top_trim_metal_rlayer=-1 rlayer_lowest=1 bottom_rlayer=2
#enable_trim_layer_shield=F enable_dpt_layer_shield=F has_line_end_grid=F
#cpu time = 00:00:00, elapsed time = 00:00:00, memory = 1616.43 (MB), peak = 2092.79 (MB)
#Regenerating Ggrids automatically.
#Auto generating G-grids with size=15 tracks, using layer Metal3's pitch = 0.19000.
#Using automatically generated G-grids.
#Done routing data preparation.
#cpu time = 00:00:04, elapsed time = 00:00:04, memory = 1628.88 (MB), peak = 2092.79 (MB)
#Minimum voltage of a net in the design = 0.000.
#Maximum voltage of a net in the design = 1.000.
#Voltage range [0.000 - 1.000] has 32213 nets.
#Voltage range [1.000 - 1.000] has 1 net.
#Voltage range [0.000 - 0.000] has 1 net.
#
#Finished routing data preparation on Thu Dec  7 19:16:16 2023
#
#Cpu time = 00:00:04
#Elapsed time = 00:00:04
#Increased memory = 19.86 (MB)
#Total memory = 1628.94 (MB)
#Peak memory = 2092.79 (MB)
#
#
#Start global routing on Thu Dec  7 19:16:16 2023
#
#
#Start global routing initialization on Thu Dec  7 19:16:16 2023
#
#WARNING (NRGR-22) Design is already detail routed.
#Minimum voltage of a net in the design = 0.000.
#Maximum voltage of a net in the design = 1.000.
#Voltage range [0.000 - 1.000] has 32213 nets.
#Voltage range [1.000 - 1.000] has 1 net.
#Voltage range [0.000 - 0.000] has 1 net.
#Minimum voltage of a net in the design = 0.000.
#Maximum voltage of a net in the design = 1.000.
#Voltage range [0.000 - 1.000] has 32213 nets.
#Voltage range [1.000 - 1.000] has 1 net.
#Voltage range [0.000 - 0.000] has 1 net.
#Routing data preparation, pin analysis, global routing and track assignment statistics:
#Cpu time = 00:00:04
#Elapsed time = 00:00:04
#Increased memory = 19.89 (MB)
#Total memory = 1628.97 (MB)
#Peak memory = 2092.79 (MB)
#Minimum voltage of a net in the design = 0.000.
#Maximum voltage of a net in the design = 1.000.
#Voltage range [0.000 - 1.000] has 32213 nets.
#Voltage range [1.000 - 1.000] has 1 net.
#Voltage range [0.000 - 0.000] has 1 net.
#Minimum voltage of a net in the design = 0.000.
#Maximum voltage of a net in the design = 1.000.
#Voltage range [0.000 - 1.000] has 32213 nets.
#Voltage range [1.000 - 1.000] has 1 net.
#Voltage range [0.000 - 0.000] has 1 net.
#Minimum voltage of a net in the design = 0.000.
#Maximum voltage of a net in the design = 1.000.
#Voltage range [0.000 - 1.000] has 32213 nets.
#Voltage range [1.000 - 1.000] has 1 net.
#Voltage range [0.000 - 0.000] has 1 net.
#Minimum voltage of a net in the design = 0.000.
#Maximum voltage of a net in the design = 1.000.
#Voltage range [0.000 - 1.000] has 32213 nets.
#Voltage range [1.000 - 1.000] has 1 net.
#Voltage range [0.000 - 0.000] has 1 net.
#
#Start Detail Routing..
#start initial detail routing ...
# ECO: 50.34% of the total area was rechecked for DRC, and 0.00% required routing.
#   number of violations = 0
#7248 out of 23790 instances (30.5%) need to be verified(marked ipoed), dirty area = 10.8%.
#   number of violations = 0
#cpu time = 00:00:10, elapsed time = 00:00:10, memory = 1635.48 (MB), peak = 2092.79 (MB)
#Complete Detail Routing.
#Total number of nets with non-default rule or having extra spacing = 14
#Total wire length = 5392 um.
#Total half perimeter of net bounding box = 2400 um.
#Total wire length on LAYER Metal1 = 0 um.
#Total wire length on LAYER Metal2 = 515 um.
#Total wire length on LAYER Metal3 = 2808 um.
#Total wire length on LAYER Metal4 = 1981 um.
#Total wire length on LAYER Metal5 = 86 um.
#Total wire length on LAYER Metal6 = 2 um.
#Total wire length on LAYER Metal7 = 0 um.
#Total wire length on LAYER Metal8 = 0 um.
#Total wire length on LAYER Metal9 = 0 um.
#Total wire length on LAYER Metal10 = 0 um.
#Total wire length on LAYER Metal11 = 0 um.
#Total number of vias = 3083
#Up-Via Summary (total 3083):
#           
#-----------------------
# Metal1           1159
# Metal2           1082
# Metal3            827
# Metal4             13
# Metal5              2
#-----------------------
#                  3083 
#
#Total number of DRC violations = 0
#Cpu time = 00:00:10
#Elapsed time = 00:00:11
#Increased memory = 6.51 (MB)
#Total memory = 1635.48 (MB)
#Peak memory = 2092.79 (MB)
#route_detail Statistics:
#Cpu time = 00:00:10
#Elapsed time = 00:00:11
#Increased memory = 6.52 (MB)
#Total memory = 1635.49 (MB)
#Peak memory = 2092.79 (MB)
#Skip updating routing design signature in db-snapshot flow
#
#route_global_detail statistics:
#Cpu time = 00:00:15
#Elapsed time = 00:00:16
#Increased memory = 19.27 (MB)
#Total memory = 1627.10 (MB)
#Peak memory = 2092.79 (MB)
#Number of warnings = 2
#Total number of warnings = 2
#Number of fails = 0
#Total number of fails = 0
#Complete route_global_detail on Thu Dec  7 19:16:26 2023
#
#**INFO: auto set of droutePostRouteSwapVia to multiCut

route_global_detail

#Start route_global_detail on Thu Dec  7 19:16:26 2023
#
#Generating timing data, please wait...
#32145 total nets, 14 already routed, 14 will ignore in trialRoute
#View pruning: cpu time = 00:00:00, elapsed time = 00:00:00, memory = 1624.22 (MB), peak = 2092.79 (MB)
#Reporting timing...
###############################################################
#  Generated by:      Cadence Innovus 21.18-s099_1
#  OS:                Linux x86_64(Host ID arc-schaumont-class-vm)
#  Generated on:      Thu Dec  7 19:16:34 2023
#  Design:            filter_top
#  Command:           route_design
###############################################################
#Normalized TNS: 0.000 -> 0.000, r2r 0.000 -> 0.000, unit 1000.000, clk period 2.000 (ns)
#Stage 1: cpu time = 00:00:07, elapsed time = 00:00:07, memory = 1676.94 (MB), peak = 2092.79 (MB)
#Library Standard Delay: 9.90ps
#Slack threshold: 19.80ps
#*** Analyzed 0 timing critical paths, and collected 0.
#Stage 2: cpu time = 00:00:01, elapsed time = 00:00:01, memory = 1676.99 (MB), peak = 2092.79 (MB)
#Stage 3: cpu time = 00:00:01, elapsed time = 00:00:01, memory = 1684.79 (MB), peak = 2092.79 (MB)
#Default setup view is reset to func_default.
#Stage 4: cpu time = 00:00:00, elapsed time = 00:00:00, memory = 1684.80 (MB), peak = 2092.79 (MB)
#Current view: func_default 
#Current enabled view: func_default 
#Generating timing data took: cpu time = 00:00:09, elapsed time = 00:00:09, memory = 1684.04 (MB), peak = 2092.79 (MB)
#Done generating timing data.
#WARNING (NRIG-1303) The congestion map does not match the GCELL grid. Clearing the map.
#num needed restored net=0
#need_extraction net=0 (total=32215)
#NanoRoute Version 21.18-s099_1 NR230707-1955/21_18-UB
#Start routing data preparation on Thu Dec  7 19:16:37 2023
#
#Minimum voltage of a net in the design = 0.000.
#Maximum voltage of a net in the design = 1.000.
#Voltage range [0.000 - 1.000] has 32213 nets.
#Voltage range [1.000 - 1.000] has 1 net.
#Voltage range [0.000 - 0.000] has 1 net.
#Build and mark too close pins for the same net.
#Initial pin access analysis.
#Detail pin access analysis.
# Metal1       H   Track-Pitch = 0.19000    Line-2-Via Pitch = 0.13000
# Metal2       V   Track-Pitch = 0.20000    Line-2-Via Pitch = 0.15000
# Metal3       H   Track-Pitch = 0.19000    Line-2-Via Pitch = 0.15000
# Metal4       V   Track-Pitch = 0.20000    Line-2-Via Pitch = 0.15000
# Metal5       H   Track-Pitch = 0.19000    Line-2-Via Pitch = 0.15000
# Metal6       V   Track-Pitch = 0.20000    Line-2-Via Pitch = 0.15000
# Metal7       H   Track-Pitch = 0.19000    Line-2-Via Pitch = 0.15000
# Metal8       V   Track-Pitch = 0.20000    Line-2-Via Pitch = 0.15000
# Metal9       H   Track-Pitch = 0.19000    Line-2-Via Pitch = 0.15000
# Metal10      V   Track-Pitch = 0.50000    Line-2-Via Pitch = 0.42000
# Metal11      H   Track-Pitch = 0.47500    Line-2-Via Pitch = 0.43000
#Bottom routing layer index=2(Metal2), bottom routing layer for shielding=2(Metal2), bottom shield layer=2(Metal2)
#shield_bottom_stripe_layer=1(Metal1), shield_top_stripe_layer=11(Metal11)
#pin_access_rlayer=2(Metal2)
#shield_top_dpt_rlayer=-1 top_rlayer=11 top_trim_metal_rlayer=-1 rlayer_lowest=1 bottom_rlayer=2
#enable_trim_layer_shield=F enable_dpt_layer_shield=F has_line_end_grid=F
#cpu time = 00:00:00, elapsed time = 00:00:00, memory = 1689.82 (MB), peak = 2092.79 (MB)
#Regenerating Ggrids automatically.
#Auto generating G-grids with size=15 tracks, using layer Metal3's pitch = 0.19000.
#Using automatically generated G-grids.
#Done routing data preparation.
#cpu time = 00:00:02, elapsed time = 00:00:02, memory = 1694.39 (MB), peak = 2092.79 (MB)
#
#Summary of active signal nets routing constraints set by OPT:
#	preferred routing layers      : 0
#	preferred routing layer effort: 0
#	preferred extra space         : 0
#	preferred multi-cut via       : 0
#	avoid detour                  : 0
#	expansion ratio               : 0
#	net priority                  : 0
#	s2s control                   : 0
#	avoid chaining                : 0
#	inst-based stacking via       : 0
#
#Summary of active signal nets routing constraints set by USER:
#	preferred routing layers      : 0
#	preferred routing layer effort     : 0
#	preferred extra space              : 0
#	preferred multi-cut via            : 0
#	avoid detour                       : 0
#	net weight                         : 0
#	avoid chaining                     : 0
#	cell-based stacking via (required) : 0
#	cell-based stacking via (optional) : 0
#
#Start timing driven prevention iteration...
#
#----------------------------------------------------
# Summary of active signal nets routing constraints
#+--------------------------+-----------+
#+--------------------------+-----------+
#
#----------------------------------------------------
#Done timing-driven prevention
#cpu time = 00:00:00, elapsed time = 00:00:00, memory = 1697.40 (MB), peak = 2092.79 (MB)
#Total number of trivial nets (e.g. < 2 pins) = 164 (skipped).
#Total number of routable nets = 32051.
#Total number of nets in the design = 32215.
#32037 routable nets do not have any wires.
#14 routable nets have routed wires.
#32037 nets will be global routed.
#14 detail routed (routable) nets have been constrained (e.g. have preferred extra spacing, require shielding etc.)
#Minimum voltage of a net in the design = 0.000.
#Maximum voltage of a net in the design = 1.000.
#Voltage range [0.000 - 1.000] has 32213 nets.
#Voltage range [1.000 - 1.000] has 1 net.
#Voltage range [0.000 - 0.000] has 1 net.
#Minimum voltage of a net in the design = 0.000.
#Maximum voltage of a net in the design = 1.000.
#Voltage range [0.000 - 1.000] has 32213 nets.
#Voltage range [1.000 - 1.000] has 1 net.
#Voltage range [0.000 - 0.000] has 1 net.
#
#Finished routing data preparation on Thu Dec  7 19:16:39 2023
#
#Cpu time = 00:00:00
#Elapsed time = 00:00:00
#Increased memory = 0.05 (MB)
#Total memory = 1697.68 (MB)
#Peak memory = 2092.79 (MB)
#
#
#Start global routing on Thu Dec  7 19:16:39 2023
#
#
#Start global routing initialization on Thu Dec  7 19:16:39 2023
#
#Number of eco nets is 0
#
#Start global routing data preparation on Thu Dec  7 19:16:39 2023
#
#Start routing resource analysis on Thu Dec  7 19:16:39 2023
#
#Routing resource analysis is done on Thu Dec  7 19:16:39 2023
#
#  Resource Analysis:
#
#               Routing  #Avail      #Track     #Total     %Gcell
#  Layer      Direction   Track     Blocked      Gcell    Blocked
#  --------------------------------------------------------------
#  Metal2         V        1421         350       15376     1.80%
#  Metal3         H        1737         122       15376     0.00%
#  Metal4         V        1422         349       15376     1.80%
#  Metal5         H        1751         108       15376     0.00%
#  Metal6         V        1429         342       15376     1.80%
#  Metal7         H        1752         107       15376     0.00%
#  Metal8         V        1231         540       15376     4.66%
#  Metal9         H        1259         600       15376    15.40%
#  Metal10        V         708           0       15376     0.00%
#  Metal11        H         743           0       15376     0.00%
#  --------------------------------------------------------------
#  Total                  13454      13.96%      153760     2.54%
#
#  14 nets (0.04%) with 1 preferred extra spacing.
#
#
#
#Global routing data preparation is done on Thu Dec  7 19:16:39 2023
#
#cpu time = 00:00:00, elapsed time = 00:00:00, memory = 1701.66 (MB), peak = 2092.79 (MB)
#
#
#Global routing initialization is done on Thu Dec  7 19:16:39 2023
#
#cpu time = 00:00:00, elapsed time = 00:00:00, memory = 1701.72 (MB), peak = 2092.79 (MB)
#
#Skip 1/3 round for no nets in the round...
#Skip 2/3 round for no nets in the round...
#Route nets in 3/3 round...
#start global routing iteration 1...
#cpu time = 00:00:25, elapsed time = 00:00:25, memory = 1765.97 (MB), peak = 2092.79 (MB)
#
#start global routing iteration 2...
#cpu time = 00:00:05, elapsed time = 00:00:05, memory = 1766.38 (MB), peak = 2092.79 (MB)
#
#
#Total number of trivial nets (e.g. < 2 pins) = 164 (skipped).
#Total number of routable nets = 32051.
#Total number of nets in the design = 32215.
#
#32051 routable nets have routed wires.
#14 detail routed (routable) nets have been constrained (e.g. have preferred extra spacing, require shielding etc.)
#
#Routed nets constraints summary:
#-----------------------------
#        Rules   Unconstrained  
#-----------------------------
#      Default           32037  
#-----------------------------
#        Total           32037  
#-----------------------------
#
#Routing constraints summary of the whole design:
#------------------------------------------------
#        Rules   Pref Extra Space   Unconstrained  
#------------------------------------------------
#      Default                 14           32037  
#------------------------------------------------
#        Total                 14           32037  
#------------------------------------------------
#
#
#  Congestion Analysis: (blocked Gcells are excluded)
#
#                 OverCon       OverCon       OverCon       OverCon          
#                  #Gcell        #Gcell        #Gcell        #Gcell    %Gcell
#     Layer         (1-2)         (3-4)         (5-6)           (7)   OverCon
#  --------------------------------------------------------------------------
#  Metal2      637(4.14%)     93(0.60%)      2(0.01%)      1(0.01%)   (4.77%)
#  Metal3       19(0.12%)      1(0.01%)      0(0.00%)      0(0.00%)   (0.13%)
#  Metal4        0(0.00%)      0(0.00%)      0(0.00%)      0(0.00%)   (0.00%)
#  Metal5        0(0.00%)      0(0.00%)      0(0.00%)      0(0.00%)   (0.00%)
#  Metal6        0(0.00%)      0(0.00%)      0(0.00%)      0(0.00%)   (0.00%)
#  Metal7        0(0.00%)      0(0.00%)      0(0.00%)      0(0.00%)   (0.00%)
#  Metal8        0(0.00%)      0(0.00%)      0(0.00%)      0(0.00%)   (0.00%)
#  Metal9        0(0.00%)      0(0.00%)      0(0.00%)      0(0.00%)   (0.00%)
#  Metal10       0(0.00%)      0(0.00%)      0(0.00%)      0(0.00%)   (0.00%)
#  Metal11       0(0.00%)      0(0.00%)      0(0.00%)      0(0.00%)   (0.00%)
#  --------------------------------------------------------------------------
#     Total    656(0.44%)     94(0.06%)      2(0.00%)      1(0.00%)   (0.50%)
#
#  The worst congested Gcell overcon (routing demand over resource in number of tracks) = 7
#  Overflow after GR: 0.01% H + 0.49% V
#
#Hotspot report including placement blocked areas
[hotspot] +----------------+-------------------+-------------------+-------------------------------------+
[hotspot] |      layer     |    max hotspot    |   total hotspot   |            hotspot bbox             |
[hotspot] +----------------+-------------------+-------------------+-------------------------------------+
[hotspot] |   Metal2(V)    |              2.00 |             14.00 |   129.96   225.72   136.80   239.40 |
[hotspot] |   Metal3(H)    |              0.00 |              0.00 |   (none)                            |
[hotspot] |   Metal4(V)    |              0.00 |              0.00 |   (none)                            |
[hotspot] |   Metal5(H)    |              0.00 |              0.00 |   (none)                            |
[hotspot] |   Metal6(V)    |              0.00 |              0.00 |   (none)                            |
[hotspot] |   Metal7(H)    |              0.00 |              0.00 |   (none)                            |
[hotspot] |   Metal8(V)    |              0.00 |              0.00 |   (none)                            |
[hotspot] |   Metal9(H)    |              0.00 |              0.00 |   (none)                            |
[hotspot] |  Metal10(V)    |              0.00 |              0.00 |   (none)                            |
[hotspot] |  Metal11(H)    |              0.00 |              0.00 |   (none)                            |
[hotspot] +----------------+-------------------+-------------------+-------------------------------------+
[hotspot] |      worst     | (Metal2)     2.00 | (Metal2)    14.00 |                                     |
[hotspot] +----------------+-------------------+-------------------+-------------------------------------+
[hotspot] |   all layers   |              0.00 |              0.00 |                                     |
[hotspot] +----------------+-------------------+-------------------+-------------------------------------+
Local HotSpot Analysis (blockage included) (3d): normalized congestion max/total hotspot area = 0.00/0.00 (area is in unit of 4 std-cell row bins)
#Complete Global Routing.
#Total number of nets with non-default rule or having extra spacing = 14
#Total wire length = 361821 um.
#Total half perimeter of net bounding box = 347219 um.
#Total wire length on LAYER Metal1 = 0 um.
#Total wire length on LAYER Metal2 = 82415 um.
#Total wire length on LAYER Metal3 = 146733 um.
#Total wire length on LAYER Metal4 = 83805 um.
#Total wire length on LAYER Metal5 = 41668 um.
#Total wire length on LAYER Metal6 = 7095 um.
#Total wire length on LAYER Metal7 = 105 um.
#Total wire length on LAYER Metal8 = 0 um.
#Total wire length on LAYER Metal9 = 0 um.
#Total wire length on LAYER Metal10 = 0 um.
#Total wire length on LAYER Metal11 = 0 um.
#Total number of vias = 168292
#Up-Via Summary (total 168292):
#           
#-----------------------
# Metal1          86740
# Metal2          60379
# Metal3          16653
# Metal4           4137
# Metal5            381
# Metal6              2
#-----------------------
#                168292 
#
#Total number of involved regular nets 2017
#Maximum src to sink distance  525.2
#Average of max src_to_sink distance  57.6
#Average of ave src_to_sink distance  36.2
#Max overcon = 7 tracks.
#Total overcon = 0.50%.
#Worst layer Gcell overcon rate = 0.13%.
#
#Global routing statistics:
#Cpu time = 00:00:31
#Elapsed time = 00:00:31
#Increased memory = 67.82 (MB)
#Total memory = 1765.49 (MB)
#Peak memory = 2092.79 (MB)
#
#Finished global routing on Thu Dec  7 19:17:10 2023
#
#
#Minimum voltage of a net in the design = 0.000.
#Maximum voltage of a net in the design = 1.000.
#Voltage range [0.000 - 1.000] has 32213 nets.
#Voltage range [1.000 - 1.000] has 1 net.
#Voltage range [0.000 - 0.000] has 1 net.
#Minimum voltage of a net in the design = 0.000.
#Maximum voltage of a net in the design = 1.000.
#Voltage range [0.000 - 1.000] has 32213 nets.
#Voltage range [1.000 - 1.000] has 1 net.
#Voltage range [0.000 - 0.000] has 1 net.
#cpu time = 00:00:00, elapsed time = 00:00:00, memory = 1763.26 (MB), peak = 2092.79 (MB)
#Minimum voltage of a net in the design = 0.000.
#Maximum voltage of a net in the design = 1.000.
#Voltage range [0.000 - 1.000] has 32213 nets.
#Voltage range [1.000 - 1.000] has 1 net.
#Voltage range [0.000 - 0.000] has 1 net.
#Start Track Assignment.
#Done with 41641 horizontal wires in 4 hboxes and 34630 vertical wires in 4 hboxes.
#Done with 9904 horizontal wires in 4 hboxes and 8727 vertical wires in 4 hboxes.
#Done with 4 horizontal wires in 4 hboxes and 4 vertical wires in 4 hboxes.
#
#Track assignment summary:
# layer   (wire length)   (overlap)     (long ovlp)	(with obs/pg/clk)  
#------------------------------------------------------------------------
# Metal2     80310.77 	  0.10%  	  0.00% 	  0.00%
# Metal3    141633.35 	  0.21%  	  0.00% 	  0.01%
# Metal4     80575.22 	  0.03%  	  0.00% 	  0.00%
# Metal5     41615.91 	  0.00%  	  0.00% 	  0.00%
# Metal6      7064.71 	  0.00%  	  0.00% 	  0.00%
# Metal7       105.53 	  0.00%  	  0.00% 	  0.00%
# Metal8         0.00 	  0.00%  	  0.00% 	  0.00%
# Metal9         0.00 	  0.00%  	  0.00% 	  0.00%
# Metal10        0.00 	  0.00%  	  0.00% 	  0.00%
# Metal11        0.00 	  0.00%  	  0.00% 	  0.00%
#------------------------------------------------------------------------
# All      351305.50  	  0.12% 	  0.00% 	  0.00%
#Complete Track Assignment.
#Total number of nets with non-default rule or having extra spacing = 14
#Total wire length = 354672 um.
#Total half perimeter of net bounding box = 347219 um.
#Total wire length on LAYER Metal1 = 0 um.
#Total wire length on LAYER Metal2 = 79767 um.
#Total wire length on LAYER Metal3 = 143723 um.
#Total wire length on LAYER Metal4 = 82395 um.
#Total wire length on LAYER Metal5 = 41626 um.
#Total wire length on LAYER Metal6 = 7055 um.
#Total wire length on LAYER Metal7 = 105 um.
#Total wire length on LAYER Metal8 = 0 um.
#Total wire length on LAYER Metal9 = 0 um.
#Total wire length on LAYER Metal10 = 0 um.
#Total wire length on LAYER Metal11 = 0 um.
#Total number of vias = 168292
#Up-Via Summary (total 168292):
#           
#-----------------------
# Metal1          86740
# Metal2          60379
# Metal3          16653
# Metal4           4137
# Metal5            381
# Metal6              2
#-----------------------
#                168292 
#
#cpu time = 00:00:05, elapsed time = 00:00:05, memory = 1763.55 (MB), peak = 2092.79 (MB)
#
#number of short segments in preferred routing layers
#	
#	
#
#Start post global route fixing for timing critical nets ...
#
#* Updating design timing data...
#Extracting RC...
Un-suppress "**WARN ..." messages.
#
#Start tQuantus RC extraction...
#Finish check_net_pin_list step Enter extract_rc_after_routing
#Extract in track assign mode
#Minimum voltage of a net in the design = 0.000.
#Maximum voltage of a net in the design = 1.000.
#Voltage range [0.000 - 1.000] has 32213 nets.
#Voltage range [1.000 - 1.000] has 1 net.
#Voltage range [0.000 - 0.000] has 1 net.
#Start building rc corner(s)...
#Number of RC Corner = 1
#Corner default_rc /opt/cadence/libraries/gsclib045_all_v4.7/gsclib045/qrc/qx/gpdk045.tch 125.000000 (real) 
#(i=11, n=11 2000)
#METAL_1 -> Metal1 (1)
#METAL_2 -> Metal2 (2)
#METAL_3 -> Metal3 (3)
#METAL_4 -> Metal4 (4)
#METAL_5 -> Metal5 (5)
#METAL_6 -> Metal6 (6)
#METAL_7 -> Metal7 (7)
#METAL_8 -> Metal8 (8)
#METAL_9 -> Metal9 (9)
#METAL_10 -> Metal10 (10)
#METAL_11 -> Metal11 (11)
#SADV_On
# Corner(s) : 
#default_rc [125.00]
# Corner id: 0
# Layout Scale: 1.000000
# Has Metal Fill model: yes
# Temperature was set
# Temperature : 125.000000
# Ref. Temp   : 25.000000
#SADV_Off
#total pattern=286 [11, 792]
#Generating the tQuantus model file automatically.
#num_tile=24090 avg_aspect_ratio=2.082489 
#Vertical num_row 55 per_row= 432 halo= 12000 
#hor_num_col = 63 final aspect_ratio= 1.726033
#Build RC corners: cpu time = 00:00:18, elapsed time = 00:00:18, memory = 1870.87 (MB), peak = 2092.79 (MB)
#Finish check_net_pin_list step Enter extract
#Start init net ripin tree building
#Finish init net ripin tree building
#Cpu time = 00:00:00
#Elapsed time = 00:00:00
#Increased memory = 0.19 (MB)
#Total memory = 1875.12 (MB)
#Peak memory = 2092.79 (MB)
#begin processing metal fill model file
#end processing metal fill model file
#Minimum voltage of a net in the design = 0.000.
#Maximum voltage of a net in the design = 1.000.
#Voltage range [0.000 - 1.000] has 32213 nets.
#Voltage range [1.000 - 1.000] has 1 net.
#Voltage range [0.000 - 0.000] has 1 net.
#Minimum voltage of a net in the design = 0.000.
#Maximum voltage of a net in the design = 1.000.
#Voltage range [0.000 - 1.000] has 32213 nets.
#Voltage range [1.000 - 1.000] has 1 net.
#Voltage range [0.000 - 0.000] has 1 net.
#Minimum voltage of a net in the design = 0.000.
#Maximum voltage of a net in the design = 1.000.
#Voltage range [0.000 - 1.000] has 32213 nets.
#Voltage range [1.000 - 1.000] has 1 net.
#Voltage range [0.000 - 0.000] has 1 net.
#
#Start Post Track Assignment Wire Spread.
#Done with 14557 horizontal wires in 4 hboxes and 10600 vertical wires in 4 hboxes.
#Complete Post Track Assignment Wire Spread.
#
#Length limit = 200 pitches
#opt mode = 2
#Minimum voltage of a net in the design = 0.000.
#Maximum voltage of a net in the design = 1.000.
#Voltage range [0.000 - 1.000] has 32213 nets.
#Voltage range [1.000 - 1.000] has 1 net.
#Voltage range [0.000 - 0.000] has 1 net.
#Minimum voltage of a net in the design = 0.000.
#Maximum voltage of a net in the design = 1.000.
#Voltage range [0.000 - 1.000] has 32213 nets.
#Voltage range [1.000 - 1.000] has 1 net.
#Voltage range [0.000 - 0.000] has 1 net.
#Finish check_net_pin_list step Fix net pin list
#Start generate extraction boxes.
#
#Extract using 30 x 30 Hboxes
#6x6 initial hboxes
#Use area based hbox pruning.
#0/0 hboxes pruned.
#Complete generating extraction boxes.
#Extract 17 hboxes with single thread on machine with  Xeon 2.39GHz 16384KB Cache 4CPU...
#Process 0 special clock nets for rc extraction
#Total 32051 nets were built. 542 nodes added to break long wires. 0 net(s) have incomplete routes.
#Run Statistics for Extraction:
#   Cpu time = 00:00:07, elapsed time = 00:00:07 .
#   Increased memory =    38.41 (MB), total memory =  1913.66 (MB), peak memory =  2092.79 (MB)
#
#Scale RC for track assignment: res 1.000000; cap 1.000000; clk res 1.000000; clk cap 1.000000, xcap 1.000000
#Simplify RC tree: cpu time = 00:00:00, elapsed time = 00:00:00, memory = 1880.71 (MB), peak = 2092.79 (MB)
#RC Statistics: 106721 Res, 66295 Ground Cap, 6320 XCap (Edge to Edge)
#RC V/H edge ratio: 0.42, Avg V/H Edge Length: 3070.50 (65935), Avg L-Edge Length: 12893.72 (22034)
#Register nets and terms for rcdb /tmp/innovus_temp_31472_arc-schaumont-class-vm_ebapinis_EhuNvd/nr31472_Y1l0AS.rcdb.d
#Finish registering nets and terms for rcdb.
#Start writing RC data.
#Finish writing RC data
#Finish writing rcdb with 158563 nodes, 126512 edges, and 16300 xcaps
#542 inserted nodes are removed
#Restored 0 tie nets, 0 tie snets, 0 partial nets
#Minimum voltage of a net in the design = 0.000.
#Maximum voltage of a net in the design = 1.000.
#Voltage range [0.000 - 1.000] has 32213 nets.
#Voltage range [1.000 - 1.000] has 1 net.
#Voltage range [0.000 - 0.000] has 1 net.
#Minimum voltage of a net in the design = 0.000.
#Maximum voltage of a net in the design = 1.000.
#Voltage range [0.000 - 1.000] has 32213 nets.
#Voltage range [1.000 - 1.000] has 1 net.
#Voltage range [0.000 - 0.000] has 1 net.
#Minimum voltage of a net in the design = 0.000.
#Maximum voltage of a net in the design = 1.000.
#Voltage range [0.000 - 1.000] has 32213 nets.
#Voltage range [1.000 - 1.000] has 1 net.
#Voltage range [0.000 - 0.000] has 1 net.
#Remove Post Track Assignment Wire Spread
Restoring parasitic data from file '/tmp/innovus_temp_31472_arc-schaumont-class-vm_ebapinis_EhuNvd/nr31472_Y1l0AS.rcdb.d' ...
Reading RCDB with compressed RC data.
Reading RCDB with compressed RC data.
Begin read_parasitics... (cpu: 0:00:00.0 real: 0:00:00.0 mem: 2520.055M)
Following multi-corner parasitics specified:
	/tmp/innovus_temp_31472_arc-schaumont-class-vm_ebapinis_EhuNvd/nr31472_Y1l0AS.rcdb.d (rcdb)
Reading RCDB with compressed RC data.
		Cell filter_top has rcdb /tmp/innovus_temp_31472_arc-schaumont-class-vm_ebapinis_EhuNvd/nr31472_Y1l0AS.rcdb.d specified
Cell filter_top, hinst 
Reading RCDB with compressed RC data.
Done read_parasitics... (cpu: 0:00:02.3 real: 0:00:02.0 mem: 2520.055M)
#
#Restore RCDB.
#Minimum voltage of a net in the design = 0.000.
#Maximum voltage of a net in the design = 1.000.
#Voltage range [0.000 - 1.000] has 32213 nets.
#Voltage range [1.000 - 1.000] has 1 net.
#Voltage range [0.000 - 0.000] has 1 net.
#Minimum voltage of a net in the design = 0.000.
#Maximum voltage of a net in the design = 1.000.
#Voltage range [0.000 - 1.000] has 32213 nets.
#Voltage range [1.000 - 1.000] has 1 net.
#Voltage range [0.000 - 0.000] has 1 net.
#Minimum voltage of a net in the design = 0.000.
#Maximum voltage of a net in the design = 1.000.
#Voltage range [0.000 - 1.000] has 32213 nets.
#Voltage range [1.000 - 1.000] has 1 net.
#Voltage range [0.000 - 0.000] has 1 net.
#Remove Post Track Assignment Wire Spread
#
#Complete tQuantus RC extraction.
#Cpu time = 00:00:32
#Elapsed time = 00:00:32
#Increased memory = 118.11 (MB)
#Total memory = 1882.41 (MB)
#Peak memory = 2092.79 (MB)
#
Un-suppress "**WARN ..." messages.
#RC Extraction Completed...
AAE_INFO: switching -siAware from false to true ...
AAE_INFO: The setting is changed from false to true in setDelayCalMode -SIAware
#Reporting timing...
###############################################################
#  Generated by:      Cadence Innovus 21.18-s099_1
#  OS:                Linux x86_64(Host ID arc-schaumont-class-vm)
#  Generated on:      Thu Dec  7 19:17:58 2023
#  Design:            filter_top
#  Command:           route_design
###############################################################
#Normalized TNS: 0.000 -> 0.000, r2r 0.000 -> 0.000, unit 1000.000, clk period 2.000 (ns)
#Stage 1: cpu time = 00:00:10, elapsed time = 00:00:10, memory = 1890.45 (MB), peak = 2092.79 (MB)
#Library Standard Delay: 9.90ps
#Slack threshold: 0.00ps
#*** Analyzed 0 timing critical paths, and collected 0.
#Stage 2: cpu time = 00:00:01, elapsed time = 00:00:01, memory = 1891.21 (MB), peak = 2092.79 (MB)
#Stage 3: cpu time = 00:00:00, elapsed time = 00:00:00, memory = 1891.85 (MB), peak = 2092.79 (MB)
Worst slack reported in the design = 0.290308 (late)

*** writeDesignTiming (0:00:01.4) ***
#Stage 4: cpu time = 00:00:01, elapsed time = 00:00:01, memory = 1892.38 (MB), peak = 2092.79 (MB)
Un-suppress "**WARN ..." messages.
#Number of victim nets: 0
#Number of aggressor nets: 0
#Number of weak nets: 0
#Number of critical nets: 0
#	level 1 [   0.0, -1000.0]: 0 nets
#	level 2 [   0.0, -1000.0]: 0 nets
#	level 3 [   0.0, -1000.0]: 0 nets
#Total number of nets: 32051
#Total number of significant detoured timing critical nets is 0
#Total number of selected detoured timing critical nets is 0
#
#----------------------------------------------------
# Summary of active signal nets routing constraints
#+--------------------------+-----------+
#+--------------------------+-----------+
#
#----------------------------------------------------
Current (total cpu=0:09:21, real=0:09:32, peak res=2092.8M, current mem=1826.8M)
filter_top
Ending "Constraint file reading stats" (total cpu=0:00:00.1, real=0:00:00.0, peak res=1838.0M, current mem=1838.0M)
Current (total cpu=0:09:21, real=0:09:32, peak res=2092.8M, current mem=1838.0M)
#Minimum voltage of a net in the design = 0.000.
#Maximum voltage of a net in the design = 1.000.
#Voltage range [0.000 - 1.000] has 32213 nets.
#Voltage range [1.000 - 1.000] has 1 net.
#Voltage range [0.000 - 0.000] has 1 net.
#Minimum voltage of a net in the design = 0.000.
#Maximum voltage of a net in the design = 1.000.
#Voltage range [0.000 - 1.000] has 32213 nets.
#Voltage range [1.000 - 1.000] has 1 net.
#Voltage range [0.000 - 0.000] has 1 net.
#cpu time = 00:00:00, elapsed time = 00:00:00, memory = 1838.00 (MB), peak = 2092.79 (MB)
#* Importing design timing data...
#Number of victim nets: 0
#Number of aggressor nets: 0
#Number of weak nets: 0
#Number of critical nets: 0
#	level 1 [   0.0, -1000.0]: 0 nets
#	level 2 [   0.0, -1000.0]: 0 nets
#	level 3 [   0.0, -1000.0]: 0 nets
#Total number of nets: 32051
#Minimum voltage of a net in the design = 0.000.
#Maximum voltage of a net in the design = 1.000.
#Voltage range [0.000 - 1.000] has 32213 nets.
#Voltage range [1.000 - 1.000] has 1 net.
#Voltage range [0.000 - 0.000] has 1 net.
#
#timing driven effort level: 3
#Start Track Assignment With Timing Driven.
#Done with 1373 horizontal wires in 4 hboxes and 1195 vertical wires in 4 hboxes.
#Done with 210 horizontal wires in 4 hboxes and 251 vertical wires in 4 hboxes.
#Done with 4 horizontal wires in 4 hboxes and 4 vertical wires in 4 hboxes.
#
#Track assignment summary:
# layer   (wire length)   (overlap)     (long ovlp)	(with obs/pg/clk)  
#------------------------------------------------------------------------
# Metal2     80261.51 	  0.04%  	  0.00% 	  0.00%
# Metal3    141572.22 	  0.18%  	  0.00% 	  0.01%
# Metal4     80557.82 	  0.02%  	  0.00% 	  0.00%
# Metal5     41613.35 	  0.00%  	  0.00% 	  0.00%
# Metal6      7064.17 	  0.00%  	  0.00% 	  0.00%
# Metal7       105.53 	  0.00%  	  0.00% 	  0.00%
# Metal8         0.00 	  0.00%  	  0.00% 	  0.00%
# Metal9         0.00 	  0.00%  	  0.00% 	  0.00%
# Metal10        0.00 	  0.00%  	  0.00% 	  0.00%
# Metal11        0.00 	  0.00%  	  0.00% 	  0.00%
#------------------------------------------------------------------------
# All      351174.61  	  0.09% 	  0.00% 	  0.00%
#Complete Track Assignment With Timing Driven.
#Total number of nets with non-default rule or having extra spacing = 14
#Total wire length = 354617 um.
#Total half perimeter of net bounding box = 347219 um.
#Total wire length on LAYER Metal1 = 0 um.
#Total wire length on LAYER Metal2 = 79739 um.
#Total wire length on LAYER Metal3 = 143695 um.
#Total wire length on LAYER Metal4 = 82391 um.
#Total wire length on LAYER Metal5 = 41632 um.
#Total wire length on LAYER Metal6 = 7055 um.
#Total wire length on LAYER Metal7 = 105 um.
#Total wire length on LAYER Metal8 = 0 um.
#Total wire length on LAYER Metal9 = 0 um.
#Total wire length on LAYER Metal10 = 0 um.
#Total wire length on LAYER Metal11 = 0 um.
#Total number of vias = 168292
#Up-Via Summary (total 168292):
#           
#-----------------------
# Metal1          86740
# Metal2          60379
# Metal3          16653
# Metal4           4137
# Metal5            381
# Metal6              2
#-----------------------
#                168292 
#
#cpu time = 00:00:03, elapsed time = 00:00:03, memory = 1838.23 (MB), peak = 2092.79 (MB)
#
#Routing data preparation, pin analysis, global routing and track assignment statistics:
#Cpu time = 00:01:27
#Elapsed time = 00:01:28
#Increased memory = 152.83 (MB)
#Total memory = 1838.23 (MB)
#Peak memory = 2092.79 (MB)
#Minimum voltage of a net in the design = 0.000.
#Maximum voltage of a net in the design = 1.000.
#Voltage range [0.000 - 1.000] has 32213 nets.
#Voltage range [1.000 - 1.000] has 1 net.
#Voltage range [0.000 - 0.000] has 1 net.
#Minimum voltage of a net in the design = 0.000.
#Maximum voltage of a net in the design = 1.000.
#Voltage range [0.000 - 1.000] has 32213 nets.
#Voltage range [1.000 - 1.000] has 1 net.
#Voltage range [0.000 - 0.000] has 1 net.
#Minimum voltage of a net in the design = 0.000.
#Maximum voltage of a net in the design = 1.000.
#Voltage range [0.000 - 1.000] has 32213 nets.
#Voltage range [1.000 - 1.000] has 1 net.
#Voltage range [0.000 - 0.000] has 1 net.
#Minimum voltage of a net in the design = 0.000.
#Maximum voltage of a net in the design = 1.000.
#Voltage range [0.000 - 1.000] has 32213 nets.
#Voltage range [1.000 - 1.000] has 1 net.
#Voltage range [0.000 - 0.000] has 1 net.
#Start reading timing information from file .timing_file_31472.tif.gz ...
#Read in timing information for 30 ports, 23790 instances from timing file .timing_file_31472.tif.gz.
#
#Start Detail Routing..
#start initial detail routing ...
#   number of violations = 44
#
#    By Layer and Type :
#	         EOLSpc    Short   Totals
#	Metal1        1        0        1
#	Metal2        0       43       43
#	Totals        1       43       44
#cpu time = 00:02:01, elapsed time = 00:02:04, memory = 1838.59 (MB), peak = 2092.79 (MB)
#start 1st optimization iteration ...
#   number of violations = 36
#
#    By Layer and Type :
#	         MetSpc    Short   Totals
#	Metal1        0        0        0
#	Metal2        2       34       36
#	Totals        2       34       36
#    number of process antenna violations = 8
#cpu time = 00:00:01, elapsed time = 00:00:01, memory = 1838.69 (MB), peak = 2092.79 (MB)
#start 2nd optimization iteration ...
#   number of violations = 37
#
#    By Layer and Type :
#	         MetSpc    Short      Mar   Totals
#	Metal1        0        0        0        0
#	Metal2        5       31        1       37
#	Totals        5       31        1       37
#cpu time = 00:00:01, elapsed time = 00:00:01, memory = 1838.65 (MB), peak = 2092.79 (MB)
#start 3rd optimization iteration ...
#   number of violations = 0
#cpu time = 00:00:02, elapsed time = 00:00:02, memory = 1838.23 (MB), peak = 2092.79 (MB)
#Complete Detail Routing.
#Total number of nets with non-default rule or having extra spacing = 14
#Total wire length = 381590 um.
#Total half perimeter of net bounding box = 347219 um.
#Total wire length on LAYER Metal1 = 0 um.
#Total wire length on LAYER Metal2 = 105949 um.
#Total wire length on LAYER Metal3 = 139392 um.
#Total wire length on LAYER Metal4 = 87275 um.
#Total wire length on LAYER Metal5 = 41614 um.
#Total wire length on LAYER Metal6 = 7265 um.
#Total wire length on LAYER Metal7 = 95 um.
#Total wire length on LAYER Metal8 = 0 um.
#Total wire length on LAYER Metal9 = 0 um.
#Total wire length on LAYER Metal10 = 0 um.
#Total wire length on LAYER Metal11 = 0 um.
#Total number of vias = 185326
#Up-Via Summary (total 185326):
#           
#-----------------------
# Metal1          92289
# Metal2          69281
# Metal3          18596
# Metal4           4735
# Metal5            423
# Metal6              2
#-----------------------
#                185326 
#
#Total number of DRC violations = 0
#Cpu time = 00:02:08
#Elapsed time = 00:02:12
#Increased memory = 0.01 (MB)
#Total memory = 1838.24 (MB)
#Peak memory = 2092.79 (MB)
#
#start routing for process antenna violation fix ...
#Minimum voltage of a net in the design = 0.000.
#Maximum voltage of a net in the design = 1.000.
#Voltage range [0.000 - 1.000] has 32213 nets.
#Voltage range [1.000 - 1.000] has 1 net.
#Voltage range [0.000 - 0.000] has 1 net.
#Minimum voltage of a net in the design = 0.000.
#Maximum voltage of a net in the design = 1.000.
#Voltage range [0.000 - 1.000] has 32213 nets.
#Voltage range [1.000 - 1.000] has 1 net.
#Voltage range [0.000 - 0.000] has 1 net.
#cpu time = 00:00:02, elapsed time = 00:00:02, memory = 1838.63 (MB), peak = 2092.79 (MB)
#
#Total number of nets with non-default rule or having extra spacing = 14
#Total wire length = 381590 um.
#Total half perimeter of net bounding box = 347219 um.
#Total wire length on LAYER Metal1 = 0 um.
#Total wire length on LAYER Metal2 = 105949 um.
#Total wire length on LAYER Metal3 = 139392 um.
#Total wire length on LAYER Metal4 = 87269 um.
#Total wire length on LAYER Metal5 = 41598 um.
#Total wire length on LAYER Metal6 = 7270 um.
#Total wire length on LAYER Metal7 = 112 um.
#Total wire length on LAYER Metal8 = 0 um.
#Total wire length on LAYER Metal9 = 0 um.
#Total wire length on LAYER Metal10 = 0 um.
#Total wire length on LAYER Metal11 = 0 um.
#Total number of vias = 185342
#Up-Via Summary (total 185342):
#           
#-----------------------
# Metal1          92289
# Metal2          69281
# Metal3          18596
# Metal4           4737
# Metal5            431
# Metal6              8
#-----------------------
#                185342 
#
#Total number of DRC violations = 0
#Total number of process antenna violations = 0
#Total number of net violated process antenna rule = 0
#
#
#Total number of nets with non-default rule or having extra spacing = 14
#Total wire length = 381590 um.
#Total half perimeter of net bounding box = 347219 um.
#Total wire length on LAYER Metal1 = 0 um.
#Total wire length on LAYER Metal2 = 105949 um.
#Total wire length on LAYER Metal3 = 139392 um.
#Total wire length on LAYER Metal4 = 87269 um.
#Total wire length on LAYER Metal5 = 41598 um.
#Total wire length on LAYER Metal6 = 7270 um.
#Total wire length on LAYER Metal7 = 112 um.
#Total wire length on LAYER Metal8 = 0 um.
#Total wire length on LAYER Metal9 = 0 um.
#Total wire length on LAYER Metal10 = 0 um.
#Total wire length on LAYER Metal11 = 0 um.
#Total number of vias = 185342
#Up-Via Summary (total 185342):
#           
#-----------------------
# Metal1          92289
# Metal2          69281
# Metal3          18596
# Metal4           4737
# Metal5            431
# Metal6              8
#-----------------------
#                185342 
#
#Total number of DRC violations = 0
#Total number of process antenna violations = 0
#Total number of net violated process antenna rule = 0
#
#Minimum voltage of a net in the design = 0.000.
#Maximum voltage of a net in the design = 1.000.
#Voltage range [0.000 - 1.000] has 32213 nets.
#Voltage range [1.000 - 1.000] has 1 net.
#Voltage range [0.000 - 0.000] has 1 net.
#Minimum voltage of a net in the design = 0.000.
#Maximum voltage of a net in the design = 1.000.
#Voltage range [0.000 - 1.000] has 32213 nets.
#Voltage range [1.000 - 1.000] has 1 net.
#Voltage range [0.000 - 0.000] has 1 net.
#
#Start Post Route via swapping...
#90.73% of area are rerouted by ECO routing.
#   number of violations = 0
#cpu time = 00:00:26, elapsed time = 00:00:28, memory = 1836.95 (MB), peak = 2092.79 (MB)
#CELL_VIEW filter_top,init has no DRC violation.
#Total number of DRC violations = 0
#Total number of process antenna violations = 0
#Total number of net violated process antenna rule = 0
#Post Route via swapping is done.
#Total number of nets with non-default rule or having extra spacing = 14
#Total wire length = 381590 um.
#Total half perimeter of net bounding box = 347219 um.
#Total wire length on LAYER Metal1 = 0 um.
#Total wire length on LAYER Metal2 = 105949 um.
#Total wire length on LAYER Metal3 = 139392 um.
#Total wire length on LAYER Metal4 = 87269 um.
#Total wire length on LAYER Metal5 = 41598 um.
#Total wire length on LAYER Metal6 = 7270 um.
#Total wire length on LAYER Metal7 = 112 um.
#Total wire length on LAYER Metal8 = 0 um.
#Total wire length on LAYER Metal9 = 0 um.
#Total wire length on LAYER Metal10 = 0 um.
#Total wire length on LAYER Metal11 = 0 um.
#Total number of vias = 185342
#Total number of multi-cut vias = 175050 ( 94.4%)
#Total number of single cut vias = 10292 (  5.6%)
#Up-Via Summary (total 185342):
#                   single-cut          multi-cut      Total
#-----------------------------------------------------------
# Metal1          9722 ( 10.5%)     82567 ( 89.5%)      92289
# Metal2           534 (  0.8%)     68747 ( 99.2%)      69281
# Metal3            31 (  0.2%)     18565 ( 99.8%)      18596
# Metal4             5 (  0.1%)      4732 ( 99.9%)       4737
# Metal5             0 (  0.0%)       431 (100.0%)        431
# Metal6             0 (  0.0%)         8 (100.0%)          8
#-----------------------------------------------------------
#                10292 (  5.6%)    175050 ( 94.4%)     185342 
#
#Minimum voltage of a net in the design = 0.000.
#Maximum voltage of a net in the design = 1.000.
#Voltage range [0.000 - 1.000] has 32213 nets.
#Voltage range [1.000 - 1.000] has 1 net.
#Voltage range [0.000 - 0.000] has 1 net.
#Minimum voltage of a net in the design = 0.000.
#Maximum voltage of a net in the design = 1.000.
#Voltage range [0.000 - 1.000] has 32213 nets.
#Voltage range [1.000 - 1.000] has 1 net.
#Voltage range [0.000 - 0.000] has 1 net.
#
#Start Post Route wire spreading..
#Minimum voltage of a net in the design = 0.000.
#Maximum voltage of a net in the design = 1.000.
#Voltage range [0.000 - 1.000] has 32213 nets.
#Voltage range [1.000 - 1.000] has 1 net.
#Voltage range [0.000 - 0.000] has 1 net.
#Minimum voltage of a net in the design = 0.000.
#Maximum voltage of a net in the design = 1.000.
#Voltage range [0.000 - 1.000] has 32213 nets.
#Voltage range [1.000 - 1.000] has 1 net.
#Voltage range [0.000 - 0.000] has 1 net.
#
#Start DRC checking..
#   number of violations = 0
#cpu time = 00:00:12, elapsed time = 00:00:17, memory = 1837.10 (MB), peak = 2092.79 (MB)
#CELL_VIEW filter_top,init has no DRC violation.
#Total number of DRC violations = 0
#Total number of process antenna violations = 0
#Total number of net violated process antenna rule = 0
#Minimum voltage of a net in the design = 0.000.
#Maximum voltage of a net in the design = 1.000.
#Voltage range [0.000 - 1.000] has 32213 nets.
#Voltage range [1.000 - 1.000] has 1 net.
#Voltage range [0.000 - 0.000] has 1 net.
#Minimum voltage of a net in the design = 0.000.
#Maximum voltage of a net in the design = 1.000.
#Voltage range [0.000 - 1.000] has 32213 nets.
#Voltage range [1.000 - 1.000] has 1 net.
#Voltage range [0.000 - 0.000] has 1 net.
#
#Start data preparation for wire spreading...
#
#Data preparation is done on Thu Dec  7 19:21:08 2023
#
#Minimum voltage of a net in the design = 0.000.
#Maximum voltage of a net in the design = 1.000.
#Voltage range [0.000 - 1.000] has 32213 nets.
#Voltage range [1.000 - 1.000] has 1 net.
#Voltage range [0.000 - 0.000] has 1 net.
#
#Start Post Route Wire Spread.
#Done with 6376 horizontal wires in 8 hboxes and 5401 vertical wires in 8 hboxes.
#Complete Post Route Wire Spread.
#
#Total number of nets with non-default rule or having extra spacing = 14
#Total wire length = 385792 um.
#Total half perimeter of net bounding box = 347219 um.
#Total wire length on LAYER Metal1 = 0 um.
#Total wire length on LAYER Metal2 = 106408 um.
#Total wire length on LAYER Metal3 = 141153 um.
#Total wire length on LAYER Metal4 = 88917 um.
#Total wire length on LAYER Metal5 = 41913 um.
#Total wire length on LAYER Metal6 = 7289 um.
#Total wire length on LAYER Metal7 = 112 um.
#Total wire length on LAYER Metal8 = 0 um.
#Total wire length on LAYER Metal9 = 0 um.
#Total wire length on LAYER Metal10 = 0 um.
#Total wire length on LAYER Metal11 = 0 um.
#Total number of vias = 185342
#Total number of multi-cut vias = 175050 ( 94.4%)
#Total number of single cut vias = 10292 (  5.6%)
#Up-Via Summary (total 185342):
#                   single-cut          multi-cut      Total
#-----------------------------------------------------------
# Metal1          9722 ( 10.5%)     82567 ( 89.5%)      92289
# Metal2           534 (  0.8%)     68747 ( 99.2%)      69281
# Metal3            31 (  0.2%)     18565 ( 99.8%)      18596
# Metal4             5 (  0.1%)      4732 ( 99.9%)       4737
# Metal5             0 (  0.0%)       431 (100.0%)        431
# Metal6             0 (  0.0%)         8 (100.0%)          8
#-----------------------------------------------------------
#                10292 (  5.6%)    175050 ( 94.4%)     185342 
#
#Minimum voltage of a net in the design = 0.000.
#Maximum voltage of a net in the design = 1.000.
#Voltage range [0.000 - 1.000] has 32213 nets.
#Voltage range [1.000 - 1.000] has 1 net.
#Voltage range [0.000 - 0.000] has 1 net.
#Minimum voltage of a net in the design = 0.000.
#Maximum voltage of a net in the design = 1.000.
#Voltage range [0.000 - 1.000] has 32213 nets.
#Voltage range [1.000 - 1.000] has 1 net.
#Voltage range [0.000 - 0.000] has 1 net.
#
#Start DRC checking..
#   number of violations = 0
#cpu time = 00:00:12, elapsed time = 00:00:13, memory = 1836.94 (MB), peak = 2092.79 (MB)
#CELL_VIEW filter_top,init has no DRC violation.
#Total number of DRC violations = 0
#Total number of process antenna violations = 0
#Total number of net violated process antenna rule = 0
#   number of violations = 0
#cpu time = 00:00:18, elapsed time = 00:00:22, memory = 1836.94 (MB), peak = 2092.79 (MB)
#CELL_VIEW filter_top,init has no DRC violation.
#Total number of DRC violations = 0
#Total number of process antenna violations = 0
#Total number of net violated process antenna rule = 0
#Post Route wire spread is done.
#Total number of nets with non-default rule or having extra spacing = 14
#Total wire length = 385792 um.
#Total half perimeter of net bounding box = 347219 um.
#Total wire length on LAYER Metal1 = 0 um.
#Total wire length on LAYER Metal2 = 106408 um.
#Total wire length on LAYER Metal3 = 141153 um.
#Total wire length on LAYER Metal4 = 88917 um.
#Total wire length on LAYER Metal5 = 41913 um.
#Total wire length on LAYER Metal6 = 7289 um.
#Total wire length on LAYER Metal7 = 112 um.
#Total wire length on LAYER Metal8 = 0 um.
#Total wire length on LAYER Metal9 = 0 um.
#Total wire length on LAYER Metal10 = 0 um.
#Total wire length on LAYER Metal11 = 0 um.
#Total number of vias = 185342
#Total number of multi-cut vias = 175050 ( 94.4%)
#Total number of single cut vias = 10292 (  5.6%)
#Up-Via Summary (total 185342):
#                   single-cut          multi-cut      Total
#-----------------------------------------------------------
# Metal1          9722 ( 10.5%)     82567 ( 89.5%)      92289
# Metal2           534 (  0.8%)     68747 ( 99.2%)      69281
# Metal3            31 (  0.2%)     18565 ( 99.8%)      18596
# Metal4             5 (  0.1%)      4732 ( 99.9%)       4737
# Metal5             0 (  0.0%)       431 (100.0%)        431
# Metal6             0 (  0.0%)         8 (100.0%)          8
#-----------------------------------------------------------
#                10292 (  5.6%)    175050 ( 94.4%)     185342 
#
#route_detail Statistics:
#Cpu time = 00:03:09
#Elapsed time = 00:03:24
#Increased memory = -4.31 (MB)
#Total memory = 1833.92 (MB)
#Peak memory = 2092.79 (MB)
#
#route_global_detail statistics:
#Cpu time = 00:04:47
#Elapsed time = 00:05:04
#Increased memory = 189.88 (MB)
#Total memory = 1816.93 (MB)
#Peak memory = 2092.79 (MB)
#Number of warnings = 2
#Total number of warnings = 5
#Number of fails = 0
#Total number of fails = 0
#Complete route_global_detail on Thu Dec  7 19:21:30 2023
#
#Default setup view is reset to func_default.
#Default setup view is reset to func_default.
AAE_INFO: Post Route call back at the end of routeDesign
#route_design: cpu time = 00:05:12, elapsed time = 00:05:29, memory = 1798.20 (MB), peak = 2092.79 (MB)
#% End route_design (date=12/07 19:21:31, total cpu=0:05:12, real=0:05:29, peak res=1971.9M, current mem=1798.2M)
@file 111:
@file 112: #-----------------------------------------------------------------------
@file 113: ## Post Route setup and hold optimization
@file 114: #-----------------------------------------------------------------------
@@file 115: set_db extract_rc_engine post_route
@@file 116: set_db extract_rc_effort_level high
@file 117:
@file 118: # enable Signal Integrity analysis
@@file 119: set_db delaycal_enable_si true
AAE_INFO: switching -siAware from false to true ...
AAE_INFO: The setting is changed from false to true in setDelayCalMode -SIAware
@@file 120: set_db timing_analysis_type ocv
@file 121:
@@file 122: opt_design -post_route -setup -hold -report_dir reports/STA
**opt_design ... cpu = 0:00:00, real = 0:00:00, mem = 1798.2M, totSessionCpu=0:12:34 **
*** opt_design #3 [begin] : totSession cpu/real = 0:12:33.8/0:12:59.2 (1.0), mem = 2482.2M
GigaOpt running with 1 threads.
*** InitOpt #1 [begin] (opt_design #3) : totSession cpu/real = 0:12:33.8/0:12:59.2 (1.0), mem = 2482.2M
**INFO: User settings:
delaycal_default_net_delay                                                                 1000ps
delaycal_default_net_load                                                                  0.5pf
delaycal_enable_high_fanout                                                                true
delaycal_enable_si                                                                         true
delaycal_ignore_net_load                                                                   false
delaycal_input_transition_delay                                                            0.1ps
delaycal_socv_accuracy_mode                                                                low
delaycal_use_default_delay_limit                                                           1000
setAnalysisMode -cts                                                                       postCTS
setAnalysisMode -skew                                                                      true
setDelayCalMode -engine                                                                    aae
design_bottom_routing_layer                                                                Metal2
design_process_node                                                                        45
extract_rc_coupled                                                                         true
extract_rc_coupling_cap_threshold                                                          0.1
extract_rc_effort_level                                                                    high
extract_rc_engine                                                                          post_route
extract_rc_layer_independent                                                               1
extract_rc_relative_cap_threshold                                                          1.0
extract_rc_total_cap_threshold                                                             0.0
opt_drv_margin                                                                             0.0
opt_fix_drv                                                                                true
opt_preserve_all_sequential                                                                false
opt_resize_flip_flops                                                                      true
opt_setup_target_slack                                                                     0.0
opt_useful_skew_eco_route                                                                  false
opt_view_pruning_hold_target_slack_auto_flow                                               0
opt_view_pruning_hold_views_active_list                                                    { func_default }
opt_view_pruning_hold_views_persistent_list                                                { func_default}
opt_view_pruning_setup_views_active_list                                                   { func_default }
opt_view_pruning_setup_views_persistent_list                                               { func_default}
opt_view_pruning_tdgr_setup_views_persistent_list                                          { func_default}
place_global_reorder_scan                                                                  false
extract_rc_model_file                                                                      rc_model.bin
route_design_detail_use_lef_pin_taper_rule                                                 true
route_design_extract_third_party_compatible                                                false
route_design_global_exp_timing_driven_std_delay                                            9.9
route_design_global_exp_timing_driven_use_tif_timing_engine_for_import_design              false
setNanoRouteMode -timingEngine                                                             .timing_file_31472.tif.gz
getAnalysisMode -cts                                                                       postCTS
getAnalysisMode -skew                                                                      true
getDelayCalMode -engine                                                                    aae
get_power_analysis_mode -report_power_quiet                                                false
getNanoRouteMode -timingEngine                                                             .timing_file_31472.tif.gz
getAnalysisMode -cts                                                                       postCTS
getAnalysisMode -skew                                                                      true
**INFO: set_db design_flow_effort standard -> setting 'set_db opt_all_end_points true' for the duration of this command.
Disable merging buffers from different footprints for postRoute code for non-MSV designs
Need call spDPlaceInit before registerPrioInstLoc.
**WARN: (IMPOPT-7320):	Glitch fixing is enabled but glitch report is disabled. Glitch reporting can be enabled using command set_db si_glitch_enable_report true
**opt_design ... cpu = 0:00:11, real = 0:00:11, mem = 1781.1M, totSessionCpu=0:12:45 **
Existing Dirty Nets : 0
New Signature Flow (optDesignCheckOptions) ....
#Taking db snapshot
#Taking db snapshot ... done
Begin checking placement ... (start mem=2450.2M, init mem=2450.2M)
*info: Placed = 23790          (Fixed = 13)
*info: Unplaced = 0           
Placement Density:70.27%(69091/98323)
Placement Density (including fixed std cells):70.27%(69091/98323)
Finished check_place (total: cpu=0:00:00.5, real=0:00:00.0; vio checks: cpu=0:00:00.4, real=0:00:00.0; mem=2450.2M)
 Initial DC engine is -> aae
 
 AAE-Opt:: Current number of nets in RC Memory -> 100 K
 
 
 AAE-Opt:: New number of nets in RC Memory -> 100 K
 
Reset EOS DB
Ignoring AAE DB Resetting ...
 Set Options for AAE Based Opt flow 
*** opt_design -post_route ***
DRC Margin: user margin 0.0; extra margin 0
Setup Target Slack: user slack 0
Hold Target Slack: user slack 0
Multi-VT timing optimization disabled based on library information.
*** InitOpt #1 [finish] (opt_design #3) : cpu/real = 0:00:11.9/0:00:11.9 (1.0), totSession cpu/real = 0:12:45.7/0:13:11.1 (1.0), mem = 2450.2M
** INFO : this run is activating 'postRoute' automaton
**INFO: flowCheckPoint #1 InitialSummary
Extraction called for design 'filter_top' of instances=23790 and nets=32215 using extraction engine 'post_route' at effort level 'high' .
Integrated QRC (IQuantus) Extraction in Multi-Corner mode called for design 'filter_top'. Number of corners is 1.
No IQuantus parasitic data in Innovus. Going for full-chip extraction.
 Min pitch recieved = 1520 

INFO (EXTIQUANTUS-101) : 
  Integrated Quantus - 64-bit Parasitic Extractor - Version 21.1.1-s966
-------------------------------------------------------------------------
               Copyright 2023 Cadence Design Systems, Inc.


INFO (EXTIQUANTUS-103) : Starting at 2023-Dec-07 19:21:44 (2023-Dec-08 00:21:44 GMT).
IQuantus Extraction invoked in single CPU mode. Commands set_distribute_host/set_multi_cpu_usage can be used to activate multiCPU extraction.

IQuantus Extraction engine initialization using 1 tech files:
	/opt/cadence/libraries/gsclib045_all_v4.7/gsclib045/qrc/qx/gpdk045.tch at temperature 125C . 

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

INFO (EXTIQUANTUS-101) : 
  Integrated Quantus - 64-bit Parasitic Extractor - Version 21.1.1-s966
-------------------------------------------------------------------------
               Copyright 2023 Cadence Design Systems, Inc.


INFO (EXTIQUANTUS-103) : Starting at 2023-Dec-07 19:21:44 (2023-Dec-08 00:21:44 GMT).

INFO (EXTIQUANTUS-104) : Starting extraction session...

INFO (EXTIQUANTUS-104) : Starting extraction session...

INFO (EXTIQUANTUS-159) : Loading technology data from file:
  /opt/cadence/libraries/gsclib045_all_v4.7/gsclib045/qrc/qx/gpdk045.tch

INFO (EXTIQUANTUS-159) : Loading technology data from file:
  /opt/cadence/libraries/gsclib045_all_v4.7/gsclib045/qrc/qx/gpdk045.tch

INFO (EXTIQUANTUS-289) : Loading RCgen extraction models from file:
  /opt/cadence/libraries/gsclib045_all_v4.7/gsclib045/qrc/qx/gpdk045.tch

INFO (EXTIQUANTUS-289) : Loading RCgen extraction models from file:
  /opt/cadence/libraries/gsclib045_all_v4.7/gsclib045/qrc/qx/gpdk045.tch

INFO (EXTIQUANTUS-345) : Checking Command/Tech/License Files. 

INFO (EXTIQUANTUS-345) : Checking Command/Tech/License Files. 

INFO (EXTIQUANTUS-383) : Summary of license(s) checkout :
	1 count of QTS300
	1 count of QTS310

INFO (EXTIQUANTUS-383) : Summary of license(s) checkout :
	1 count of QTS300
	1 count of QTS310

INFO (EXTIQUANTUS-105) : Starting design extraction....

INFO (EXTIQUANTUS-105) : Starting design extraction....
No layermap file specified. Automatically mapping tech and lef layers. Log file is 'extLogDir/IQuantus_07-Dec-2023_19:21:43_31472_afkIxu/extr.filter_top.layermap.log'.
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
IQuantus Extraction engine initialized successfully.

Dumping IQuantus extraction options in file 'extLogDir/IQuantus_07-Dec-2023_19:21:43_31472_afkIxu/extr.filter_top.extraction_options.log'.
Initialization for IQuantus Fullchip Extraction DONE (CPU Time: 0:00:02.2  Real Time: 0:00:02.0  MEM: 2488.559M)

Geometry processing of Gray and Metal fill STARTED.................... DONE (CPU Time: 0:00:01.2  Real Time: 0:00:02.0  MEM: 2488.621M)
Geometry processing of nets STARTED.................... DONE (NETS: 32051  Geometries: 580020  CPU Time: 0:00:02.8  Real Time: 0:00:04.0  MEM: 2492.691M)

INFO (EXTIQUANTUS-282) : Checking Command/Tech Files. 

INFO (EXTIQUANTUS-277) : Manufacturing Data Information :- 
  DEF/GDS file 
    does NOT contain MetalFill data. 
  Techfile  
    does NOT contain WEE data.     
    does NOT contain Erosion data t=f( density ) 
    does NOT contain R(w) data.    
    does NOT contain R(w, s) data.  
    does NOT contain TC(w) data.    
    does NOT contain T/B enlargement data. 
    does     contain Floating Metal Fill models. 

INFO (EXTIQUANTUS-287) : Capacitance Models Information :- 
 ICECAPS models are not available. 
 RCgen   models are     available. 
 This IQuantus session uses RCgen models.

INFO (EXTIQUANTUS-286) : RCs effects computed for this session include :- 
 MetalFill        : OFF 
 WEE Effects      : n/a 
 Erosion Effects  : n/a t=f( density ) 
 T/B Enlargements : n/a 
 R(w) Effects     : n/a 
 R(w,s) Effects   : n/a 
 TC(w) Effects     : n/a 
Some effects indicate n/a because of non-availability of relevantinput data
(or) requested to be off (and/or) usage of older Icecaps models.

Extraction of Geometries STARTED.
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

INFO (EXTIQUANTUS-282) : Checking Command/Tech Files. 

INFO (EXTIQUANTUS-277) : Manufacturing Data Information :- 
  DEF/GDS file 
    does NOT contain MetalFill data. 
  Techfile  
    does NOT contain WEE data.     
    does NOT contain Erosion data t=f( density ) 
    does NOT contain R(w) data.    
    does NOT contain R(w, s) data.  
    does NOT contain TC(w) data.    
    does NOT contain T/B enlargement data. 
    does     contain Floating Metal Fill models. 

INFO (EXTIQUANTUS-287) : Capacitance Models Information :- 
 ICECAPS models are not available. 
 RCgen   models are     available. 
 This IQuantus session uses RCgen models.

INFO (EXTIQUANTUS-286) : RCs effects computed for this session include :- 
 MetalFill        : OFF 
 WEE Effects      : n/a 
 Erosion Effects  : n/a t=f( density ) 
 T/B Enlargements : n/a 
 R(w) Effects     : n/a 
 R(w,s) Effects   : n/a 
 TC(w) Effects     : n/a 
Some effects indicate n/a because of non-availability of relevantinput data
(or) requested to be off (and/or) usage of older Icecaps models.

INFO (EXTHPY-103) : Extracting capacitance values.

INFO (EXTHPY-103) : Extracting capacitance values.

INFO (EXTHPY-267) :  
 DESIGN                       : 
 DEF/OA DIEAREA BBOX          : 2147483647 2147483647 -2147483648
-2147483648
 DEF/OA UNITS                 : 10000
 FINAL SCALE FACTOR           : 1
 
 ESTIMATED COMPRESSED DEF SIZE: 0
 TILE SIZE                    : 100x100 squm
 TILE COUNT                   : 16
 CLUSTER SIZE                 : 257
 CAPDB PARTITIONS             : 16

INFO (EXTHPY-267) :  
 DESIGN                       : 
 DEF/OA DIEAREA BBOX          : 2147483647 2147483647 -2147483648
-2147483648
 DEF/OA UNITS                 : 10000
 FINAL SCALE FACTOR           : 1
 
 ESTIMATED COMPRESSED DEF SIZE: 0
 TILE SIZE                    : 100x100 squm
 TILE COUNT                   : 16
 CLUSTER SIZE                 : 257
 CAPDB PARTITIONS             : 16

INFO (EXTHPY-104) :    0%

INFO (EXTHPY-104) :    0%

INFO (EXTHPY-104) :    7%

INFO (EXTHPY-104) :    7%

INFO (EXTHPY-104) :    13%

INFO (EXTHPY-104) :    13%

INFO (EXTHPY-104) :    20%

INFO (EXTHPY-104) :    20%

INFO (EXTHPY-104) :    27%

INFO (EXTHPY-104) :    27%

INFO (EXTHPY-104) :    33%

INFO (EXTHPY-104) :    33%

INFO (EXTHPY-104) :    40%

INFO (EXTHPY-104) :    40%

INFO (EXTHPY-104) :    47%

INFO (EXTHPY-104) :    47%

INFO (EXTHPY-104) :    53%

INFO (EXTHPY-104) :    53%

INFO (EXTHPY-104) :    60%

INFO (EXTHPY-104) :    60%

INFO (EXTHPY-104) :    67%

INFO (EXTHPY-104) :    67%

INFO (EXTHPY-104) :    73%

INFO (EXTHPY-104) :    73%

INFO (EXTHPY-104) :    80%

INFO (EXTHPY-104) :    80%

INFO (EXTHPY-104) :    87%

INFO (EXTHPY-104) :    87%

INFO (EXTHPY-104) :    93%

INFO (EXTHPY-104) :    93%

INFO (EXTHPY
INFO (EXTHPY-104) :    100%
-104) :    100%
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Extraction of Geometries DONE (NETS: 32051  CPU Time: 0:00:25.7  Real Time: 0:00:27.0  MEM: 2635.641M)

Parasitic Network Creation STARTED
...................
Number of Extracted Resistors     : 373546
Number of Extracted Ground Caps   : 405648
Number of Extracted Coupling Caps : 30790
Parasitic Network Creation DONE (Nets: 32051  CPU Time: 0:00:01.0  Real Time: 0:00:01.0  MEM: 2627.645M)

IQuantus Extraction engine is being closed... 
IQuantus Fullchip Extraction DONE (CPU Time: 0:00:35.2  Real Time: 0:00:38.0  MEM: 2627.641M)
AAE DB initialization (MEM=2637.18 CPU=0:00:00.0 REAL=0:00:00.0) 
*** BuildHoldData #1 [begin] (opt_design #3) : totSession cpu/real = 0:13:21.0/0:13:49.0 (1.0), mem = 2637.2M
AAE_INFO: switching -siAware from true to false ...
AAE_INFO: The setting is changed from true to false in setDelayCalMode -SIAware
OPTC: user 20.0
Starting delay calculation for Hold views
AAE_INFO: opIsDesignInPostRouteState() is 1
AAE_INFO: deleting AAE DB due to opIsDesignInPostRouteState() is changed ...
AAE DB initialization (MEM=2637.18 CPU=0:00:00.0 REAL=0:00:00.0) 
#################################################################################
# Design Stage: PostRoute
# Design Name: filter_top
# Design Mode: 45nm
# Analysis Mode: MMMC OCV 
# Parasitics Mode: SPEF/RCDB 
# Signoff Settings: SI Off 
#################################################################################
Start delay calculation (fullDC) (1 T). (MEM=2637.18)
Total number of fetched objects 32145
AAE_INFO: Total number of nets for which stage creation was skipped for all views 0
End delay calculation. (MEM=2661.51 CPU=0:00:03.8 REAL=0:00:04.0)
End delay calculation (fullDC). (MEM=2624.89 CPU=0:00:04.3 REAL=0:00:04.0)
*** Done Building Timing Graph (cpu=0:00:04.8 real=0:00:05.0 totSessionCpu=0:13:27 mem=2624.9M)
Done building cte hold timing graph (HoldAware) cpu=0:00:05.7 real=0:00:05.0 totSessionCpu=0:13:27 mem=2624.9M ***
AAE_INFO: switching -siAware from false to true ...
AAE_INFO: The setting is changed from false to true in setDelayCalMode -SIAware
Starting delay calculation for Setup views
AAE_INFO: opIsDesignInPostRouteState() is 1
AAE_INFO: resetNetProps viewIdx 0 
Starting SI iteration 1 using Infinite Timing Windows
#################################################################################
# Design Stage: PostRoute
# Design Name: filter_top
# Design Mode: 45nm
# Analysis Mode: MMMC OCV 
# Parasitics Mode: SPEF/RCDB 
# Signoff Settings: SI On 
#################################################################################
AAE_INFO: 1 threads acquired from CTE.
Start delay calculation (fullDC) (1 T). (MEM=2621.17)
Total number of fetched objects 32145
AAE_INFO: Total number of nets for which stage creation was skipped for all views 0
AAE_INFO-618: Total number of nets in the design is 32215,  100.0 percent of the nets selected for SI analysis
End delay calculation. (MEM=2616.77 CPU=0:00:06.8 REAL=0:00:07.0)
End delay calculation (fullDC). (MEM=2616.77 CPU=0:00:07.3 REAL=0:00:08.0)
Loading CTE timing window with TwFlowType 0...(CPU = 0:00:00.0, REAL = 0:00:00.0, MEM = 2616.8M)
Add other clocks and setupCteToAAEClockMapping during iter 1
Loading CTE timing window is completed (CPU = 0:00:00.1, REAL = 0:00:00.0, MEM = 2616.8M)

Executing IPO callback for view pruning ..
Starting SI iteration 2
Start delay calculation (fullDC) (1 T). (MEM=2494.89)
Glitch Analysis: View func_default -- Total Number of Nets Skipped = 196. 
Glitch Analysis: View func_default -- Total Number of Nets Analyzed = 32145. 
Total number of fetched objects 32145
AAE_INFO: Total number of nets for which stage creation was skipped for all views 0
AAE_INFO-618: Total number of nets in the design is 32215,  0.5 percent of the nets selected for SI analysis
End delay calculation. (MEM=2537.57 CPU=0:00:00.3 REAL=0:00:00.0)
End delay calculation (fullDC). (MEM=2537.57 CPU=0:00:00.3 REAL=0:00:00.0)
*** Done Building Timing Graph (cpu=0:00:09.9 real=0:00:10.0 totSessionCpu=0:13:38 mem=2537.6M)

------------------------------------------------------------------
     Initial SI Timing Summary
------------------------------------------------------------------

Setup views included:
 func_default 

+--------------------+---------+---------+---------+
|     Setup mode     |   all   | reg2reg | default |
+--------------------+---------+---------+---------+
|           WNS (ns):|  0.364  |  0.364  |  1.907  |
|           TNS (ns):|  0.000  |  0.000  |  0.000  |
|    Violating Paths:|    0    |    0    |    0    |
|          All Paths:|  1189   |  1165   |   24    |
+--------------------+---------+---------+---------+

+----------------+-------------------------------+------------------+
|                |              Real             |       Total      |
|    DRVs        +------------------+------------+------------------|
|                |  Nr nets(terms)  | Worst Vio  |  Nr nets(terms)  |
+----------------+------------------+------------+------------------+
|   max_cap      |      0 (0)       |   0.000    |      0 (0)       |
|   max_tran     |      0 (0)       |   0.000    |      0 (0)       |
|   max_fanout   |      0 (0)       |     0      |      0 (0)       |
|   max_length   |      0 (0)       |     0      |      0 (0)       |
+----------------+------------------+------------+------------------+

Density: 70.270%
------------------------------------------------------------------
*** BuildHoldData #1 [finish] (opt_design #3) : cpu/real = 0:00:17.8/0:00:17.9 (1.0), totSession cpu/real = 0:13:38.8/0:14:06.9 (1.0), mem = 2553.6M
**opt_design ... cpu = 0:01:05, real = 0:01:07, mem = 1963.9M, totSessionCpu=0:13:39 **
OPTC: m1 20.0 20.0
Setting latch borrow mode to budget during optimization.
Info: Done creating the CCOpt slew target map.
**INFO: flowCheckPoint #2 OptimizationPass1
Glitch fixing enabled
*** ClockDrv #1 [begin] (opt_design #3) : totSession cpu/real = 0:13:39.5/0:14:07.6 (1.0), mem = 2511.6M
Running CCOpt-PRO on entire clock network
Net route status summary:
  Clock:        14 (unrouted=0, trialRouted=0, noStatus=0, routed=14, fixed=0, [crossesIlmBoundary=0, tooFewTerms=0, (crossesIlmBoundary AND tooFewTerms=0)])
  Non-clock: 32201 (unrouted=164, trialRouted=0, noStatus=0, routed=32037, fixed=0, [crossesIlmBoundary=0, tooFewTerms=164, (crossesIlmBoundary AND tooFewTerms=0)])
Clock tree cells fixed by user: 0 out of 13 (0%)
PRO...
Relaxing adjacent_rows_legal and cell_density for the duration of PRO. To stop this set pro_respect_cell_density_and_adjacent_row_legal to true.
Initializing clock structures...
  Creating own balancer
  Permitting the movement of (non-FIXED) datapath insts as required for sized/new clock tree insts
  Initializing legalizer
  Using cell based legalization.
  Leaving CCOpt scope - Initializing placement interface...
  Leaving CCOpt scope - Initializing placement interface done. (took cpu=0:00:00.1 real=0:00:00.1)
  Reconstructing clock tree datastructures, skew aware...
    Validating CTS configuration...
    Checking module port directions...
    Checking module port directions done. (took cpu=0:00:00.0 real=0:00:00.0)
    Non-default attributes:
      Public non-default attributes:
        cts_adjacent_rows_legal: true (default: false)
        cts_buffer_cells is set for at least one object
        cts_cell_density is set for at least one object
        cts_cell_halo_rows: 0 (default: 1)
        cts_cell_halo_sites: 0 (default: 4)
        cts_inverter_cells is set for at least one object
        cts_route_type is set for at least one object
        cts_skew_group_target_insertion_delay is set for at least one object
        cts_target_skew is set for at least one object
        cts_target_skew_wire is set for at least one object
        cts_update_clock_latency: false (default: true)
      Private non-default attributes:
        cts_allow_non_fterm_identical_swaps: false (default: true)
        cts_clock_nets_detailed_routed: true (default: false)
        cts_force_design_routing_status: 1 (default: auto)
        cts_post_route_enable_post_commit_delay_update: true (default: false)
    Route type trimming info:
      No route type modifications were made.
    Clock tree balancer configuration for clock_tree Clk:
    Non-default attributes:
      Public non-default attributes:
        cts_cell_density: 1 (default: 0.75)
        cts_route_type (leaf): default_route_type_leaf (default: default)
        cts_route_type (top): default_route_type_nonleaf (default: default)
        cts_route_type (trunk): default_route_type_nonleaf (default: default)
      No private non-default attributes
    For power domain auto-default:
      Buffers:     CLKBUFX16 CLKBUFX12 CLKBUFX4 
      Inverters:   CLKINVX16 CLKINVX12 CLKINVX4 
      Clock gates (with test): TLATNTSCAX20 TLATNTSCAX16 TLATNTSCAX12 TLATNTSCAX8 TLATNTSCAX6 TLATNTSCAX4 TLATNTSCAX3 TLATNTSCAX2 
      Clock gates   (no test): TLATNCAX20 TLATNCAX16 TLATNCAX12 TLATNCAX8 TLATNCAX6 TLATNCAX4 TLATNCAX3 TLATNCAX2 
      Unblocked area available for placement of any clock cells in power_domain auto-default: 98322.606um^2
    Top Routing info:
      Route-type name: default_route_type_nonleaf; Top/bottom preferred layer name: Metal4/Metal3; 
      Unshielded; Mask Constraint: 0; Source: cts_route_type.
    Trunk Routing info:
      Route-type name: default_route_type_nonleaf; Top/bottom preferred layer name: Metal4/Metal3; 
      Unshielded; Preferred extra space: 1; Mask Constraint: 0; Source: cts_route_type.
    Leaf Routing info:
      Route-type name: default_route_type_leaf; Top/bottom preferred layer name: Metal4/Metal3; 
      Unshielded; Preferred extra space: 1; Mask Constraint: 0; Source: cts_route_type.
    For timing_corner default_dc:both, late and power domain auto-default:
      Slew time target (leaf):    0.030ns
      Slew time target (trunk):   0.030ns
      Slew time target (top):     0.030ns (Note: no nets are considered top nets in this clock tree)
      Buffer unit delay: 0.020ns
      Buffer max distance: 420.690um
    Fastest wire driving cells and distances:
      Buffer    : {lib_cell:CLKBUFX16, fastest_considered_half_corner=default_dc:both.late, optimalDrivingDistance=420.690um, saturatedSlew=0.026ns, speed=12409.735um per ns, cellArea=16.259um^2 per 1000um}
      Inverter  : {lib_cell:CLKINVX16, fastest_considered_half_corner=default_dc:both.late, optimalDrivingDistance=357.333um, saturatedSlew=0.026ns, speed=15988.053um per ns, cellArea=15.313um^2 per 1000um}
      Clock gate (with test): {lib_cell:TLATNTSCAX16, fastest_considered_half_corner=default_dc:both.late, optimalDrivingDistance=428.800um, saturatedSlew=0.026ns, speed=6259.854um per ns, cellArea=30.308um^2 per 1000um}
      Clock gate   (no test): {lib_cell:TLATNCAX16, fastest_considered_half_corner=default_dc:both.late, optimalDrivingDistance=428.800um, saturatedSlew=0.026ns, speed=6269.006um per ns, cellArea=28.713um^2 per 1000um}
    
    
    Logic Sizing Table:
    
    ----------------------------------------------------------
    Cell    Instance count    Source    Eligible library cells
    ----------------------------------------------------------
      (empty table)
    ----------------------------------------------------------
    
    
    Clock tree balancer configuration for skew_group Clk/default_const:
      Sources:                     pin Clk
      Total number of sinks:       1133
      Delay constrained sinks:     1133
      Constrains:                  default
      Non-leaf sinks:              0
      Ignore pins:                 0
     Timing corner default_dc:both.late:
      Skew target:                 0.020ns
    Primary reporting skew groups are:
    skew_group Clk/default_const with 1133 clock sinks
    
    Clock DAG stats initial state:
      cell counts      : b=13, i=0, icg=0, dcg=0, l=0, total=13
      sink counts      : regular=1133, enable_latch=0, load_capacitance=0, antenna=0, node_sink=0, total=1133
      misc counts      : r=1, pp=0
      cell areas       : b=87.210um^2, i=0.000um^2, icg=0.000um^2, dcg=0.000um^2, l=0.000um^2, total=87.210um^2
      hp wire lengths  : top=0.000um, trunk=0.000um, leaf=1893.290um, total=1893.290um
    Clock DAG library cell distribution initial state {count}:
       Bufs: CLKBUFX16: 12 CLKBUFX12: 1 
      flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:*                                                                   InitialState
    No ideal or dont_touch nets found in the clock tree
    No dont_touch hnets found in the clock tree
    No dont_touch hpins found in the clock network.
    Checking for illegal sizes of clock logic instances...
    Checking for illegal sizes of clock logic instances done. (took cpu=0:00:00.0 real=0:00:00.0)
      flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:*                                                                   Checking for illegal sizes of clock logic instances
    Validating CTS configuration done. (took cpu=0:00:01.0 real=0:00:01.0)
      flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:*                                                                   Validating CTS configuration
    CCOpt configuration status: all checks passed.
  Reconstructing clock tree datastructures, skew aware done.
Initializing clock structures done.
PRO...
  PRO active optimizations:
   - DRV fixing with sizing
  
  Detected clock skew data from CTS
  Clock tree timing engine global stage delay update for default_dc:both.late...
  Clock tree timing engine global stage delay update for default_dc:both.late done. (took cpu=0:00:00.0 real=0:00:00.0)
  Clock DAG stats PRO initial state:
    cell counts      : b=13, i=0, icg=0, dcg=0, l=0, total=13
    sink counts      : regular=1133, enable_latch=0, load_capacitance=0, antenna=0, node_sink=0, total=1133
    misc counts      : r=1, pp=0
    cell areas       : b=87.210um^2, i=0.000um^2, icg=0.000um^2, dcg=0.000um^2, l=0.000um^2, total=87.210um^2
    cell capacitance : b=0.026pF, i=0.000pF, icg=0.000pF, dcg=0.000pF, l=0.000pF, total=0.026pF
    sink capacitance : total=0.349pF, avg=0.000pF, sd=0.000pF, min=0.000pF, max=0.000pF
    wire capacitance : top=0.000pF, trunk=0.057pF, leaf=0.355pF, total=0.412pF
    wire lengths     : top=0.000um, trunk=868.980um, leaf=4577.260um, total=5446.240um
    hp wire lengths  : top=0.000um, trunk=0.000um, leaf=1893.290um, total=1893.290um
  Clock DAG net violations PRO initial state: none
  Clock DAG primary half-corner transition distribution PRO initial state:
    Trunk : target=0.030ns count=1 avg=0.020ns sd=0.000ns min=0.020ns max=0.020ns {0 <= 0.018ns, 1 <= 0.024ns, 0 <= 0.027ns, 0 <= 0.029ns, 0 <= 0.030ns}
    Leaf  : target=0.030ns count=13 avg=0.028ns sd=0.001ns min=0.025ns max=0.030ns {0 <= 0.018ns, 0 <= 0.024ns, 7 <= 0.027ns, 5 <= 0.029ns, 1 <= 0.030ns}
  Clock DAG library cell distribution PRO initial state {count}:
     Bufs: CLKBUFX16: 12 CLKBUFX12: 1 
  Primary reporting skew groups PRO initial state:
    skew_group default.Clk/default_const: unconstrained
  Skew group summary PRO initial state:
    skew_group Clk/default_const: insertion delay [min=0.028, max=0.044, avg=0.040, sd=0.003], skew [0.016 vs 0.020], 100% {0.028, 0.044} (wid=0.013 ws=0.011) (gid=0.033 gs=0.006)
  Recomputing CTS skew targets...
  Resolving skew group constraints...
    Solving LP: 1 skew groups; 2 fragments, 2 fraglets and 3 vertices; 25 variables and 66 constraints; tolerance 1
  Resolving skew group constraints done.
  Recomputing CTS skew targets done. (took cpu=0:00:00.0 real=0:00:00.0)
  PRO Fixing DRVs...
    Fixing clock tree DRVs: ...20% ...40% ...60% ...80% ...100% 
    CCOpt-PRO: considered: 14, tested: 14, violation detected: 0, violation ignored (due to small violation): 0, cannot run: 0, attempted: 0, unsuccessful: 0, sized: 0
    
    Statistics: Fix DRVs (cell sizing):
    ===================================
    
    Cell changes by Net Type:
    
    -------------------------------------------------------------------------------------------------
    Net Type    Attempted    Upsized     Downsized    Swapped Same Size    Total Changed    Not Sized
    -------------------------------------------------------------------------------------------------
    top                0            0           0            0                    0                0
    trunk              0            0           0            0                    0                0
    leaf               0            0           0            0                    0                0
    -------------------------------------------------------------------------------------------------
    Total              0            0           0            0                    0                0
    -------------------------------------------------------------------------------------------------
    
    Upsized: 0, Downsized: 0, Sized but same area: 0, Unchanged: 0, Area change: 0.000um^2 (0.000%)
    Max. move: 0.000um, Min. move: 0.000um, Avg. move: N/A
    
    Clock DAG stats after 'PRO Fixing DRVs':
      cell counts      : b=13, i=0, icg=0, dcg=0, l=0, total=13
      sink counts      : regular=1133, enable_latch=0, load_capacitance=0, antenna=0, node_sink=0, total=1133
      misc counts      : r=1, pp=0
      cell areas       : b=87.210um^2, i=0.000um^2, icg=0.000um^2, dcg=0.000um^2, l=0.000um^2, total=87.210um^2
      cell capacitance : b=0.026pF, i=0.000pF, icg=0.000pF, dcg=0.000pF, l=0.000pF, total=0.026pF
      sink capacitance : total=0.349pF, avg=0.000pF, sd=0.000pF, min=0.000pF, max=0.000pF
      wire capacitance : top=0.000pF, trunk=0.057pF, leaf=0.355pF, total=0.412pF
      wire lengths     : top=0.000um, trunk=868.980um, leaf=4577.260um, total=5446.240um
      hp wire lengths  : top=0.000um, trunk=0.000um, leaf=1893.290um, total=1893.290um
    Clock DAG net violations after 'PRO Fixing DRVs': none
    Clock DAG primary half-corner transition distribution after 'PRO Fixing DRVs':
      Trunk : target=0.030ns count=1 avg=0.020ns sd=0.000ns min=0.020ns max=0.020ns {0 <= 0.018ns, 1 <= 0.024ns, 0 <= 0.027ns, 0 <= 0.029ns, 0 <= 0.030ns}
      Leaf  : target=0.030ns count=13 avg=0.028ns sd=0.001ns min=0.025ns max=0.030ns {0 <= 0.018ns, 0 <= 0.024ns, 7 <= 0.027ns, 5 <= 0.029ns, 1 <= 0.030ns}
    Clock DAG library cell distribution after 'PRO Fixing DRVs' {count}:
       Bufs: CLKBUFX16: 12 CLKBUFX12: 1 
    Primary reporting skew groups after 'PRO Fixing DRVs':
      skew_group default.Clk/default_const: unconstrained
    Skew group summary after 'PRO Fixing DRVs':
      skew_group Clk/default_const: insertion delay [min=0.028, max=0.044], skew [0.016 vs 0.020]
    Legalizer API calls during this step: 0 succeeded with high effort: 0 succeeded with medium effort: 0 succeeded with low effort: 0 succeeded with basic effort: 0 succeeded with basic unbounded effort: 0
  PRO Fixing DRVs done. (took cpu=0:00:00.0 real=0:00:00.0)
      flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:*                                                                   PRO Fixing DRVs
  Reconnecting optimized routes...
  Reconnecting optimized routes done. (took cpu=0:00:00.0 real=0:00:00.0)
  Clock tree timing engine global stage delay update for default_dc:both.late...
  Clock tree timing engine global stage delay update for default_dc:both.late done. (took cpu=0:00:00.0 real=0:00:00.0)
  Clock DAG stats PRO final:
    cell counts      : b=13, i=0, icg=0, dcg=0, l=0, total=13
    sink counts      : regular=1133, enable_latch=0, load_capacitance=0, antenna=0, node_sink=0, total=1133
    misc counts      : r=1, pp=0
    cell areas       : b=87.210um^2, i=0.000um^2, icg=0.000um^2, dcg=0.000um^2, l=0.000um^2, total=87.210um^2
    cell capacitance : b=0.026pF, i=0.000pF, icg=0.000pF, dcg=0.000pF, l=0.000pF, total=0.026pF
    sink capacitance : total=0.349pF, avg=0.000pF, sd=0.000pF, min=0.000pF, max=0.000pF
    wire capacitance : top=0.000pF, trunk=0.057pF, leaf=0.355pF, total=0.412pF
    wire lengths     : top=0.000um, trunk=868.980um, leaf=4577.260um, total=5446.240um
    hp wire lengths  : top=0.000um, trunk=0.000um, leaf=1893.290um, total=1893.290um
  Clock DAG net violations PRO final: none
  Clock DAG primary half-corner transition distribution PRO final:
    Trunk : target=0.030ns count=1 avg=0.020ns sd=0.000ns min=0.020ns max=0.020ns {0 <= 0.018ns, 1 <= 0.024ns, 0 <= 0.027ns, 0 <= 0.029ns, 0 <= 0.030ns}
    Leaf  : target=0.030ns count=13 avg=0.028ns sd=0.001ns min=0.025ns max=0.030ns {0 <= 0.018ns, 0 <= 0.024ns, 7 <= 0.027ns, 5 <= 0.029ns, 1 <= 0.030ns}
  Clock DAG library cell distribution PRO final {count}:
     Bufs: CLKBUFX16: 12 CLKBUFX12: 1 
  Primary reporting skew groups PRO final:
    skew_group default.Clk/default_const: unconstrained
  Skew group summary PRO final:
    skew_group Clk/default_const: insertion delay [min=0.028, max=0.044, avg=0.040, sd=0.003], skew [0.016 vs 0.020], 100% {0.028, 0.044} (wid=0.013 ws=0.011) (gid=0.033 gs=0.006)
PRO done.
Net route status summary:
  Clock:        14 (unrouted=0, trialRouted=0, noStatus=0, routed=14, fixed=0, [crossesIlmBoundary=0, tooFewTerms=0, (crossesIlmBoundary AND tooFewTerms=0)])
  Non-clock: 32201 (unrouted=164, trialRouted=0, noStatus=0, routed=32037, fixed=0, [crossesIlmBoundary=0, tooFewTerms=164, (crossesIlmBoundary AND tooFewTerms=0)])
Updating delays...
Updating delays done.
PRO done. (took cpu=0:00:02.9 real=0:00:02.9)
      flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:*                                                                   PRO
Leaving CCOpt scope - Cleaning up placement interface...
Leaving CCOpt scope - Cleaning up placement interface done. (took cpu=0:00:00.1 real=0:00:00.1)
*** ClockDrv #1 [finish] (opt_design #3) : cpu/real = 0:00:03.2/0:00:03.3 (1.0), totSession cpu/real = 0:13:42.7/0:14:10.8 (1.0), mem = 2519.1M
**INFO: Start fixing DRV (Mem = 2515.11M) ...
Begin: GigaOpt DRV Optimization
Glitch fixing enabled
GigaOpt Checkpoint: Internal optDRV -postRoute -max_tran -max_cap -maintainWNS -setupTNSCostFactor 0.3 -maxLocalDensity 0.96 -numThreads 1  -glitch
*** DrvOpt #1 [begin] (opt_design #3) : totSession cpu/real = 0:13:43.1/0:14:11.2 (1.0), mem = 2515.1M
Info: 14 clock nets excluded from IPO operation.
DRV pessimism of 2.00% is used for tran, 2.00% for cap, 2.00% for fanout, on top of margin 0.00%
+---------------------------------------------------------------------------------------------------------------------------------------------------------------------+
|        max-tran       |        max-cap        |  max-fanout |  max-length |    glitch   |       setup       |        |        |        |       |          |         |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| nets | terms|  wViol  | nets | terms|  wViol  | nets | terms| nets | terms| nets | terms|   WNS   |   TNS   |  #Buf  |  #Inv  | #Resize|Density|   Real   |   Mem   |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------------+
|     0|     0|     0.00|     0|     0|     0.00|     0|     0|     0|     0|     0|     0|     0.37|     0.00|       0|       0|       0| 70.27%|          |         |
|     0|     0|     0.00|     0|     0|     0.00|     0|     0|     0|     0|     0|     0|     0.37|     0.00|       0|       0|       0| 70.27%| 0:00:00.0|  2742.4M|
+---------------------------------------------------------------------------------------------------------------------------------------------------------------------+
Bottom Preferred Layer:
+---------------+------------+----------+
|     Layer     |    CLK     |   Rule   |
+---------------+------------+----------+
| Metal3 (z=3)  |         14 | default  |
+---------------+------------+----------+
Via Pillar Rule:
    None

*** Finish DRV Fixing (cpu=0:00:01.0 real=0:00:01.0 mem=2742.4M) ***

*** DrvOpt #1 [finish] (opt_design #3) : cpu/real = 0:00:02.4/0:00:02.4 (1.0), totSession cpu/real = 0:13:45.5/0:14:13.6 (1.0), mem = 2644.3M
drv optimizer changes nothing and skips place_detail
End: GigaOpt DRV Optimization
**opt_design ... cpu = 0:01:12, real = 0:01:14, mem = 2087.9M, totSessionCpu=0:13:45 **
*info:
**INFO: Completed fixing DRV (CPU Time = 0:00:02, Mem = 2644.30M).

------------------------------------------------------------------
     SI Timing Summary (cpu=0.04min real=0.03min mem=2644.3M)
------------------------------------------------------------------

Setup views included:
 func_default 

+--------------------+---------+---------+---------+
|     Setup mode     |   all   | reg2reg | default |
+--------------------+---------+---------+---------+
|           WNS (ns):|  0.368  |  0.368  |  1.908  |
|           TNS (ns):|  0.000  |  0.000  |  0.000  |
|    Violating Paths:|    0    |    0    |    0    |
|          All Paths:|  1189   |  1165   |   24    |
+--------------------+---------+---------+---------+

+----------------+-------------------------------+------------------+
|                |              Real             |       Total      |
|    DRVs        +------------------+------------+------------------|
|                |  Nr nets(terms)  | Worst Vio  |  Nr nets(terms)  |
+----------------+------------------+------------+------------------+
|   max_cap      |      0 (0)       |   0.000    |      0 (0)       |
|   max_tran     |      0 (0)       |   0.000    |      0 (0)       |
|   max_fanout   |      0 (0)       |     0      |      0 (0)       |
|   max_length   |      0 (0)       |     0      |      0 (0)       |
+----------------+------------------+------------+------------------+

Density: 70.270%
------------------------------------------------------------------
**opt_design ... cpu = 0:01:12, real = 0:01:15, mem = 2087.9M, totSessionCpu=0:13:46 **
*** Timing Is met
*** Check timing (0:00:00.0)
*** Setup timing is met (target slack 0ns)
**INFO: flowCheckPoint #3 OptimizationHold
GigaOpt Hold Optimizer is used
GigaOpt Checkpoint: Internal optHold -postRoute -maxLocalDensity 1.0 -numThreads 1 -nativePathGroupFlow -viewPruneEffortLevel 1
Starting initialization (fixHold) cpu=0:00:00.0 real=0:00:00.0 totSessionCpu=0:13:47 mem=2682.6M ***
*** BuildHoldData #2 [begin] (opt_design #3) : totSession cpu/real = 0:13:47.1/0:14:15.2 (1.0), mem = 2682.6M
Saving timing graph ...
Done save timing graph
Latch borrow mode reset to max_borrow
OPTC: user 20.0
Starting delay calculation for Hold views
AAE_INFO: opIsDesignInPostRouteState() is 1
AAE_INFO: resetNetProps viewIdx 0 
Starting SI iteration 1 using Infinite Timing Windows
#################################################################################
# Design Stage: PostRoute
# Design Name: filter_top
# Design Mode: 45nm
# Analysis Mode: MMMC OCV 
# Parasitics Mode: SPEF/RCDB 
# Signoff Settings: SI On 
#################################################################################
AAE_INFO: 1 threads acquired from CTE.
Start delay calculation (fullDC) (1 T). (MEM=2662.9)
Total number of fetched objects 32145
AAE_INFO: Total number of nets for which stage creation was skipped for all views 0
AAE_INFO-618: Total number of nets in the design is 32215,  100.0 percent of the nets selected for SI analysis
End delay calculation. (MEM=2647.02 CPU=0:00:06.6 REAL=0:00:07.0)
End delay calculation (fullDC). (MEM=2647.02 CPU=0:00:07.1 REAL=0:00:07.0)
Loading CTE timing window with TwFlowType 0...(CPU = 0:00:00.0, REAL = 0:00:00.0, MEM = 2647.0M)
Add other clocks and setupCteToAAEClockMapping during iter 1
Loading CTE timing window is completed (CPU = 0:00:00.1, REAL = 0:00:01.0, MEM = 2647.0M)

Executing IPO callback for view pruning ..

Active hold views:
 func_default
  Dominating endpoints: 0
  Dominating TNS: -0.000

Starting SI iteration 2
Start delay calculation (fullDC) (1 T). (MEM=2638.15)
Glitch Analysis: View func_default -- Total Number of Nets Skipped = 196. 
Glitch Analysis: View func_default -- Total Number of Nets Analyzed = 32145. 
Total number of fetched objects 32145
AAE_INFO: Total number of nets for which stage creation was skipped for all views 0
AAE_INFO-618: Total number of nets in the design is 32215,  0.5 percent of the nets selected for SI analysis
End delay calculation. (MEM=2651.84 CPU=0:00:00.2 REAL=0:00:00.0)
End delay calculation (fullDC). (MEM=2651.84 CPU=0:00:00.3 REAL=0:00:00.0)
*** Done Building Timing Graph (cpu=0:00:09.8 real=0:00:10.0 totSessionCpu=0:13:58 mem=2651.8M)
Done building cte hold timing graph (fixHold) cpu=0:00:11.2 real=0:00:11.0 totSessionCpu=0:13:58 mem=2651.8M ***
OPTC: user 20.0
Done building hold timer [1 node(s), 0 edge(s), 1 view(s)] (fixHold) cpu=0:00:11.9 real=0:00:12.0 totSessionCpu=0:13:59 mem=2667.8M ***
Restoring timing graph ...
AAE_INFO: Resetting and re-constructing cache for AAE clocks ...
Done restore timing graph
Done building cte setup timing graph (fixHold) cpu=0:00:12.7 real=0:00:13.0 totSessionCpu=0:14:00 mem=2712.4M ***
OPTC: m1 20.0 20.0
Setting latch borrow mode to budget during optimization.

*Info: minBufDelay = 14.0 ps, libStdDelay = 9.9 ps, minBufSize = 6840000 (5.0)
*Info: worst delay setup view: func_default

------------------------------------------------------------------
     Hold Opt Initial Summary
------------------------------------------------------------------

Setup views included:
 func_default
Hold views included:
 func_default

+--------------------+---------+---------+---------+
|     Setup mode     |   all   | reg2reg | default |
+--------------------+---------+---------+---------+
|           WNS (ns):|  0.368  |  0.368  |  1.908  |
|           TNS (ns):|  0.000  |  0.000  |  0.000  |
|    Violating Paths:|    0    |    0    |    0    |
|          All Paths:|  1189   |  1165   |   24    |
+--------------------+---------+---------+---------+

+--------------------+---------+---------+---------+
|     Hold mode      |   all   | reg2reg | default |
+--------------------+---------+---------+---------+
|           WNS (ns):|  0.001  |  0.052  |  0.001  |
|           TNS (ns):|  0.000  |  0.000  |  0.000  |
|    Violating Paths:|    0    |    0    |    0    |
|          All Paths:|  1189   |  1165   |   24    |
+--------------------+---------+---------+---------+

+----------------+-------------------------------+------------------+
|                |              Real             |       Total      |
|    DRVs        +------------------+------------+------------------|
|                |  Nr nets(terms)  | Worst Vio  |  Nr nets(terms)  |
+----------------+------------------+------------+------------------+
|   max_cap      |      0 (0)       |   0.000    |      0 (0)       |
|   max_tran     |      0 (0)       |   0.000    |      0 (0)       |
|   max_fanout   |      0 (0)       |     0      |      0 (0)       |
|   max_length   |      0 (0)       |     0      |      0 (0)       |
+----------------+------------------+------------+------------------+

Density: 70.270%
------------------------------------------------------------------
**opt_design ... cpu = 0:01:27, real = 0:01:30, mem = 2134.6M, totSessionCpu=0:14:01 **
*** BuildHoldData #2 [finish] (opt_design #3) : cpu/real = 0:00:14.0/0:00:14.2 (1.0), totSession cpu/real = 0:14:01.1/0:14:29.4 (1.0), mem = 2682.5M
*** HoldOpt #1 [begin] (opt_design #3) : totSession cpu/real = 0:14:01.1/0:14:29.4 (1.0), mem = 2682.5M
*info: Run opt_design holdfix with 1 thread.
Info: 14 clock nets excluded from IPO operation.
*** Hold timing is met. Hold fixing is not needed 
**INFO: total 0 insts, 0 nets marked don't touch
**INFO: total 0 insts, 0 nets marked don't touch DB property
**INFO: total 0 insts, 0 nets unmarked don't touch

*** HoldOpt #1 [finish] (opt_design #3) : cpu/real = 0:00:00.2/0:00:00.2 (1.0), totSession cpu/real = 0:14:01.3/0:14:29.6 (1.0), mem = 2720.6M
**INFO: flowCheckPoint #4 OptimizationPreEco
Running postRoute recovery in preEcoRoute mode
**opt_design ... cpu = 0:01:28, real = 0:01:30, mem = 2128.9M, totSessionCpu=0:14:01 **
Checking DRV degradation...
**INFO: Skipping DRV recovery as drv did not degrade beyond margin
Finish postRoute recovery in preEcoRoute mode (cpu=0:00:01, real=0:00:01, mem=2682.79M, totSessionCpu=0:14:02).
**opt_design ... cpu = 0:01:28, real = 0:01:31, mem = 2135.0M, totSessionCpu=0:14:02 **

Skipping pre eco harden opt
Running refinePlace -preserveRouting true -hardFence false
*** Starting place_detail (0:14:03 mem=2720.9M) ***
Move report: Detail placement moves 0 insts, mean move: 0.00 um, max move: 0.00 um 
	Runtime: CPU: 0:00:00.7 REAL: 0:00:01.0 MEM: 2704.9MB
Summary Report:
Instances move: 0 (out of 23777 movable)
Instances flipped: 0
Mean displacement: 0.00 um
Max displacement: 0.00 um 
Runtime: CPU: 0:00:00.7 REAL: 0:00:01.0 MEM: 2704.9MB
*** Finished place_detail (0:14:03 mem=2704.9M) ***
Default Rule : ""
Non Default Rules : "LEFSpecialRouteSpec" "VLMDefaultSetup"
Worst Slack : 0.368 ns

Start Layer Assignment ...
WNS(0.368ns) Target(0.000ns) MaxAssign(0%) MaxCong(20%) MinLen(100um) MinCap(0.050pf) layerBucket(2)

Select 0 cadidates out of 32215.
No critical nets selected. Skipped !
GigaOpt: setting up router preferences
GigaOpt: 0 nets assigned router directives

Start Assign Priority Nets ...
TargetSlk(0.200ns) MaxAssign(3%) minLen(50um)
Existing Priority Nets 0 (0.0%)
Assigned Priority Nets 0 (0.0%)

Set Prefer Layer Routing Effort ...
Total Net(32213) IPOed(0) PreferLayer(0) -> MediumEffort(0)

Default Rule : ""
Non Default Rules : "LEFSpecialRouteSpec" "VLMDefaultSetup"
Worst Slack : 0.368 ns

Start Layer Assignment ...
WNS(0.368ns) Target(0.000ns) MaxAssign(0%) MaxCong(20%) MinLen(100um) MinCap(0.050pf) layerBucket(2)

Select 0 cadidates out of 32215.
No critical nets selected. Skipped !
GigaOpt: setting up router preferences
GigaOpt: 0 nets assigned router directives

Start Assign Priority Nets ...
TargetSlk(0.200ns) MaxAssign(3%) minLen(50um)
Existing Priority Nets 0 (0.0%)
Assigned Priority Nets 0 (0.0%)

------------------------------------------------------------------
        Pre-ecoRoute Summary
------------------------------------------------------------------

Setup views included:
 func_default 

+--------------------+---------+---------+---------+
|     Setup mode     |   all   | reg2reg | default |
+--------------------+---------+---------+---------+
|           WNS (ns):|  0.368  |  0.368  |  1.908  |
|           TNS (ns):|  0.000  |  0.000  |  0.000  |
|    Violating Paths:|    0    |    0    |    0    |
|          All Paths:|  1189   |  1165   |   24    |
+--------------------+---------+---------+---------+

+----------------+-------------------------------+------------------+
|                |              Real             |       Total      |
|    DRVs        +------------------+------------+------------------|
|                |  Nr nets(terms)  | Worst Vio  |  Nr nets(terms)  |
+----------------+------------------+------------+------------------+
|   max_cap      |      0 (0)       |   0.000    |      0 (0)       |
|   max_tran     |      0 (0)       |   0.000    |      0 (0)       |
|   max_fanout   |      0 (0)       |     0      |      0 (0)       |
|   max_length   |      0 (0)       |     0      |      0 (0)       |
+----------------+------------------+------------+------------------+

Density: 70.270%
------------------------------------------------------------------
**opt_design ... cpu = 0:01:31, real = 0:01:33, mem = 2036.9M, totSessionCpu=0:14:05 **
**INFO: flowCheckPoint #5 GlobalDetailRoute
-routeWithEco false                       # bool, default=false
-routeSelectedNetOnly false               # bool, default=false
-routeWithTimingDriven false              # bool, default=false
-routeWithSiDriven false                  # bool, default=false
Existing Dirty Nets : 0
New Signature Flow (saveAndSetNanoRouteOptions) ....
Reset Dirty Nets : 0
*** EcoRoute #1 [begin] (opt_design #3) : totSession cpu/real = 0:14:04.6/0:14:32.9 (1.0), mem = 2592.5M

route_global_detail

#Start route_global_detail on Thu Dec  7 19:23:04 2023
#
#num needed restored net=0
#need_extraction net=0 (total=32215)
#NanoRoute Version 21.18-s099_1 NR230707-1955/21_18-UB
#Skip comparing routing design signature in db-snapshot flow
#Total number of trivial nets (e.g. < 2 pins) = 164 (skipped).
#Total number of routable nets = 32051.
#Total number of nets in the design = 32215.
#32051 routable nets have routed wires.
#14 detail routed (routable) nets have been constrained (e.g. have preferred extra spacing, require shielding etc.)
#No nets have been global routed.
#Start routing data preparation on Thu Dec  7 19:23:06 2023
#
#Minimum voltage of a net in the design = 0.000.
#Maximum voltage of a net in the design = 1.000.
#Voltage range [0.000 - 1.000] has 32213 nets.
#Voltage range [1.000 - 1.000] has 1 net.
#Voltage range [0.000 - 0.000] has 1 net.
#Build and mark too close pins for the same net.
#Initial pin access analysis.
#Detail pin access analysis.
# Metal1       H   Track-Pitch = 0.19000    Line-2-Via Pitch = 0.13000
# Metal2       V   Track-Pitch = 0.20000    Line-2-Via Pitch = 0.15000
# Metal3       H   Track-Pitch = 0.19000    Line-2-Via Pitch = 0.15000
# Metal4       V   Track-Pitch = 0.20000    Line-2-Via Pitch = 0.15000
# Metal5       H   Track-Pitch = 0.19000    Line-2-Via Pitch = 0.15000
# Metal6       V   Track-Pitch = 0.20000    Line-2-Via Pitch = 0.15000
# Metal7       H   Track-Pitch = 0.19000    Line-2-Via Pitch = 0.15000
# Metal8       V   Track-Pitch = 0.20000    Line-2-Via Pitch = 0.15000
# Metal9       H   Track-Pitch = 0.19000    Line-2-Via Pitch = 0.15000
# Metal10      V   Track-Pitch = 0.50000    Line-2-Via Pitch = 0.42000
# Metal11      H   Track-Pitch = 0.47500    Line-2-Via Pitch = 0.43000
#Bottom routing layer index=2(Metal2), bottom routing layer for shielding=2(Metal2), bottom shield layer=2(Metal2)
#shield_bottom_stripe_layer=1(Metal1), shield_top_stripe_layer=11(Metal11)
#pin_access_rlayer=2(Metal2)
#shield_top_dpt_rlayer=-1 top_rlayer=11 top_trim_metal_rlayer=-1 rlayer_lowest=1 bottom_rlayer=2
#enable_trim_layer_shield=F enable_dpt_layer_shield=F has_line_end_grid=F
#Processed 0/0 dirty instances, 0/0 dirty terms, 0/0 dirty fterms, 0/0 dirty pgterms, 0/0 misc dirty regions(0 insts marked dirty, reset pre-exisiting dirty flag on 0 insts, 0 nets marked need extraction)
#cpu time = 00:00:00, elapsed time = 00:00:00, memory = 2006.86 (MB), peak = 2178.59 (MB)
#Regenerating Ggrids automatically.
#Auto generating G-grids with size=15 tracks, using layer Metal3's pitch = 0.19000.
#Using automatically generated G-grids.
#Done routing data preparation.
#cpu time = 00:00:02, elapsed time = 00:00:02, memory = 2011.42 (MB), peak = 2178.59 (MB)
#Minimum voltage of a net in the design = 0.000.
#Maximum voltage of a net in the design = 1.000.
#Voltage range [0.000 - 1.000] has 32213 nets.
#Voltage range [1.000 - 1.000] has 1 net.
#Voltage range [0.000 - 0.000] has 1 net.
#Found 0 nets for post-route si or timing fixing.
#
#Finished routing data preparation on Thu Dec  7 19:23:08 2023
#
#Cpu time = 00:00:02
#Elapsed time = 00:00:02
#Increased memory = 9.01 (MB)
#Total memory = 2011.42 (MB)
#Peak memory = 2178.59 (MB)
#
#
#Start global routing on Thu Dec  7 19:23:08 2023
#
#
#Start global routing initialization on Thu Dec  7 19:23:08 2023
#
#WARNING (NRGR-22) Design is already detail routed.
#Minimum voltage of a net in the design = 0.000.
#Maximum voltage of a net in the design = 1.000.
#Voltage range [0.000 - 1.000] has 32213 nets.
#Voltage range [1.000 - 1.000] has 1 net.
#Voltage range [0.000 - 0.000] has 1 net.
#Minimum voltage of a net in the design = 0.000.
#Maximum voltage of a net in the design = 1.000.
#Voltage range [0.000 - 1.000] has 32213 nets.
#Voltage range [1.000 - 1.000] has 1 net.
#Voltage range [0.000 - 0.000] has 1 net.
#Routing data preparation, pin analysis, global routing and track assignment statistics:
#Cpu time = 00:00:03
#Elapsed time = 00:00:03
#Increased memory = 9.01 (MB)
#Total memory = 2011.42 (MB)
#Peak memory = 2178.59 (MB)
#Minimum voltage of a net in the design = 0.000.
#Maximum voltage of a net in the design = 1.000.
#Voltage range [0.000 - 1.000] has 32213 nets.
#Voltage range [1.000 - 1.000] has 1 net.
#Voltage range [0.000 - 0.000] has 1 net.
#Minimum voltage of a net in the design = 0.000.
#Maximum voltage of a net in the design = 1.000.
#Voltage range [0.000 - 1.000] has 32213 nets.
#Voltage range [1.000 - 1.000] has 1 net.
#Voltage range [0.000 - 0.000] has 1 net.
#Minimum voltage of a net in the design = 0.000.
#Maximum voltage of a net in the design = 1.000.
#Voltage range [0.000 - 1.000] has 32213 nets.
#Voltage range [1.000 - 1.000] has 1 net.
#Voltage range [0.000 - 0.000] has 1 net.
#Minimum voltage of a net in the design = 0.000.
#Maximum voltage of a net in the design = 1.000.
#Voltage range [0.000 - 1.000] has 32213 nets.
#Voltage range [1.000 - 1.000] has 1 net.
#Voltage range [0.000 - 0.000] has 1 net.
#
#Start Detail Routing..
#start initial detail routing ...
#   number of violations = 0
#cpu time = 00:00:01, elapsed time = 00:00:01, memory = 2011.40 (MB), peak = 2178.59 (MB)
#Complete Detail Routing.
#Total number of nets with non-default rule or having extra spacing = 14
#Total wire length = 385792 um.
#Total half perimeter of net bounding box = 347219 um.
#Total wire length on LAYER Metal1 = 0 um.
#Total wire length on LAYER Metal2 = 106408 um.
#Total wire length on LAYER Metal3 = 141153 um.
#Total wire length on LAYER Metal4 = 88917 um.
#Total wire length on LAYER Metal5 = 41913 um.
#Total wire length on LAYER Metal6 = 7289 um.
#Total wire length on LAYER Metal7 = 112 um.
#Total wire length on LAYER Metal8 = 0 um.
#Total wire length on LAYER Metal9 = 0 um.
#Total wire length on LAYER Metal10 = 0 um.
#Total wire length on LAYER Metal11 = 0 um.
#Total number of vias = 185342
#Total number of multi-cut vias = 175050 ( 94.4%)
#Total number of single cut vias = 10292 (  5.6%)
#Up-Via Summary (total 185342):
#                   single-cut          multi-cut      Total
#-----------------------------------------------------------
# Metal1          9722 ( 10.5%)     82567 ( 89.5%)      92289
# Metal2           534 (  0.8%)     68747 ( 99.2%)      69281
# Metal3            31 (  0.2%)     18565 ( 99.8%)      18596
# Metal4             5 (  0.1%)      4732 ( 99.9%)       4737
# Metal5             0 (  0.0%)       431 (100.0%)        431
# Metal6             0 (  0.0%)         8 (100.0%)          8
#-----------------------------------------------------------
#                10292 (  5.6%)    175050 ( 94.4%)     185342 
#
#Total number of DRC violations = 0
#Cpu time = 00:00:01
#Elapsed time = 00:00:01
#Increased memory = -0.02 (MB)
#Total memory = 2011.40 (MB)
#Peak memory = 2178.59 (MB)
#
#start routing for process antenna violation fix ...
#Minimum voltage of a net in the design = 0.000.
#Maximum voltage of a net in the design = 1.000.
#Voltage range [0.000 - 1.000] has 32213 nets.
#Voltage range [1.000 - 1.000] has 1 net.
#Voltage range [0.000 - 0.000] has 1 net.
#Minimum voltage of a net in the design = 0.000.
#Maximum voltage of a net in the design = 1.000.
#Voltage range [0.000 - 1.000] has 32213 nets.
#Voltage range [1.000 - 1.000] has 1 net.
#Voltage range [0.000 - 0.000] has 1 net.
#cpu time = 00:00:04, elapsed time = 00:00:04, memory = 2011.34 (MB), peak = 2178.59 (MB)
#
#Total number of nets with non-default rule or having extra spacing = 14
#Total wire length = 385792 um.
#Total half perimeter of net bounding box = 347219 um.
#Total wire length on LAYER Metal1 = 0 um.
#Total wire length on LAYER Metal2 = 106408 um.
#Total wire length on LAYER Metal3 = 141153 um.
#Total wire length on LAYER Metal4 = 88917 um.
#Total wire length on LAYER Metal5 = 41913 um.
#Total wire length on LAYER Metal6 = 7289 um.
#Total wire length on LAYER Metal7 = 112 um.
#Total wire length on LAYER Metal8 = 0 um.
#Total wire length on LAYER Metal9 = 0 um.
#Total wire length on LAYER Metal10 = 0 um.
#Total wire length on LAYER Metal11 = 0 um.
#Total number of vias = 185342
#Total number of multi-cut vias = 175050 ( 94.4%)
#Total number of single cut vias = 10292 (  5.6%)
#Up-Via Summary (total 185342):
#                   single-cut          multi-cut      Total
#-----------------------------------------------------------
# Metal1          9722 ( 10.5%)     82567 ( 89.5%)      92289
# Metal2           534 (  0.8%)     68747 ( 99.2%)      69281
# Metal3            31 (  0.2%)     18565 ( 99.8%)      18596
# Metal4             5 (  0.1%)      4732 ( 99.9%)       4737
# Metal5             0 (  0.0%)       431 (100.0%)        431
# Metal6             0 (  0.0%)         8 (100.0%)          8
#-----------------------------------------------------------
#                10292 (  5.6%)    175050 ( 94.4%)     185342 
#
#Total number of DRC violations = 0
#Total number of process antenna violations = 0
#Total number of net violated process antenna rule = 0
#
#
#Total number of nets with non-default rule or having extra spacing = 14
#Total wire length = 385792 um.
#Total half perimeter of net bounding box = 347219 um.
#Total wire length on LAYER Metal1 = 0 um.
#Total wire length on LAYER Metal2 = 106408 um.
#Total wire length on LAYER Metal3 = 141153 um.
#Total wire length on LAYER Metal4 = 88917 um.
#Total wire length on LAYER Metal5 = 41913 um.
#Total wire length on LAYER Metal6 = 7289 um.
#Total wire length on LAYER Metal7 = 112 um.
#Total wire length on LAYER Metal8 = 0 um.
#Total wire length on LAYER Metal9 = 0 um.
#Total wire length on LAYER Metal10 = 0 um.
#Total wire length on LAYER Metal11 = 0 um.
#Total number of vias = 185342
#Total number of multi-cut vias = 175050 ( 94.4%)
#Total number of single cut vias = 10292 (  5.6%)
#Up-Via Summary (total 185342):
#                   single-cut          multi-cut      Total
#-----------------------------------------------------------
# Metal1          9722 ( 10.5%)     82567 ( 89.5%)      92289
# Metal2           534 (  0.8%)     68747 ( 99.2%)      69281
# Metal3            31 (  0.2%)     18565 ( 99.8%)      18596
# Metal4             5 (  0.1%)      4732 ( 99.9%)       4737
# Metal5             0 (  0.0%)       431 (100.0%)        431
# Metal6             0 (  0.0%)         8 (100.0%)          8
#-----------------------------------------------------------
#                10292 (  5.6%)    175050 ( 94.4%)     185342 
#
#Total number of DRC violations = 0
#Total number of process antenna violations = 0
#Total number of net violated process antenna rule = 0
#
#Minimum voltage of a net in the design = 0.000.
#Maximum voltage of a net in the design = 1.000.
#Voltage range [0.000 - 1.000] has 32213 nets.
#Voltage range [1.000 - 1.000] has 1 net.
#Voltage range [0.000 - 0.000] has 1 net.
#Minimum voltage of a net in the design = 0.000.
#Maximum voltage of a net in the design = 1.000.
#Voltage range [0.000 - 1.000] has 32213 nets.
#Voltage range [1.000 - 1.000] has 1 net.
#Voltage range [0.000 - 0.000] has 1 net.
#
#Start Post Route wire spreading..
#Minimum voltage of a net in the design = 0.000.
#Maximum voltage of a net in the design = 1.000.
#Voltage range [0.000 - 1.000] has 32213 nets.
#Voltage range [1.000 - 1.000] has 1 net.
#Voltage range [0.000 - 0.000] has 1 net.
#Minimum voltage of a net in the design = 0.000.
#Maximum voltage of a net in the design = 1.000.
#Voltage range [0.000 - 1.000] has 32213 nets.
#Voltage range [1.000 - 1.000] has 1 net.
#Voltage range [0.000 - 0.000] has 1 net.
#
#Start data preparation for wire spreading...
#
#Data preparation is done on Thu Dec  7 19:23:17 2023
#
#Minimum voltage of a net in the design = 0.000.
#Maximum voltage of a net in the design = 1.000.
#Voltage range [0.000 - 1.000] has 32213 nets.
#Voltage range [1.000 - 1.000] has 1 net.
#Voltage range [0.000 - 0.000] has 1 net.
#
#Start Post Route Wire Spread.
#Done with 576 horizontal wires in 8 hboxes and 589 vertical wires in 8 hboxes.
#Complete Post Route Wire Spread.
#
#Total number of nets with non-default rule or having extra spacing = 14
#Total wire length = 385874 um.
#Total half perimeter of net bounding box = 347219 um.
#Total wire length on LAYER Metal1 = 0 um.
#Total wire length on LAYER Metal2 = 106418 um.
#Total wire length on LAYER Metal3 = 141189 um.
#Total wire length on LAYER Metal4 = 88950 um.
#Total wire length on LAYER Metal5 = 41916 um.
#Total wire length on LAYER Metal6 = 7289 um.
#Total wire length on LAYER Metal7 = 112 um.
#Total wire length on LAYER Metal8 = 0 um.
#Total wire length on LAYER Metal9 = 0 um.
#Total wire length on LAYER Metal10 = 0 um.
#Total wire length on LAYER Metal11 = 0 um.
#Total number of vias = 185342
#Total number of multi-cut vias = 175050 ( 94.4%)
#Total number of single cut vias = 10292 (  5.6%)
#Up-Via Summary (total 185342):
#                   single-cut          multi-cut      Total
#-----------------------------------------------------------
# Metal1          9722 ( 10.5%)     82567 ( 89.5%)      92289
# Metal2           534 (  0.8%)     68747 ( 99.2%)      69281
# Metal3            31 (  0.2%)     18565 ( 99.8%)      18596
# Metal4             5 (  0.1%)      4732 ( 99.9%)       4737
# Metal5             0 (  0.0%)       431 (100.0%)        431
# Metal6             0 (  0.0%)         8 (100.0%)          8
#-----------------------------------------------------------
#                10292 (  5.6%)    175050 ( 94.4%)     185342 
#
#   number of violations = 0
#cpu time = 00:00:06, elapsed time = 00:00:06, memory = 2014.73 (MB), peak = 2178.59 (MB)
#CELL_VIEW filter_top,init has no DRC violation.
#Total number of DRC violations = 0
#Total number of process antenna violations = 0
#Total number of net violated process antenna rule = 0
#Post Route wire spread is done.
#Total number of nets with non-default rule or having extra spacing = 14
#Total wire length = 385874 um.
#Total half perimeter of net bounding box = 347219 um.
#Total wire length on LAYER Metal1 = 0 um.
#Total wire length on LAYER Metal2 = 106418 um.
#Total wire length on LAYER Metal3 = 141189 um.
#Total wire length on LAYER Metal4 = 88950 um.
#Total wire length on LAYER Metal5 = 41916 um.
#Total wire length on LAYER Metal6 = 7289 um.
#Total wire length on LAYER Metal7 = 112 um.
#Total wire length on LAYER Metal8 = 0 um.
#Total wire length on LAYER Metal9 = 0 um.
#Total wire length on LAYER Metal10 = 0 um.
#Total wire length on LAYER Metal11 = 0 um.
#Total number of vias = 185342
#Total number of multi-cut vias = 175050 ( 94.4%)
#Total number of single cut vias = 10292 (  5.6%)
#Up-Via Summary (total 185342):
#                   single-cut          multi-cut      Total
#-----------------------------------------------------------
# Metal1          9722 ( 10.5%)     82567 ( 89.5%)      92289
# Metal2           534 (  0.8%)     68747 ( 99.2%)      69281
# Metal3            31 (  0.2%)     18565 ( 99.8%)      18596
# Metal4             5 (  0.1%)      4732 ( 99.9%)       4737
# Metal5             0 (  0.0%)       431 (100.0%)        431
# Metal6             0 (  0.0%)         8 (100.0%)          8
#-----------------------------------------------------------
#                10292 (  5.6%)    175050 ( 94.4%)     185342 
#
#route_detail Statistics:
#Cpu time = 00:00:14
#Elapsed time = 00:00:14
#Increased memory = 3.31 (MB)
#Total memory = 2014.73 (MB)
#Peak memory = 2178.59 (MB)
#Skip updating routing design signature in db-snapshot flow
#
#route_global_detail statistics:
#Cpu time = 00:00:19
#Elapsed time = 00:00:19
#Increased memory = -29.81 (MB)
#Total memory = 2007.06 (MB)
#Peak memory = 2178.59 (MB)
#Number of warnings = 1
#Total number of warnings = 6
#Number of fails = 0
#Total number of fails = 0
#Complete route_global_detail on Thu Dec  7 19:23:24 2023
#
*** EcoRoute #1 [finish] (opt_design #3) : cpu/real = 0:00:19.0/0:00:19.2 (1.0), totSession cpu/real = 0:14:23.7/0:14:52.1 (1.0), mem = 2584.5M
**opt_design ... cpu = 0:01:50, real = 0:01:53, mem = 2007.1M, totSessionCpu=0:14:24 **
New Signature Flow (restoreNanoRouteOptions) ....
OPTC: user 20.0
**INFO: flowCheckPoint #6 PostEcoSummary
Extraction called for design 'filter_top' of instances=23790 and nets=32215 using extraction engine 'post_route' at effort level 'high' .
Integrated QRC (IQuantus) Extraction in Multi-Corner mode called for design 'filter_top'. Number of corners is 1.
Region and/or Nets changed are small. Going for incremental extraction

INFO (EXTIQUANTUS-101) : 
  Integrated Quantus - 64-bit Parasitic Extractor - Version 21.1.1-s966
-------------------------------------------------------------------------
               Copyright 2023 Cadence Design Systems, Inc.


INFO (EXTIQUANTUS-103) : Starting at 2023-Dec-07 19:23:25 (2023-Dec-08 00:23:25 GMT).

INFO (EXTIQUANTUS-104) : Starting extraction session...
 Min pitch recieved = 1520 
IQuantus Extraction invoked in single CPU mode. Commands set_distribute_host/set_multi_cpu_usage can be used to activate multiCPU extraction.

IQuantus Extraction engine initialization using 1 tech files:
	/opt/cadence/libraries/gsclib045_all_v4.7/gsclib045/qrc/qx/gpdk045.tch at temperature 125C . 

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

INFO (EXTIQUANTUS-101) : 
  Integrated Quantus - 64-bit Parasitic Extractor - Version 21.1.1-s966
-------------------------------------------------------------------------
               Copyright 2023 Cadence Design Systems, Inc.


INFO (EXTIQUANTUS-103) : Starting at 2023-Dec-07 19:23:25 (2023-Dec-08 00:23:25 GMT).

INFO (EXTIQUANTUS-104) : Starting extraction session...

INFO (EXTIQUANTUS-159) : Loading technology data from file:
  /opt/cadence/libraries/gsclib045_all_v4.7/gsclib045/qrc/qx/gpdk045.tch

INFO (EXTIQUANTUS-159) : Loading technology data from file:
  /opt/cadence/libraries/gsclib045_all_v4.7/gsclib045/qrc/qx/gpdk045.tch

INFO (EXTIQUANTUS-289) : Loading RCgen extraction models from file:
  /opt/cadence/libraries/gsclib045_all_v4.7/gsclib045/qrc/qx/gpdk045.tch

INFO (EXTIQUANTUS-289) : Loading RCgen extraction models from file:
  /opt/cadence/libraries/gsclib045_all_v4.7/gsclib045/qrc/qx/gpdk045.tch

INFO (EXTIQUANTUS-345) : Checking Command/Tech/License Files. 

INFO (EXTIQUANTUS-345) : Checking Command/Tech/License Files. 

INFO (EXTIQUANTUS-383) : Summary of license(s) checkout :
	1 count of QTS300
	1 count of QTS310

INFO (EXTIQUANTUS-383) : Summary of license(s) checkout :
	1 count of QTS300
	1 count of QTS310

INFO (EXTIQUANTUS-105) : Starting design extraction....

INFO (EXTIQUANTUS-105) : Starting design extraction....
No layermap file specified. Automatically mapping tech and lef layers. Log file is 'extLogDir/IQuantus_07-Dec-2023_19:21:43_31472_afkIxu/extr.filter_top.layermap.log'.
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
IQuantus Extraction engine initialized successfully.

Dumping IQuantus extraction options in file 'extLogDir/IQuantus_07-Dec-2023_19:21:43_31472_afkIxu/extr.filter_top.extraction_options.log'.
Initialization for IQuantus Incremental Extraction DONE (CPU Time: 0:00:01.8  Real Time: 0:00:02.0  MEM: 2603.180M)

Geometry processing of Gray and Metal fill STARTED.................... DONE (CPU Time: 0:00:01.1  Real Time: 0:00:01.0  MEM: 2603.242M)
Geometry processing of nets STARTED...................
INFO (EXTIQUANTUS-282) : Checking Command/Tech Files. 

INFO (EXTIQUANTUS-277) : Manufacturing Data Information :- 
  DEF/GDS file 
    does NOT contain MetalFill data. 
  Techfile  
    does NOT contain WEE data.     
    does NOT contain Erosion data t=f( density ) 
    does NOT contain R(w) data.    
    does NOT contain R(w, s) data.  
    does NOT contain TC(w) data.    
    does NOT contain T/B enlargement data. 
    does     contain Floating Metal Fill models. 

INFO (EXTIQUANTUS-287) : Capacitance Models Information :- 
 ICECAPS models are not available. 
 RCgen   models are     available. 
 This IQuantus session uses RCgen models.

INFO (EXTIQUANTUS-286) : RCs effects computed for this session include :- 
 MetalFill        : OFF 
 WEE Effects      : n/a 
 Erosion Effects  : n/a t=f( density ) 
 T/B Enlargements : n/a 
 R(w) Effects     : n/a 
 R(w,s) Effects   : n/a 
 TC(w) Effects     : n/a 
Some effects indicate n/a because of non-availability of relevantinput data
(or) requested to be off (and/or) usage of older Icecaps models.
. DONE (NETS: 32051  Geometries: 582733  CPU Time: 0:00:02.6  Real Time: 0:00:03.0  MEM: 2628.312M)

Extraction of Geometries STARTED.
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

INFO (EXTIQUANTUS-282) : Checking Command/Tech Files. 

INFO (EXTIQUANTUS-277) : Manufacturing Data Information :- 
  DEF/GDS file 
    does NOT contain MetalFill data. 
  Techfile  
    does NOT contain WEE data.     
    does NOT contain Erosion data t=f( density ) 
    does NOT contain R(w) data.    
    does NOT contain R(w, s) data.  
    does NOT contain TC(w) data.    
    does NOT contain T/B enlargement data. 
    does     contain Floating Metal Fill models. 

INFO (EXTIQUANTUS-287) : Capacitance Models Information :- 
 ICECAPS models are not available. 
 RCgen   models are     available. 
 This IQuantus session uses RCgen models.

INFO (EXTIQUANTUS-286) : RCs effects computed for this session include :- 
 MetalFill        : OFF 
 WEE Effects      : n/a 
 Erosion Effects  : n/a t=f( density ) 
 T/B Enlargements : n/a 
 R(w) Effects     : n/a 
 R(w,s) Effects   : n/a 
 TC(w) Effects     : n/a 
Some effects indicate n/a because of non-availability of relevantinput data
(or) requested to be off (and/or) usage of older Icecaps models.

INFO (EXTHPY-103) : Extracting capacitance values.

INFO (EXTHPY-267) :  
 DESIGN                       : 
 DEF/OA DIEAREA BBOX          : 2147483647 2147483647 -2147483648
-2147483648
 DEF/OA UNITS                 : 10000
 FINAL SCALE FACTOR           : 1
 
 ESTIMATED COMPRESSED DEF SIZE: 0
 TILE SIZE                    : 88x85 squm
 TILE COUNT                   : 16
 CLUSTER SIZE                 : 257
 CAPDB PARTITIONS             : 16

INFO (EXTHPY-104) :    0%

INFO (EXTHPY-103) : Extracting capacitance values.

INFO (EXTHPY-267) :  
 DESIGN                       : 
 DEF/OA DIEAREA BBOX          : 2147483647 2147483647 -2147483648
-2147483648
 DEF/OA UNITS                 : 10000
 FINAL SCALE FACTOR           : 1
 
 ESTIMATED COMPRESSED DEF SIZE: 0
 TILE SIZE                    : 88x85 squm
 TILE COUNT                   : 16
 CLUSTER SIZE                 : 257
 CAPDB PARTITIONS             : 16

INFO (EXTHPY-104) :    0%

INFO (EXTHPY-104) :    7%
INFO (EXTHPY-104) :    7%


INFO (EXTHPY-104) :    13%

INFO (EXTHPY-104) :    13%

INFO (EXTHPY-104) :    20%

INFO (EXTHPY-104) :    20%


INFO (EXTHPY-104) :    27%
INFO (EXTHPY-104) :    27%

INFO (EXTHPY-104) :    33%

INFO (EXTHPY-104) :    33%

INFO (EXTHPY-104) :    40%

INFO (EXTHPY-104) :    40%

INFO (EXTHPY-104) :    47%

INFO (EXTHPY-104) :    47%

INFO (EXTHPY-104) :    53%

INFO (EXTHPY-104) :    53%

INFO (EXTHPY-104) :    60%

INFO (EXTHPY-104) :    60%

INFO (EXTHPY-104) :    67%

INFO (EXTHPY-104) :    67%

INFO (EXTHPY-104) :    73%

INFO (EXTHPY-104) :    73%

INFO (EXTHPY-104) :    80%

INFO (EXTHPY-104) :    80%

INFO (EXTHPY-104) :    87%

INFO (EXTHPY-104) :    87%

INFO (EXTHPY-104) :    93%

INFO (EXTHPY-104) :    93%

INFO (EXTHPY-104) :    100%

INFO (EXTHPY-104) :    100%
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Extraction of Geometries DONE (NETS: 32051  CPU Time: 0:00:25.0  Real Time: 0:00:26.0  MEM: 2820.207M)

Parasitic Stitching STARTED
...................
Number of nets added/deleted/changed/impacted is 0/0/951/30423 respectively. Log file is 'extLogDir/IQuantus_07-Dec-2023_19:21:43_31472_afkIxu/extr.filter_top.1.modifiedParasiticNets.log.gz'.
Number of Extracted Resistors     : 376067
Number of Extracted Ground Caps   : 408169
Number of Extracted Coupling Caps : 30762
Parasitic Stitching DONE (Nets: 32051  CPU Time: 0:00:01.5  Real Time: 0:00:01.0  MEM: 2828.215M)

IQuantus Extraction engine is being closed... 
+----------------------------------------------------------------------------------------+
|                                Incremental Extraction Statistics                       |
+--+----------------------+----------------------+---------------------------------------+
|S.|         Nets         | Nets with Parasitic  |          Extraction CpuTime           |
|No| Total   Added Deleted| Total   New-RC New-C |Extraction RC-Network Others    Total  |
+--+--------+------+------+--------+------+------+---------+---------+---------+---------+
| 0|   32145|     0|     0|   32051|     0|     0|0:00:25.7|0:00:01.0|0:00:06.8|0:00:33.6|
| 1|   32145|     0|     0|   32051|   951| 30423|0:00:25.0|0:00:01.5|0:00:06.2|0:00:32.7|
+--+--------+------+------+--------+------+------+---------+---------+---------+---------+
IQuantus Incremental Extraction DONE (CPU Time: 0:00:34.7  Real Time: 0:00:36.0  MEM: 2828.211M)
**opt_design ... cpu = 0:02:25, real = 0:02:29, mem = 2098.6M, totSessionCpu=0:14:59 **
Starting delay calculation for Setup views
AAE_INFO: opIsDesignInPostRouteState() is 1
AAE_INFO: resetNetProps viewIdx 0 
Starting SI iteration 1 using Infinite Timing Windows
#################################################################################
# Design Stage: PostRoute
# Design Name: filter_top
# Design Mode: 45nm
# Analysis Mode: MMMC OCV 
# Parasitics Mode: SPEF/RCDB 
# Signoff Settings: SI On 
#################################################################################
AAE_INFO: 1 threads acquired from CTE.
Start delay calculation (fullDC) (1 T). (MEM=2685.5)
Initializing multi-corner resistance tables ...
Total number of fetched objects 32145
AAE_INFO: Total number of nets for which stage creation was skipped for all views 0
AAE_INFO-618: Total number of nets in the design is 32215,  100.0 percent of the nets selected for SI analysis
End delay calculation. (MEM=2703.25 CPU=0:00:06.7 REAL=0:00:06.0)
End delay calculation (fullDC). (MEM=2703.25 CPU=0:00:07.5 REAL=0:00:07.0)
Loading CTE timing window with TwFlowType 0...(CPU = 0:00:00.0, REAL = 0:00:00.0, MEM = 2703.2M)
Add other clocks and setupCteToAAEClockMapping during iter 1
Loading CTE timing window is completed (CPU = 0:00:00.1, REAL = 0:00:00.0, MEM = 2703.2M)
Starting SI iteration 2
Start delay calculation (fullDC) (1 T). (MEM=2637.37)
Glitch Analysis: View func_default -- Total Number of Nets Skipped = 172. 
Glitch Analysis: View func_default -- Total Number of Nets Analyzed = 32145. 
Total number of fetched objects 32145
AAE_INFO: Total number of nets for which stage creation was skipped for all views 0
AAE_INFO-618: Total number of nets in the design is 32215,  0.5 percent of the nets selected for SI analysis
End delay calculation. (MEM=2683.07 CPU=0:00:00.2 REAL=0:00:01.0)
End delay calculation (fullDC). (MEM=2683.07 CPU=0:00:00.3 REAL=0:00:01.0)
*** Done Building Timing Graph (cpu=0:00:10.5 real=0:00:10.0 totSessionCpu=0:15:09 mem=2683.1M)

------------------------------------------------------------------
       Post-ecoRoute Summary
------------------------------------------------------------------

Setup views included:
 func_default 

+--------------------+---------+---------+---------+
|     Setup mode     |   all   | reg2reg | default |
+--------------------+---------+---------+---------+
|           WNS (ns):|  0.364  |  0.364  |  1.907  |
|           TNS (ns):|  0.000  |  0.000  |  0.000  |
|    Violating Paths:|    0    |    0    |    0    |
|          All Paths:|  1189   |  1165   |   24    |
+--------------------+---------+---------+---------+

+----------------+-------------------------------+------------------+
|                |              Real             |       Total      |
|    DRVs        +------------------+------------+------------------|
|                |  Nr nets(terms)  | Worst Vio  |  Nr nets(terms)  |
+----------------+------------------+------------+------------------+
|   max_cap      |      0 (0)       |   0.000    |      0 (0)       |
|   max_tran     |      0 (0)       |   0.000    |      0 (0)       |
|   max_fanout   |      0 (0)       |     0      |      0 (0)       |
|   max_length   |      0 (0)       |     0      |      0 (0)       |
+----------------+------------------+------------+------------------+

Density: 70.270%
------------------------------------------------------------------
**opt_design ... cpu = 0:02:36, real = 0:02:40, mem = 2107.2M, totSessionCpu=0:15:10 **
Executing marking Critical Nets1
**INFO: flowCheckPoint #7 OptimizationRecovery
*** Timing Is met
*** Check timing (0:00:00.0)
Running postRoute recovery in postEcoRoute mode
**opt_design ... cpu = 0:02:36, real = 0:02:40, mem = 2107.3M, totSessionCpu=0:15:10 **
Checking setup slack degradation ...
Checking DRV degradation...
**INFO: Skipping DRV recovery as drv did not degrade beyond margin
Finish postRoute recovery in postEcoRoute mode (cpu=0:00:00, real=0:00:00, mem=2655.39M, totSessionCpu=0:15:10).
**opt_design ... cpu = 0:02:36, real = 0:02:40, mem = 2107.3M, totSessionCpu=0:15:10 **

Latch borrow mode reset to max_borrow
**INFO: flowCheckPoint #8 FinalSummary
OPTC: user 20.0
Reported timing to dir reports/STA
**opt_design ... cpu = 0:02:37, real = 0:02:41, mem = 2107.4M, totSessionCpu=0:15:11 **
Saving timing graph ...
Done save timing graph
Starting delay calculation for Hold views
AAE_INFO: opIsDesignInPostRouteState() is 1
AAE_INFO: resetNetProps viewIdx 0 
Starting SI iteration 1 using Infinite Timing Windows
#################################################################################
# Design Stage: PostRoute
# Design Name: filter_top
# Design Mode: 45nm
# Analysis Mode: MMMC OCV 
# Parasitics Mode: SPEF/RCDB 
# Signoff Settings: SI On 
#################################################################################
AAE_INFO: 1 threads acquired from CTE.
Start delay calculation (fullDC) (1 T). (MEM=2666.19)
Total number of fetched objects 32145
AAE_INFO: Total number of nets for which stage creation was skipped for all views 0
AAE_INFO-618: Total number of nets in the design is 32215,  100.0 percent of the nets selected for SI analysis
End delay calculation. (MEM=2680.88 CPU=0:00:06.3 REAL=0:00:07.0)
End delay calculation (fullDC). (MEM=2680.88 CPU=0:00:06.8 REAL=0:00:07.0)
Loading CTE timing window with TwFlowType 0...(CPU = 0:00:00.0, REAL = 0:00:00.0, MEM = 2680.9M)
Add other clocks and setupCteToAAEClockMapping during iter 1
Loading CTE timing window is completed (CPU = 0:00:00.1, REAL = 0:00:01.0, MEM = 2680.9M)
Starting SI iteration 2
Start delay calculation (fullDC) (1 T). (MEM=2631.99)
Glitch Analysis: View func_default -- Total Number of Nets Skipped = 172. 
Glitch Analysis: View func_default -- Total Number of Nets Analyzed = 32145. 
Total number of fetched objects 32145
AAE_INFO: Total number of nets for which stage creation was skipped for all views 0
AAE_INFO-618: Total number of nets in the design is 32215,  0.5 percent of the nets selected for SI analysis
End delay calculation. (MEM=2677.7 CPU=0:00:00.2 REAL=0:00:00.0)
End delay calculation (fullDC). (MEM=2677.7 CPU=0:00:00.3 REAL=0:00:00.0)
*** Done Building Timing Graph (cpu=0:00:09.1 real=0:00:10.0 totSessionCpu=0:15:21 mem=2677.7M)
Restoring timing graph ...
AAE_INFO: Resetting and re-constructing cache for AAE clocks ...
Done restore timing graph

------------------------------------------------------------------
     opt_design Final SI Timing Summary
------------------------------------------------------------------

Setup views included:
 func_default 
Hold views included:
 func_default

+--------------------+---------+---------+---------+
|     Setup mode     |   all   | reg2reg | default |
+--------------------+---------+---------+---------+
|           WNS (ns):|  0.364  |  0.364  |  1.907  |
|           TNS (ns):|  0.000  |  0.000  |  0.000  |
|    Violating Paths:|    0    |    0    |    0    |
|          All Paths:|  1189   |  1165   |   24    |
+--------------------+---------+---------+---------+

+--------------------+---------+---------+---------+
|     Hold mode      |   all   | reg2reg | default |
+--------------------+---------+---------+---------+
|           WNS (ns):|  0.001  |  0.052  |  0.001  |
|           TNS (ns):|  0.000  |  0.000  |  0.000  |
|    Violating Paths:|    0    |    0    |    0    |
|          All Paths:|  1189   |  1165   |   24    |
+--------------------+---------+---------+---------+

+----------------+-------------------------------+------------------+
|                |              Real             |       Total      |
|    DRVs        +------------------+------------+------------------|
|                |  Nr nets(terms)  | Worst Vio  |  Nr nets(terms)  |
+----------------+------------------+------------+------------------+
|   max_cap      |      0 (0)       |   0.000    |      0 (0)       |
|   max_tran     |      0 (0)       |   0.000    |      0 (0)       |
|   max_fanout   |      0 (0)       |     0      |      0 (0)       |
|   max_length   |      0 (0)       |     0      |      0 (0)       |
+----------------+------------------+------------+------------------+

Density: 70.270%
------------------------------------------------------------------
**opt_design ... cpu = 0:02:50, real = 0:02:55, mem = 2142.2M, totSessionCpu=0:15:24 **
 ReSet Options after AAE Based Opt flow 
*** Finished opt_design ***
      flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:*                                       0.000 ns          0.364 ns  final
UM: Running design category ...
------------------------------------------------------------
	Current design flip-flop statistics

Single-Bit FF Count          :         1198
Multi-Bit FF Count           :            0
Total Bit Count              :         1198
Total FF Count               :         1198
Bits Per Flop                :        1.000
Total Clock Pin Cap(FF)      :      352.216
Multibit Conversion Ratio(%) :         0.00
------------------------------------------------------------
------------------------------------------------------------
            Multi-bit cell usage statistics

------------------------------------------------------------
============================================================
Sequential Multibit cells usage statistics
------------------------------------------------------------
            Not Merged-bits         Merged-bits     Multibit Conversion %     Bits Per Flop
------------------------------------------------------------
-FlipFlops             1198                    0        0.00                    1.00
------------------------------------------------------------

------------------------------------------------------------
Seq_Mbit libcell              Bitwidth        Count
------------------------------------------------------------
Total 0
============================================================
------------------------------------------------------------
Category            Num of Insts Rejected     Reasons
------------------------------------------------------------
------------------------------------------------------------
      flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:         490.23            512          0.000 ns          0.364 ns  opt_design_postroute
Info: Destroy the CCOpt slew target map.
*** opt_design #3 [finish] : cpu/real = 0:02:51.5/0:02:56.6 (1.0), totSession cpu/real = 0:15:25.3/0:15:55.8 (1.0), mem = 2706.1M
@file 123:
@file 124: #-----------------------------------------------------------------------
@file 125: ## Add filler cells
@file 126: #-----------------------------------------------------------------------
@@file 127: set_db add_fillers_cells {FILL64 FILL32 FILL16 FILL8 FILL4 FILL2 FILL1}
@@file 128: add_fillers
**WARN: (IMPSP-5217):	add_fillers command is running on a postRoute database. It is recommended to be followed by eco_route -target command to make the DRC clean.
Type 'man IMPSP-5217' for more detail.
*INFO: Adding fillers to top-module.
*INFO:   Added 86 filler insts (cell FILL64 / prefix FILLER).
*INFO:   Added 119 filler insts (cell FILL32 / prefix FILLER).
*INFO:   Added 440 filler insts (cell FILL16 / prefix FILLER).
*INFO:   Added 1584 filler insts (cell FILL8 / prefix FILLER).
*INFO:   Added 4898 filler insts (cell FILL4 / prefix FILLER).
*INFO:   Added 12751 filler insts (cell FILL2 / prefix FILLER).
*INFO:   Added 11354 filler insts (cell FILL1 / prefix FILLER).
*INFO: Total 31232 filler insts added - prefix FILLER (CPU: 0:00:01.9).
For 31232 new insts, @file 129:
@file 130: #-----------------------------------------------------------------------
@file 131: ## Verification: physical, logical equivalent checking and timing
@file 132: #-----------------------------------------------------------------------
@file 133:
@file 134: # DRC and LVS
@@file 135: check_drc           -out_file reports/check_drc.rpt
#-check_same_via_cell true               # bool, default=false, user setting
#-report reports/check_drc.rpt           # string, default="", user setting
 *** Starting Verify DRC (MEM: 2684.6) ***

  VERIFY DRC ...... Starting Verification
  VERIFY DRC ...... Initializing
  VERIFY DRC ...... Deleting Existing Violations
  VERIFY DRC ...... Creating Sub-Areas
  VERIFY DRC ...... Using new threading

  Verification Complete : 0 Viols.

 *** End Verify DRC (CPU: 0:00:12.7  ELAPSED TIME: 13.00  MEM: 264.1M) ***

@@file 136: check_connectivity  -out_file reports/check_connectivity.rpt
VERIFY_CONNECTIVITY use new engine.

******** Start: VERIFY CONNECTIVITY ********
Start Time: Thu Dec  7 19:24:42 2023

Design Name: filter_top
Database Units: 2000
Design Boundary: (0.0000, 0.0000) (354.2000, 353.2100)
Error Limit = 1000; Warning Limit = 50
Check all nets
**** 19:24:42 **** Processed 5000 nets.
**** 19:24:43 **** Processed 10000 nets.
**** 19:24:43 **** Processed 15000 nets.
**** 19:24:43 **** Processed 20000 nets.
**** 19:24:43 **** Processed 25000 nets.
**** 19:24:43 **** Processed 30000 nets.

Begin Summary 
  Found no problems or warnings.
End Summary

End Time: Thu Dec  7 19:24:44 2023
Time Elapsed: 0:00:02.0

******** End: VERIFY CONNECTIVITY ********
  Verification Complete : 0 Viols.  0 Wrngs.
  (CPU Time: 0:00:01.5  MEM: 0.000M)

@file 137:
@file 138: #-----------------------------------------------------------------------
@file 139: ## Signoff extraction
@file 140: #-----------------------------------------------------------------------
@file 141: # Select QRC extraction to be in signoff mode
@@file 142: set_db extract_rc_engine post_route
**WARN: (IMPEXT-3493):	The design extraction status has been reset by set_analysis_view/update_rc_corner or set_db  command. The parasitic data can be regenerated either by extracting the design using the extract_rc command or by loading the SPEF or RCDB file(s). To prevent resetting of the extraction status, avoid changing extraction modes.
Type 'man IMPEXT-3493' for more detail.
@@file 143: set_db extract_rc_effort_level signoff
default_rc
@@file 144: set_db extract_rc_coupled true
@@file 145: set_db extract_rc_lef_tech_file_map cds45.layermap
@file 146:
@@file 147: extract_rc
**WARN: (IMPEXT-1285):	The data for incremental IQuantus extraction is deleted because when the extractRC command is invoked, the parasitic data is reset. This forces the next IQuantus extraction run to be full chip.
Extraction called for design 'filter_top' of instances=55022 and nets=32215 using extraction engine 'post_route' at effort level 'signoff' .


  Cadence Quantus Extraction - 64-bit Parasitic Extractor - Version
22.1.1-p041 Mon Apr 17 07:53:34 PDT 2023
---------------------------------------------------------------------------------------------------------------
                                  Copyright 2023 Cadence Design Systems,
Inc.



INFO (EXTQRCXLOG-128) : Quantus command line:
 Started at: 2023-Dec-07 19:24:45 (2023-Dec-08 00:24:45 GMT)
 Executable: /opt/cadence/QUANTUS221/tools.lnx86/extraction/bin/64bit/qrc
 Options:     -cmd
/tmp/innovus_temp_31472_arc-schaumont-class-vm_ebapinis_EhuNvd/tmp_qrc_miD0rV/qrc.cmd
/tmp/innovus_temp_31472_arc-schaumont-class-vm_ebapinis_EhuNvd/tmp_qrc_miD0rV/qrc.def.gz
 Current working directory: /home/ebapinis/ECE_574_Proj/layout


INFO (EXTQRCXLOG-103) : The Command File Options for the current Quantus run are as follows:

extract \
	 -selection "all" \
	 -type "rc_coupled"
extraction_setup \
	 -promote_pin_pad "LOGICAL" \
	 -technology_layer_map \
		"Poly  polycide  " \
		"Cont  cont  " \
		"Metal1  metal_1  " \
		"Via1  via_1  " \
		"Metal2  metal_2  " \
		"Via2  via_2  " \
		"Metal3  metal_3  " \
		"Via3  via_3  " \
		"Metal4  metal_4  " \
		"Via4  via_4  " \
		"Metal5  metal_5  " \
		"Via5  via_5  " \
		"Metal6  metal_6  " \
		"Via6  via_6  " \
		"Metal7  metal_7  " \
		"Via7  via_7  " \
		"Metal8  metal_8  " \
		"Via8  via_8  " \
		"Metal9  metal_9  " \
		"Via9  via_9  " \
		"Metal10  metal_10  " \
		"Via10  via_10  " \
		"Metal11  metal_11  "
filter_coupling_cap \
	 -cap_filtering_mode "absolute_and_relative" \
	 -coupling_cap_threshold_absolute 0.1 \
	 -coupling_cap_threshold_relative 1.0 \
	 -total_cap_threshold 0.0
input_db -type def \
	 -lef_file_list_file "/tmp/innovus_temp_31472_arc-schaumont-class-vm_ebapinis_EhuNvd/tmp_qrc_miD0rV/qrc.leflist"
log_file \
	 -dump_options true \
	 -file_name "qrc_31472_20231207_19:24:44.log"
output_db -type spef \
	 -short_incomplete_net_pins true \
	 -subtype "STANDARD"
output_setup \
	 -compressed true \
	 -directory_name "/tmp/innovus_temp_31472_arc-schaumont-class-vm_ebapinis_EhuNvd/tmp_qrc_miD0rV" \
	 -file_name "filter_top" \
	 -temporary_directory_name "/tmp/innovus_temp_31472_arc-schaumont-class-vm_ebapinis_EhuNvd/tmp_qrc_miD0rV"
process_technology \
	 -technology_corner \
		"default_rc" \
	 -technology_library_file "/tmp/innovus_temp_31472_arc-schaumont-class-vm_ebapinis_EhuNvd/tmp_qrc_miD0rV/_qrc_techlib.defs" \
	 -technology_name "_qrc_tech_" \
	 -temperature \
		"125"




INFO (EXTGRMP-102) : Starting at 2023-Dec-07 19:24:45 (2023-Dec-08 00:24:45 GMT) on host
arc-schaumont-class-vm with pid 5481.
Running binary as: 
 /opt/cadence/QUANTUS221/tools.lnx86/extraction/bin/64bit/qrc -cmd
/tmp/innovus_temp_31472_arc-schaumont-class-vm_ebapinis_EhuNvd/tmp_qrc_miD0rV/qrc.cmd
/tmp/innovus_temp_31472_arc-schaumont-class-vm_ebapinis_EhuNvd/tmp_qrc_miD0rV/qrc.def.gz
 

WARNING (EXTGRMP-414) : No GDSII/OASIS file is specified. Setting graybox type as LEF_OBSTRUCTION.

INFO (EXTGRMP-142) : Command line arguments:
"-cmd"
"/tmp/innovus_temp_31472_arc-schaumont-class-vm_ebapinis_EhuNvd/tmp_qrc_miD0rV/qrc.cmd"
"/tmp/innovus_temp_31472_arc-schaumont-class-vm_ebapinis_EhuNvd/tmp_qrc_miD0rV/qrc.def.gz"

INFO (EXTGRMP-143) : Option extraction_setup -copy_port_to_obs = "true"

INFO (EXTGRMP-143) : Option log_file = "qrc_31472_20231207_19:24:44.log"

INFO (EXTGRMP-143) : Option log_file -message_config_file = ""

INFO (EXTGRMP-143) : Option log_file -max_error_messages = "100"

INFO (EXTGRMP-143) : Option log_file -max_warning_messages = "10"

INFO (EXTGRMP-143) : Option log_file -max_info_messages = "1000"

INFO (EXTGRMP-143) : Option process_technology -technology_name = ""

INFO (EXTGRMP-143) : Option EM_techname = ""

INFO (EXTGRMP-143) : Option process_technology -EM_WEE_clamping_factor = "0.7"

INFO (EXTGRMP-143) : Option input_db -libgen_library_name = ""

INFO (EXTGRMP-143) : Option oa_default_rule_name = ""

INFO (EXTGRMP-143) : Option graybox -type = "obs"

INFO (EXTGRMP-143) : Option graybox -use_macro_density = "false"

INFO (EXTGRMP-143) : Option comp_prealloc = "0"

INFO (EXTGRMP-143) : Option net_prealloc = "0"

INFO (EXTGRMP-143) : Option output_setup -directory_name =
"/tmp/innovus_temp_31472_arc-schaumont-class-vm_ebapinis_EhuNvd/tmp_qrc_miD0rV"

INFO (EXTGRMP-143) : Option output_db -units = "micron"

INFO (EXTGRMP-143) : Option user_comment = ""

INFO (EXTGRMP-143) : Option output_cache_directory_name =
"/tmp/innovus_temp_31472_arc-schaumont-class-vm_ebapinis_EhuNvd/tmp_qrc_miD0rV/.qrctemp"

INFO (EXTGRMP-143) : Option keep_temporary_files = "false"

INFO (EXTGRMP-143) : Option output_density_tiles = "false"

INFO (EXTGRMP-143) : Option output_setup -file_name = "filter_top"

INFO (EXTGRMP-143) : Option output_db -type spef -predefined_spef_cells_file = ""

INFO (EXTGRMP-143) : Option parasitic_reduction -enable_reduction = "false"

INFO (EXTGRMP-143) : Option debug_log = "false"

INFO (EXTGRMP-143) : Option output_db -type spef -subtype = "generic"

INFO (EXTGRMP-143) : Option output_db -type dspf -subtype = "none"

INFO (EXTGRMP-143) : Option output_sstorm_db_name = ""

INFO (EXTGRMP-143) : Option netlist_output = "none"

INFO (EXTGRMP-143) : Option output_db -type coupling_cap_reports = "false"

INFO (EXTGRMP-143) : Option output_db -type rcdb = "false"

INFO (EXTGRMP-143) : Option output_db -hierarchy_delimiter = "/"

INFO (EXTGRMP-143) : Option output_db -busbit_delimiter = "[]"

INFO (EXTGRMP-143) : Option output_db -pin_delimiter = ":"

INFO (EXTGRMP-143) : Option output_db -output_incomplete_nets_type = "no_pin one_pin
disconnected_pin multiple_partitions floating_resistors"

INFO (EXTGRMP-143) : Option truncate_regular_wires = "false"

INFO (EXTGRMP-143) : Option extraction_setup -layout_scale = "1.0"

INFO (EXTGRMP-143) : Option output_setup -file_max_size = "9223372036854775807"

INFO (EXTGRMP-143) : Option log_file -dump_options = "true"

INFO (EXTGRMP-143) : Option short_incomplete_net_pins = "true"

INFO (EXTGRMP-143) : Option promote_incomplete_net_pins = "true"

INFO (EXTGRMP-143) : Option output_db -output_incomplete_nets = "true"

INFO (EXTGRMP-143) : Option output_db -output_unrouted_nets = "false"

INFO (EXTGRMP-143) : Option output_db -escape_special_characters = "true"

INFO (EXTGRMP-143) : Option lumped_cc_threshold = "0.0"

INFO (EXTGRMP-143) : Option parasitic_reduction -max_frequency = "1.0e+08"

INFO (EXTGRMP-143) : Option output_setup -compressed = "true"

INFO (EXTGRMP-143) : Option max_resistor_length = "100.0"

INFO (EXTGRMP-143) : Option promote_feedthru_ports = "none"

INFO (EXTGRMP-143) : Option promote_instance_ports = "none"

INFO (EXTGRMP-143) : Option output_promoted_feedthrus = "false"

INFO (EXTGRMP-143) : Option output_unconnected_pins = "false"

INFO (EXTGRMP-143) : Option remove_floating_metals = "false"

INFO (EXTGRMP-143) : Option promote_pin_pad = "logical"

INFO (EXTGRMP-143) : Option eco_compatible_mode = "false"

INFO (EXTGRMP-143) : Option output setup   -max_message_in_shorts_file = "100"

INFO (EXTGRMP-143) : Option cap_mode_2915 = "true"

INFO (EXTGRMP-143) : Option quickcap_file = "false"

INFO (EXTGRMP-143) : Option ict_file = "process.ict"

INFO (EXTGRMP-143) : Option quickcap_netfile = "qapi.net"

INFO (EXTGRMP-143) : Option lefcap_output = "false"

INFO (EXTGRMP-143) : Option lefcap_scale = "1.25"

INFO (EXTGRMP-143) : Option lefres_output = "false"

INFO (EXTGRMP-143) : Option kfactor_file = ""

INFO (EXTGRMP-143) : Option total_c_threshold = "0"

INFO (EXTGRMP-143) : Option relative_c_threshold = "1"

INFO (EXTGRMP-143) : Option output_cap_filtering_mode = "relative_and_coupling"

INFO (EXTGRMP-143) : Option cap_mode = "default"

INFO (EXTGRMP-143) : Option parallel_options = ""

INFO (EXTGRMP-143) : Option load_optimized_views = "true"

INFO (EXTGRMP-143) : Option enable_metal_fill_effects = "true"

INFO (EXTGRMP-143) : Option metal_fill -enable_advanced_virtual_fill = "false"

INFO (EXTGRMP-143) : Option metal_fill -type = "floating"

INFO (EXTGRMP-143) : Option vmf_metal_scheme_file = ""

INFO (EXTGRMP-143) : Option vmf_rule_file = ""

INFO (EXTGRMP-143) : Option extraction_setup -ignore_conn_to_bump = "true"

INFO (EXTGRMP-143) : Option extraction_setup -lic_queue = "0"

INFO (EXTGRMP-143) : Option extraction_setup -cerebrus_license_only = "false"

INFO (EXTGRMP-143) : Option input_db -type metal_fill -gds_file = ""

INFO (EXTGRMP-143) : Option density_check_method = "none"

INFO (EXTGRMP-143) : Option process_technology -technology_corner = "default_rc"

INFO (EXTGRMP-143) : Option process_technology -EM_technology_corner = ""

INFO (EXTGRMP-143) : Option process_technology -temperature = "125"

INFO (EXTGRMP-143) : Option promote_gray_data_pins = "false"

INFO (EXTGRMP-143) : Option extraction_setup -enable_layer_bias = "false"

INFO (EXTGRMP-143) : Option output_db -map_eeq_to_master = "false"

INFO (EXTGRMP-143) : Option output_db -match_res_cap = "false"

INFO (EXTGRMP-143) : Option merge_tile_boundary_data = "true"

INFO (EXTGRMP-143) : Option coupling_c_threshold = "0.1"

INFO (EXTGRMP-143) : Option use_icecaps_models_only = "false"

INFO (EXTGRMP-143) : Option output_db -type spef -use_name_map = "true"

INFO (EXTGRMP-143) : Option output_db -type spef -name_map_start_index = "0"

INFO (EXTGRMP-143) : Option distributed_processing -timeout = "300"

INFO (EXTGRMP-143) : Option distributed_processing -num_of_trials = "0"

INFO (EXTGRMP-143) : Option output_db -type dspf -add_cap_prefix = "false"

INFO (EXTGRMP-143) : Option output_db -type oa = "false"

INFO (EXTGRMP-143) : Option oa_analysis_point = "default"

INFO (EXTGRMP-143) : Option extraction_setup -enable_sensitivity_extraction = "false"

INFO (EXTGRMP-143) : Option report_details = "false"

INFO (EXTGRMP-143) : Option input_db -type metal_fill -offset_x = "0.0"

INFO (EXTGRMP-143) : Option input_db -type metal_fill -offset_y = "0.0"

INFO (EXTGRMP-143) : Option extraction_setup -ignore_pushdown_blockages = "false"

INFO (EXTGRMP-143) : Option output_setup -compress_temporary_files = "true"

INFO (EXTGRMP-143) : Option strong_gray_debug = "false"

INFO (EXTGRMP-143) : Option output_db -disable_instances = "true"

INFO (EXTGRMP-143) : Option output_db -disable_subnodes = "true"

INFO (EXTGRMP-143) : Option output_db -type coupling_cap_reports -dump_erosion_info = ""

INFO (EXTGRMP-143) : Option output_db -include_parasitic_res_width_drawn = "true"

INFO (EXTGRMP-143) : Option output_db -include_parasitic_res_parameters_unscaled = "false"

INFO (EXTGRMP-143) : Option enable_active_fill_via_processing = "false"

INFO (EXTGRMP-143) : Option output_db -add_explicit_vias = "false"

INFO (EXTGRMP-143) : Option output_db -include_parasitic_cap_layers = "false"

INFO (EXTGRMP-143) : Option capacitance -ground_net = "0"

INFO (EXTGRMP-143) : Option output_db -include_parasitic_res_temp_coeff = "false"

INFO (EXTGRMP-143) : Option output_setup -write_coupled_decoupled_files = "false"

INFO (EXTGRMP-143) : Option capacitance_coupling = "default"

INFO (EXTGRMP-143) : Option extraction_setup -gds_top_cell = ""

INFO (EXTGRMP-143) : Option input_db -directory_name = ""

INFO (EXTGRMP-143) : Option binary_input = "false"

INFO (EXTGRMP-143) : Option binary_output = "false"

INFO (EXTGRMP-143) : Option output_setup -enable_ieee_sensitivity = "false"

INFO (EXTGRMP-143) : Option input_db -bump_map_file = ""

INFO (EXTGRMP-143) : Option extraction_setup -enable_bump_instance = "false"

INFO (EXTGRMP-143) : Option extraction_setup -enable_tsv_instance = "false"

INFO (EXTGRMP-143) : Option extraction_setup -enable_TSV_STA_Cc_model = "false"

INFO (EXTGRMP-143) : Option extraction_setup -stitch_bump_model = "false"

INFO (EXTGRMP-143) : Option extraction_setup -stitch_tsv_model = "none"

INFO (EXTGRMP-143) : Option enable_eco_mode = "false"

INFO (EXTGRMP-143) : Option eco_file = ""

INFO (EXTGRMP-143) : Option override_eco_reference = "true"

INFO (EXTGRMP-143) : Option analysis_mode = "timing"

INFO (EXTGRMP-143) : Option use_lef_for_hierarchical_def = "false"

INFO (EXTGRMP-143) : Option enable_ws_r_scaling = "false"

INFO (EXTGRMP-143) : Option include_gate_forming_layers = "false"

INFO (EXTGRMP-143) : Option log_file -strict_error_reporting = "false"

INFO (EXTGRMP-143) : Option log_file -report_outside_die_area_object = "false"

INFO (EXTGRMP-143) : Option report_outside_diearea_object_error_limit = "1"

INFO (EXTGRMP-143) : Option change_overhang_direction = "false"

INFO (EXTGRMP-143) : Option ubump_subckt_file = ""

INFO (EXTGRMP-143) : Option tsv_subckt_file = ""

INFO (EXTGRMP-143) : Option output_setup -write_drc_violations = "false"

INFO (EXTGRMP-143) : Option log_file -max_drc_messages = "1000"

INFO (EXTGRMP-143) : Option LEF files =
"/opt/cadence/libraries/gsclib045_all_v4.7/gsclib045/lef/gsclib045_tech.lef
/opt/cadence/libraries/gsclib045_all_v4.7/gsclib045/lef/gsclib045_macro.lef"

INFO (EXTGRMP-143) : Option DEF files =
"/tmp/innovus_temp_31472_arc-schaumont-class-vm_ebapinis_EhuNvd/tmp_qrc_miD0rV/qrc.def.gz"

INFO (EXTGRMP-143) : Option GDSII files = ""

INFO (EXTGRMP-143) : Option GDSII/RDL files = ""

INFO (EXTGRMP-143) : Option SPICE files = ""

INFO (EXTGRMP-143) : Option DENSITY cells = ""

INFO (EXTGRMP-143) : Option stitch bump cells = ""

INFO (EXTGRMP-143) : Option ignored macros = ""

INFO (EXTGRMP-143) : Option black macros = ""

INFO (EXTGRMP-156) : Layer mappings from the command file.
Poly --> polycide
Cont --> cont
Metal1 --> metal_1
Via1 --> via_1
Metal2 --> metal_2
Via2 --> via_2
Metal3 --> metal_3
Via3 --> via_3
Metal4 --> metal_4
Via4 --> via_4
Metal5 --> metal_5
Via5 --> via_5
Metal6 --> metal_6
Via6 --> via_6
Metal7 --> metal_7
Via7 --> via_7
Metal8 --> metal_8
Via8 --> via_8
Metal9 --> metal_9
Via9 --> via_9
Metal10 --> metal_10
Via10 --> via_10
Metal11 --> metal_11

INFO (EXTGRMP-276) : Gds/Oasis Layer Map settings were not specified.

INFO (EXTGRMP-548) : Gds/Oasis Fill layer Map settings were not specified.

INFO (EXTGRMP-550) : Gds/Oasis Active Fill layer Map settings were not specified.

INFO (EXTGRMP-562) : HPB layer settings were not specified.

INFO (EXTGRMP-828) : Gds/Oasis InfoGds layer Map settings were not specified.

INFO (EXTGRMP-623) : Background density layer mappings were not specified.

INFO (EXTGRMP-144) : There were no layer bias commands for R values.

INFO (EXTGRMP-147) : Layer bias settings for C values were not specified.

INFO (EXTGRMP-149) : Lefcap area scale settings were not specified.

INFO (EXTGRMP-153) : Lefcap edge scale settings were not specified.

INFO (EXTGRMP-151) : Parameter name settings were not specified.

INFO (EXTGRMP-260) : Layer cluster settings were not specified.

INFO (EXTHPY-253) : Extraction started at Thu Dec  7 19:24:45 2023.

INFO (EXTHPY-232) : Preprocessing stage started at Thu Dec  7 19:24:45 2023.

INFO (EXTGRMP-103) : Local job on arc-schaumont-class-vm obtained for resource 0 with 2 cores at
2023-Dec-07 19:24:45 (2023-Dec-08 00:24:45 GMT); 

WARNING (EXTGRMP-103) : Maximum size of the process stack (stacksize) on host arc-schaumont-class-vm is 32505856 bytes. Set it to a large value, preferably unlimited, to avoid any unexpected issues.


INFO (EXTGRMP-336) : Reading technology data and cell definitions from LEF file:

INFO (EXTGRMP-338) : /opt/cadence/libraries/gsclib045_all_v4.7/gsclib045/lef/gsclib045_tech.lef

WARNING (EXTGRMP-330) : LEF layer "PWdummy" is not mapped with any tech file layer. Ignoring its definition. 
An error will be issued if its definition is required.

WARNING (EXTGRMP-605) : Layer "PWdummy" will not be extracted and will be ignored.

WARNING (EXTGRMP-330) : LEF layer "Nwell" is not mapped with any tech file layer. Ignoring its definition. 
An error will be issued if its definition is required.

WARNING (EXTGRMP-605) : Layer "Nwell" will not be extracted and will be ignored.

WARNING (EXTGRMP-330) : LEF layer "Oxide" is not mapped with any tech file layer. Ignoring its definition. 
An error will be issued if its definition is required.

WARNING (EXTGRMP-605) : Layer "Oxide" will not be extracted and will be ignored.

WARNING (EXTGRMP-605) : Layer "Poly" will not be extracted and will be ignored.

INFO (EXTGRMP-338) : /opt/cadence/libraries/gsclib045_all_v4.7/gsclib045/lef/gsclib045_macro.lef

INFO (EXTGRMP-205) : Reading DEF file: /tmp/innovus_temp_31472_arc-schaumont-class-vm_ebapinis_EhuNvd/tmp_qrc_miD0rV/qrc.def.gz

INFO (EXTGRMP-195) : Reading VIAS section.

INFO (EXTGRMP-195) : Reading COMPONENTS section.

INFO (EXTGRMP-197) :    10%

INFO (EXTGRMP-197) :    20%

INFO (EXTGRMP-197) :    30%

INFO (EXTGRMP-197) :    40%

INFO (EXTGRMP-197) :    50%

INFO (EXTGRMP-197) :    60%

INFO (EXTGRMP-197) :    70%

INFO (EXTGRMP-197) :    80%

INFO (EXTGRMP-197) :    90%

INFO (EXTGRMP-195) : Reading PINS section.

INFO (EXTGRMP-195) : Reading NETS section.

INFO (EXTGRMP-195) : Reading SPECIALNETS section.

WARNING (EXTGRMP-330) : LEF layer "Bondpad" is not mapped with any tech file layer. Ignoring its definition. 
An error will be issued if its definition is required.

WARNING (EXTGRMP-184) : Gray-box mode -type lef_obstruction was selected for extraction, but 68 macro definitions did not include any obstruction data in LEF. The first 10 macros are:
 ANTENNA CLKINVX1 CLKINVX12 CLKINVX16 CLKINVX2 CLKINVX20 CLKINVX3 CLKINVX4 CLKINVX6 CLKINVX8
Check the library inputs and log files from library setup to determine whether there is a problem.

INFO (EXTGRMP-248) : METAL FILL data is not available in DEF file.

INFO (EXTGRMP-292) : Checking Command/Tech/License Files.

INFO (EXTGRMP-281) : Manufacturing Data Information :- 
  DEF/GDS/OASIS/LEF file 
    does NOT contain MetalFill data. 
  Techfile  
    does NOT contain WEE data.     
    does NOT contain Erosion data t=f( density ) 
    does NOT contain R(w) data.    
    does NOT contain R(w, s) data.  
    does NOT contain TC(w) data.    
    does NOT contain T/B enlargement data. 
    does     contain Floating Metal Fill models. 
    does NOT contain WBE data.

INFO (EXTGRMP-613) : Turbo Reduction is now turned on by default.

INFO (EXTGRMP-802) : Summary of license(s) checkout :
	1 of QTS300, 1 of QTS310

INFO (EXTGRMP-294) : RCs effects computed for this session include :- 
 MetalFill        : OFF 
 WEE Effects      : n/a 
 Erosion Effects  : n/a t=f(density) 
 T/B Enlargements : n/a 
 R(w) Effects     : n/a 
 R(w,s) Effects   : n/a 
 TC(w) Effects    : n/a 
Some effects indicate n/a because of non-availability of relevant input data (or) requested to be off.

INFO (EXTGRMP-207) : Reading DEF file completed successfully.

INFO (EXTGRMP-211) : Reading geometric data from DEF file:
/tmp/innovus_temp_31472_arc-schaumont-class-vm_ebapinis_EhuNvd/tmp_qrc_miD0rV/qrc.def.gz

INFO (EXTSNZ-156) :    1%

INFO (EXTSNZ-156) :    2%

INFO (EXTSNZ-156) :    3%

INFO (EXTSNZ-156) :    4%

INFO (EXTSNZ-156) :    5%

INFO (EXTSNZ-156) :    6%

INFO (EXTSNZ-156) :    7%

INFO (EXTSNZ-156) :    8%

INFO (EXTSNZ-156) :    9%

INFO (EXTSNZ-156) :    10%

INFO (EXTSNZ-156) :    11%

INFO (EXTSNZ-156) :    12%

INFO (EXTSNZ-156) :    13%

INFO (EXTSNZ-156) :    14%

INFO (EXTSNZ-156) :    15%

INFO (EXTSNZ-156) :    16%

INFO (EXTSNZ-156) :    17%

INFO (EXTSNZ-156) :    18%

INFO (EXTSNZ-156) :    19%

INFO (EXTSNZ-156) :    20%

INFO (EXTSNZ-156) :    21%

INFO (EXTSNZ-156) :    22%

INFO (EXTSNZ-156) :    23%

INFO (EXTSNZ-156) :    24%

INFO (EXTSNZ-156) :    25%

INFO (EXTSNZ-156) :    26%

INFO (EXTSNZ-156) :    27%

INFO (EXTSNZ-156) :    28%

INFO (EXTSNZ-156) :    29%

INFO (EXTSNZ-156) :    30%

INFO (EXTSNZ-156) :    31%

INFO (EXTSNZ-156) :    32%

INFO (EXTSNZ-156) :    33%

INFO (EXTSNZ-156) :    34%

INFO (EXTSNZ-156) :    35%

INFO (EXTSNZ-156) :    36%

INFO (EXTSNZ-156) :    37%

INFO (EXTSNZ-156) :    38%

INFO (EXTSNZ-156) :    39%

INFO (EXTSNZ-156) :    40%

INFO (EXTSNZ-156) :    41%

INFO (EXTSNZ-156) :    42%

INFO (EXTSNZ-156) :    43%

INFO (EXTSNZ-156) :    44%

INFO (EXTSNZ-156) :    45%

INFO (EXTSNZ-156) :    46%

INFO (EXTSNZ-156) :    47%

INFO (EXTSNZ-156) :    48%

INFO (EXTSNZ-156) :    49%

INFO (EXTSNZ-156) :    50%

INFO (EXTSNZ-156) :    51%

INFO (EXTSNZ-156) :    52%

INFO (EXTSNZ-156) :    53%

INFO (EXTSNZ-156) :    54%

INFO (EXTSNZ-156) :    55%

INFO (EXTSNZ-156) :    56%

INFO (EXTSNZ-156) :    57%

INFO (EXTSNZ-156) :    58%

INFO (EXTSNZ-156) :    59%

INFO (EXTSNZ-156) :    60%

INFO (EXTSNZ-156) :    61%

INFO (EXTSNZ-156) :    62%

INFO (EXTSNZ-156) :    63%

INFO (EXTSNZ-156) :    64%

INFO (EXTSNZ-156) :    65%

INFO (EXTSNZ-156) :    66%

INFO (EXTSNZ-156) :    67%

INFO (EXTSNZ-156) :    68%

INFO (EXTSNZ-156) :    69%

INFO (EXTSNZ-156) :    70%

INFO (EXTSNZ-156) :    71%

INFO (EXTSNZ-156) :    72%

INFO (EXTSNZ-156) :    73%

INFO (EXTSNZ-156) :    74%

INFO (EXTSNZ-156) :    75%

INFO (EXTSNZ-156) :    76%

INFO (EXTSNZ-156) :    77%

INFO (EXTSNZ-156) :    78%

INFO (EXTSNZ-156) :    79%

INFO (EXTSNZ-156) :    80%

INFO (EXTSNZ-156) :    81%

INFO (EXTSNZ-156) :    82%

INFO (EXTSNZ-156) :    83%

INFO (EXTSNZ-156) :    84%

INFO (EXTSNZ-156) :    85%

INFO (EXTSNZ-156) :    86%

INFO (EXTSNZ-156) :    87%

INFO (EXTSNZ-156) :    88%

INFO (EXTSNZ-156) :    89%

INFO (EXTSNZ-156) :    90%

INFO (EXTSNZ-156) :    91%

INFO (EXTSNZ-156) :    92%

INFO (EXTSNZ-156) :    93%

INFO (EXTSNZ-156) :    94%

INFO (EXTSNZ-156) :    95%

INFO (EXTSNZ-156) :    96%

INFO (EXTSNZ-156) :    97%

INFO (EXTSNZ-156) :    98%

INFO (EXTSNZ-156) :    99%

INFO (EXTGRMP-213) : Reading geometric data from DEF completed successfully.

INFO (EXTHPY-101) : Initializing gray data from all cell instances for capacitance extraction.

INFO (EXTHPY-102) : Processing of gray data completed successfully.

INFO (EXTHPY-156) : Gray pins that are touching or overlapping extracted nets will be treated as gray data during extraction.

INFO (EXTHPY-233) : Preprocessing stage completed successfully at Thu Dec  7 19:24:54 2023 with 2 CPU(s).

INFO (EXTHPY-247) : Preprocessing stage:
 Duration: 00:00:09, Max (Total) memory: 301 MB
 Max (CPU) memory: 249 MB, Max (CPU) time: 00:00:03

INFO (EXTHPY-173) : Capacitance extraction started at Thu Dec  7 19:24:54 2023.

INFO (EXTHPY-103) : Extracting capacitance values.

INFO (EXTHPY-267) :  
 DESIGN                       : filter_top
 DEF/OA DIEAREA BBOX          : 0 0 708400 706420
 DEF/OA UNITS                 : 2000
 FINAL SCALE FACTOR           : 1
 
 ESTIMATED COMPRESSED DEF SIZE: 3596548
 TILE SIZE                    : 100x100 squm
 TILE COUNT                   : 16
 CLUSTER SIZE                 : 257
 CAPDB PARTITIONS             : 16

INFO (EXTHPY-104) :    0%

INFO (EXTHPY-104) :    14%

INFO (EXTHPY-104) :    29%

INFO (EXTHPY-104) :    43%

INFO (EXTHPY-104) :    57%

INFO (EXTHPY-104) :    71%

INFO (EXTHPY-104) :    86%

INFO (EXTHPY-104) :    100%

INFO (EXTHPY-174) : Capacitance extraction completed successfully at Thu Dec  7 19:25:06 2023 with 2 CPU(s).

INFO (EXTHPY-248) : Capacitance extraction:
 Duration: 00:00:12, Max (Total) memory: 466 MB
 Max (CPU) memory: 313 MB, Max (CPU) time: 00:00:12

INFO (EXTHPY-175) : Output generation started at Thu Dec  7 19:25:06 2023.

INFO (EXTSNZ-156) :    0%

WARNING (EXTGRMP-574) : There are 94 unrouted nets. 
Please check file *.incompletenets in your output directory for details.

INFO (EXTHPY-176) : Output generation completed successfully at Thu Dec  7 19:25:07 2023 with 2 CPU(s).

INFO (EXTHPY-249) : Output generation:
 Duration: 00:00:01, Max (Total) memory: 321 MB
 Max (CPU) memory: 313 MB, Max (CPU) time: 00:00:01

INFO (EXTHPY-143) : ---Summary of Stage Duration
 Preprocessing stage:
 Duration: 00:00:09, Max (Total) memory: 301 MB
 Max (CPU) memory: 249 MB, Max (CPU) time: 00:00:03
 Capacitance extraction:
 Duration: 00:00:12, Max (Total) memory: 466 MB
 Max (CPU) memory: 313 MB, Max (CPU) time: 00:00:12
 Output generation:
 Duration: 00:00:01, Max (Total) memory: 321 MB
 Max (CPU) memory: 313 MB, Max (CPU) time: 00:00:01

INFO (EXTGRMP-103) : NOTE: Using advanced paramter1: 1013

INFO (EXTGRMP-103) : NOTE: Using advanced paramter2: 1.3

INFO (EXTGRMP-103) : NOTE: Using advanced paramter3: YES

INFO (EXTHPY-254) : Extraction completed successfully at Thu Dec  7 19:25:07 2023.

Warning message summary: 

Message Code(ID)   Count     Message
=================|=========|=======================================================================================================================
EXTGRMP-103       1          Maximum size of the process stack (stacksize) on host arc-schaumont-class-vm is 32505856 bytes. Set it to a large value, preferably unlimited, to avoid any unexpected issues.

---------------------------------------------------------------------------------------------------------------------------------------------------
EXTGRMP-184       1          Gray-box mode -type lef_obstruction was selected for extraction, but 68 macro definitions did not include any obstruction data in LEF. The first 10 macros are:
 ANTENNA CLKINVX1 CLKINVX12 CLKINVX16 CLKINVX2 CLKINVX20 CLKINVX3 CLKINVX4 CLKINVX6 CLKINVX8
Check the library inputs and log files from library setup to determine whether there is a problem.
---------------------------------------------------------------------------------------------------------------------------------------------------
EXTGRMP-330       4          LEF layer "PWdummy" is not mapped with any tech file layer. Ignoring its definition. 
An error will be issued if its definition is required.
---------------------------------------------------------------------------------------------------------------------------------------------------
EXTGRMP-414       1          No GDSII/OASIS file is specified. Setting graybox type as LEF_OBSTRUCTION.
---------------------------------------------------------------------------------------------------------------------------------------------------
EXTGRMP-574       1          There are 94 unrouted nets. 
Please check file *.incompletenets in your output directory for details.
---------------------------------------------------------------------------------------------------------------------------------------------------
EXTGRMP-605       4          Layer "PWdummy" will not be extracted and will be ignored.
---------------------------------------------------------------------------------------------------------------------------------------------------
 

TOTAL WARNINGS: 12 
TOTAL ERRORS: 0 
---------------------------------------------------------------------------------------------------------------------------------------------------
----

Ending at 2023-Dec-07 19:25:08 (2023-Dec-08 00:25:08 GMT).

 Tool:                    Cadence Quantus Extraction 64-bit
 Version:                 22.1.1-p041 Mon Apr 17 07:53:34 PDT 2023
 IR Build No:             041 
 Techfile:               
/tmp/innovus_temp_31472_arc-schaumont-class-vm_ebapinis_EhuNvd/tmp_qrc_miD0rV/_qrc_techdir/default_rc/qrcTechFile
; version: 8.1.1-p004 
 License(s) used:         1 of QTS300, 1 of QTS310 
 User Name:               ebapinis
 Host Name:               arc-schaumont-class-vm
 Host OS Release:         Linux 3.10.0-1160.99.1.el7.x86_64
 Host OS Version:         #1 SMP Thu Aug 10 10:46:21 EDT 2023
 CPU Model Name:          Intel Xeon Processor (Cascadelake)
 L1d Cache:               32K
 L1i Cache:               32K
 L2 Cache:                4096K
 L3 Cache:                16384K
 Memory:                  15 GB
 Run duration:            00:00:16 CPU time, 00:00:23 clock time
 Max (Total) memory used: 466 MB
 Max (CPU) memory used:   313 MB
 Max Temp-Directory used: 36 MB
 Nets/hour:               7211K nets/CPU-hr, 5016K nets/clock-hr
 Design data:
    Components:           55022
    Phy components:       31232
    Nets:                 32051
    Unconnected pins:     94
 Warning messages:        12
 Error messages:          0

Exit code 0.
Cadence Quantus Extraction completed successfully at 2023-Dec-07 19:25:08
(2023-Dec-08 00:25:08 GMT).
*** qrc completed. ***
Begin read_parasitics... (cpu: 0:00:00.0 real: 0:00:00.0 mem: 2956.637M)
Following parasitics specified for RC corner default_rc:
	/tmp/innovus_temp_31472_arc-schaumont-class-vm_ebapinis_EhuNvd/tmp_qrc_miD0rV/filter_top.spef.gz (spef)
		Cell filter_top has spef /tmp/innovus_temp_31472_arc-schaumont-class-vm_ebapinis_EhuNvd/tmp_qrc_miD0rV/filter_top.spef.gz specified
Start spef parsing (MEM=2938.91).
Spef file '/tmp/innovus_temp_31472_arc-schaumont-class-vm_ebapinis_EhuNvd/tmp_qrc_miD0rV/filter_top.spef.gz' reading completed:: 10 %
Spef file '/tmp/innovus_temp_31472_arc-schaumont-class-vm_ebapinis_EhuNvd/tmp_qrc_miD0rV/filter_top.spef.gz' reading completed:: 20 %
Spef file '/tmp/innovus_temp_31472_arc-schaumont-class-vm_ebapinis_EhuNvd/tmp_qrc_miD0rV/filter_top.spef.gz' reading completed:: 30 %
Spef file '/tmp/innovus_temp_31472_arc-schaumont-class-vm_ebapinis_EhuNvd/tmp_qrc_miD0rV/filter_top.spef.gz' reading completed:: 40 %
Spef file '/tmp/innovus_temp_31472_arc-schaumont-class-vm_ebapinis_EhuNvd/tmp_qrc_miD0rV/filter_top.spef.gz' reading completed:: 50 %
Spef file '/tmp/innovus_temp_31472_arc-schaumont-class-vm_ebapinis_EhuNvd/tmp_qrc_miD0rV/filter_top.spef.gz' reading completed:: 60 %
Spef file '/tmp/innovus_temp_31472_arc-schaumont-class-vm_ebapinis_EhuNvd/tmp_qrc_miD0rV/filter_top.spef.gz' reading completed:: 70 %
Spef file '/tmp/innovus_temp_31472_arc-schaumont-class-vm_ebapinis_EhuNvd/tmp_qrc_miD0rV/filter_top.spef.gz' reading completed:: 80 %
Spef file '/tmp/innovus_temp_31472_arc-schaumont-class-vm_ebapinis_EhuNvd/tmp_qrc_miD0rV/filter_top.spef.gz' reading completed:: 90 %
SPEF file /tmp/innovus_temp_31472_arc-schaumont-class-vm_ebapinis_EhuNvd/tmp_qrc_miD0rV/filter_top.spef.gz.
Number of Resistors     : 152054
Number of Ground Caps   : 149258
Number of Coupling Caps : 30886

End spef parsing (MEM=2706.93 CPU=0:00:01.6 REAL=0:00:01.0).
Cell filter_top, hinst 
Done read_parasitics... (cpu: 0:00:02.1 real: 0:00:01.0 mem: 2706.926M)
@file 148:
@file 149: # Generate RC spefs  for WC_rc & BC_rc corners
@@file 150: write_parasitics -rc_corner default_rc -spef_file out/design_default_rc.spef
RC Out has the following PVT Info:
   RC:default_rc, Operating temperature 125 C
Dumping Spef file.....
Printing D_NET...
rcOut completed:: 9 % rcOut completed:: 19 % rcOut completed:: 29 % rcOut completed:: 39 % rcOut completed:: 49 % rcOut completed:: 59 % rcOut completed:: 69 % rcOut completed:: 79 % rcOut completed:: 89 % rcOut completed:: 100 % 
RC Out from RCDB Completed (CPU Time= 0:00:01.0  MEM= 2716.9M)
@file 151:
@file 152: #-----------------------------------------------------------------------
@file 153: ## Saving verilog netlist, delays, constraints
@file 154: #-----------------------------------------------------------------------
@@file 155: write_netlist out/design.v
Writing Netlist "out/design.v" ...
@@file 156: write_sdf out/design.sdf
**WARN: (SDF-808):	The software is currently operating in a high performance mode which optimizes the handling of multiple timing arcs between input and output pin pairs. With the current settings, the SDF file generated will contain the same delay information for all of these arcs. To have the SDF recalculated with explicit pin pair data, you should use the option '-recompute_delay_calc'. This setting is recommended for generating SDF for functional  simulation applications.
AAE_INFO: opIsDesignInPostRouteState() is 1
AAE_INFO: resetNetProps viewIdx 0 
Starting SI iteration 1 using Infinite Timing Windows
#################################################################################
# Design Stage: PostRoute
# Design Name: filter_top
# Design Mode: 45nm
# Analysis Mode: MMMC OCV 
# Parasitics Mode: SPEF/RCDB 
# Signoff Settings: SI On 
#################################################################################
AAE_INFO: 1 threads acquired from CTE.
Start delay calculation (fullDC) (1 T). (MEM=2714.93)
Total number of fetched objects 32145
AAE_INFO: Total number of nets for which stage creation was skipped for all views 0
AAE_INFO-618: Total number of nets in the design is 32215,  100.0 percent of the nets selected for SI analysis
End delay calculation. (MEM=2729.28 CPU=0:00:06.7 REAL=0:00:07.0)
End delay calculation (fullDC). (MEM=2729.28 CPU=0:00:07.1 REAL=0:00:07.0)
Loading CTE timing window with TwFlowType 0...(CPU = 0:00:00.0, REAL = 0:00:00.0, MEM = 2729.3M)
Add other clocks and setupCteToAAEClockMapping during iter 1
Loading CTE timing window is completed (CPU = 0:00:00.1, REAL = 0:00:00.0, MEM = 2729.3M)
Starting SI iteration 2
Start delay calculation (fullDC) (1 T). (MEM=2650.28)
Glitch Analysis: View func_default -- Total Number of Nets Skipped = 214. 
Glitch Analysis: View func_default -- Total Number of Nets Analyzed = 32145. 
Total number of fetched objects 32145
AAE_INFO: Total number of nets for which stage creation was skipped for all views 0
AAE_INFO-618: Total number of nets in the design is 32215,  0.6 percent of the nets selected for SI analysis
End delay calculation. (MEM=2692.96 CPU=0:00:00.3 REAL=0:00:00.0)
End delay calculation (fullDC). (MEM=2692.96 CPU=0:00:00.4 REAL=0:00:00.0)
@@file 157: write_sdc out/design.sdc
@file 158:
@file 159: #-----------------------------------------------------------------------
@file 160: ## Save the design
@file 161: #-----------------------------------------------------------------------
@@file 162: write_db out/final_route.db
default_tc
The in-memory database contained RC information but was not saved. To save 
the RC information, use write_db's -rc_extract option. Note: Saving RC information can be quite large, 
so it should only be saved when it is really desired.
#% Begin save design ... (date=12/07 19:25:22, mem=2061.4M)
% Begin Save ccopt configuration ... (date=12/07 19:25:22, mem=2061.4M)
% End Save ccopt configuration ... (date=12/07 19:25:23, total cpu=0:00:00.0, real=0:00:00.0, peak res=2062.4M, current mem=2062.4M)
% Begin Save netlist data ... (date=12/07 19:25:23, mem=2062.4M)
Writing Binary DB to out/final_route.db/filter_top.v.bin in single-threaded mode...
% End Save netlist data ... (date=12/07 19:25:23, total cpu=0:00:00.0, real=0:00:00.0, peak res=2062.5M, current mem=2062.5M)
Saving symbol-table file ...
Saving congestion map file out/final_route.db/filter_top.route.congmap.gz ...
% Begin Save AAE data ... (date=12/07 19:25:23, mem=2062.6M)
Saving AAE Data ...
% End Save AAE data ... (date=12/07 19:25:23, total cpu=0:00:00.0, real=0:00:00.0, peak res=2062.7M, current mem=2062.7M)
Saving preference file out/final_route.db/gui.pref.tcl ...
Saving mode setting ...
Saving root attributes to be loaded post write_db ...
Saving global file ...
Saving root attributes to be loaded previous write_db ...
% Begin Save floorplan data ... (date=12/07 19:25:25, mem=2092.0M)
Saving floorplan file ...
% End Save floorplan data ... (date=12/07 19:25:25, total cpu=0:00:00.1, real=0:00:00.0, peak res=2092.0M, current mem=2092.0M)
Saving PG file out/final_route.db/filter_top.pg.gz, version#2, (Created by Innovus v21.18-s099_1 on Thu Dec  7 19:25:25 2023)
*** Completed savePGFile (cpu=0:00:00.0 real=0:00:00.0 mem=2633.3M) ***
Saving Drc markers ...
... No Drc file written since there is no markers found.
% Begin Save placement data ... (date=12/07 19:25:25, mem=2092.1M)
** Saving stdCellPlacement_binary (version# 2) ...
Save Adaptive View Pruning View Names to Binary file
% End Save placement data ... (date=12/07 19:25:25, total cpu=0:00:00.0, real=0:00:00.0, peak res=2092.2M, current mem=2092.2M)
% Begin Save routing data ... (date=12/07 19:25:25, mem=2092.2M)
Saving route file ...
*** Completed saveRoute (cpu=0:00:00.3 real=0:00:01.0 mem=2633.3M) ***
% End Save routing data ... (date=12/07 19:25:26, total cpu=0:00:00.3, real=0:00:01.0, peak res=2092.2M, current mem=2092.2M)
Saving property file out/final_route.db/filter_top.prop
*** Completed saveProperty (cpu=0:00:00.0 real=0:00:00.0 mem=2636.3M) ***
#Saving pin access data to file out/final_route.db/filter_top.apa ...
#
Saving preRoute extracted patterns in file 'out/final_route.db/filter_top.techData.gz' ...
Saving preRoute extraction data in directory 'out/final_route.db/extraction/' ...
% Begin Save power constraints data ... (date=12/07 19:25:26, mem=2095.0M)
% End Save power constraints data ... (date=12/07 19:25:26, total cpu=0:00:00.0, real=0:00:00.0, peak res=2095.1M, current mem=2095.1M)
default_rc
default_rc
default_rc
Generated self-contained design final_route.db
#% End save design ... (date=12/07 19:25:26, total cpu=0:00:02.7, real=0:00:04.0, peak res=2096.5M, current mem=2096.5M)
*** Message Summary: 0 warning(s), 0 error(s)

@file 163:
@file 164: #--------------------------------
@file 165: # report core area
@file 166: #--------------------------------
@file 167:
@file 168: set xl [get_db current_design .core_bbox.ll.x]
@file 169: set xu [get_db current_design .core_bbox.ur.x]
@file 170: set yl [get_db current_design .core_bbox.ll.y]
@file 171: set yu [get_db current_design .core_bbox.ur.y]
@file 172:
@file 173: puts "FINAL DESIGN CORE AREA:"
FINAL DESIGN CORE AREA:
@file 174: puts [expr ($xu - $xl)*($yu - $yl)]
98322.606
@file 175:
@file 176:
@file 177:
#@ End verbose source: run_innovus.tcl
@innovus 2> **INFO (INTERRUPT): One more Ctrl-C to exit Innovus ...
Innovus terminated by user interrupt.

*** Memory Usage v#1 (Current mem = 2683.613M, initial mem = 487.109M) ***
*** Message Summary: 45 warning(s), 2 error(s)

--- Ending "Innovus" (totcpu=0:16:24, real=0:17:11, mem=2683.6M) ---
